import{eigendata,uVectors}from"./data.min.js";import{VSingularValues,VU,VW}from"./vData.min.js";import{showPage}from"/scripts/src/loadPage.min.js";import{$}from"/scripts/src/main.min.js";import{Slider}from"/scripts/src/sliders.min.js";import{Wilson}from"/scripts/wilson.min.js";async function load(){{const s=new Wilson($("#v-canvas"),{renderer:"cpu",canvasWidth:400,canvasHeight:300}),o=new Array(s.canvasHeight);for(let a=0;a<s.canvasHeight;a++)o[a]=new Array(s.canvasWidth);const t=new Slider({element:$("#depth-slider"),name:"Depth",value:100,min:1,max:200,integer:!0,logarithmic:!0,onInput:function(){e(t.value)}});function e(depth=200){for(let r=0;r<s.canvasHeight;r++)for(let e=0;e<s.canvasWidth;e++)for(let a=o[r][e]=0;a<depth;a++)o[r][e]+=VSingularValues[a]*VU[r][a]*VW[e][a];var e=o,t=new Uint8ClampedArray(s.canvasWidth*s.canvasHeight*4);for(let i=0;i<s.canvasHeight;i++)for(let a=0;a<s.canvasWidth;a++){var n=4*(s.canvasWidth*i+a);t[n]=e[i][a],t[1+n]=e[i][a],t[2+n]=e[i][a],t[3+n]=255}s.ctx.putImageData(new ImageData(t,s.canvasWidth,s.canvasHeight),0,0)}e()}{const m=44,d=new Wilson($("#eigenface-canvas"),{renderer:"cpu",canvasWidth:100,canvasHeight:100}),v=d.canvasHeight*d.canvasWidth*4,g=new Array(m),f=new Slider({element:$("#index-slider"),name:"Face",value:0,min:0,max:m-1,onInput:a}),u=new Slider({element:$("#depth-2-slider"),name:"Depth",value:1,min:1,max:m,onInput:a});function a(){var e,[a,t=m]=[f.value,u.value],r=new Array(v),n=new Array(m),i=Math.floor(a);for(let c=0;c<m;c++)n[c]=(1-(a-i))*Math.sqrt(eigendata[c][0])*eigendata[c][1][i]/m,a<m-1&&(n[c]+=(a-i)*Math.sqrt(eigendata[c][0])*eigendata[c][1][i+1]/m);for(let h=0;h<v;h++){for(let a=r[h]=0;a<Math.floor(t);a++)r[h]+=n[a]*uVectors[a][h]/g[a];t<m-1&&(e=Math.floor(t),r[h]+=(t-e)*n[e]*uVectors[e][h]/g[e])}{var s,o=[...r];let a=0,e=0;for(let t=0;t<o.length;t+=4)a=Math.max(a,o[t]),a=Math.max(a,o[t+1]),a=Math.max(a,o[t+2]),e=Math.min(e,o[t]),e=Math.min(e,o[t+1]),e=Math.min(e,o[t+2]);for(let n=0;n<o.length;n+=4)o[n]=(o[n]-e)/(a-e)*255,o[n+1]=(o[n+1]-e)/(a-e)*255,o[n+2]=(o[n+2]-e)/(a-e)*255,o[n+3]=255;var l=new ImageData(new Uint8ClampedArray(o),d.canvasWidth,d.canvasHeight);d.ctx.putImageData(l,0,0)}}setTimeout(()=>a(),100);for(let t=0;t<m;t++){let a=0;for(let e=0;e<v;e++)a+=uVectors[t][e]*uVectors[t][e];g[t]=Math.sqrt(a)}}showPage()}export{load};