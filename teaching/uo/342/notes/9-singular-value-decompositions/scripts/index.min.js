import{eigendata,uVectors}from"./data.min.js";import{VSingularValues,VU,VW}from"./vData.min.js";import{showPage}from"/scripts/src/loadPage.min.js";import{$}from"/scripts/src/main.min.js";import{Slider}from"/scripts/src/sliders.min.js";import{Wilson}from"/scripts/wilson.min.js";async function load(){{const s=new Wilson($("#v-canvas"),{renderer:"cpu",canvasWidth:400,canvasHeight:300}),o=new Array(s.canvasHeight);for(let a=0;a<s.canvasHeight;a++)o[a]=new Array(s.canvasWidth);const t=new Slider({element:$("#depth-slider"),name:"Depth",value:100,min:1,max:200,integer:!0,logarithmic:!0,onInput:function(){e(t.value)}});function e(depth=200){for(let r=0;r<s.canvasHeight;r++)for(let e=0;e<s.canvasWidth;e++)for(let a=o[r][e]=0;a<depth;a++)o[r][e]+=VSingularValues[a]*VU[r][a]*VW[e][a];var e=o,t=new Uint8ClampedArray(s.canvasWidth*s.canvasHeight*4);for(let i=0;i<s.canvasHeight;i++)for(let a=0;a<s.canvasWidth;a++){var n=4*(s.canvasWidth*i+a);t[n]=e[i][a],t[1+n]=e[i][a],t[2+n]=e[i][a],t[3+n]=255}s.ctx.putImageData(new ImageData(t,s.canvasWidth,s.canvasHeight),0,0)}e()}{const l=44,h=new Wilson($("#eigenface-canvas"),{renderer:"cpu",canvasWidth:100,canvasHeight:100}),m=h.canvasHeight*h.canvasWidth*4,v=new Array(l),d=new Slider({element:$("#index-slider"),name:"Face",value:0,min:0,max:l-1,integer:!0,onInput:a}),g=new Slider({element:$("#depth-2-slider"),name:"Depth",value:1,min:1,max:l,integer:!0,onInput:a});function a(){var[a,e=l]=[d.value,g.value],r=new Array(m),t=new Array(l);for(let n=0;n<l;n++)t[n]=Math.sqrt(eigendata[n][0])*eigendata[n][1][a]/l;for(let c=0;c<m;c++)for(let a=r[c]=0;a<e;a++)r[c]+=t[a]*uVectors[a][c]/v[a];{var i,s=[...r];let a=0,e=0;for(let t=0;t<s.length;t+=4)a=Math.max(a,s[t]),a=Math.max(a,s[t+1]),a=Math.max(a,s[t+2]),e=Math.min(e,s[t]),e=Math.min(e,s[t+1]),e=Math.min(e,s[t+2]);for(let n=0;n<s.length;n+=4)s[n]=(s[n]-e)/(a-e)*255,s[n+1]=(s[n+1]-e)/(a-e)*255,s[n+2]=(s[n+2]-e)/(a-e)*255,s[n+3]=255;var o=new ImageData(new Uint8ClampedArray(s),h.canvasWidth,h.canvasHeight);h.ctx.putImageData(o,0,0)}}setTimeout(()=>a(),100);for(let t=0;t<l;t++){let a=0;for(let e=0;e<m;e++)a+=uVectors[t][e]*uVectors[t][e];v[t]=Math.sqrt(a)}}showPage()}export{load};