import{A,eigendata,uVectors}from"./data.min.js";import{DownloadButton}from"/scripts/src/buttons.min.js";import{showPage}from"/scripts/src/loadPage.min.js";import{$}from"/scripts/src/main.min.js";import{Slider}from"/scripts/src/sliders.min.js";import{Wilson}from"/scripts/wilson.min.js";async function load(){const m=new Wilson($("#output-canvas"),{renderer:"cpu",canvasWidth:162,canvasHeight:200}),c=m.canvasHeight*m.canvasWidth*4,h=new Array(21),d=(new DownloadButton({element:$("#download-button"),wilson:m,filename:"eigenface.png"}),new Slider({element:$("#index-slider"),name:"Face",value:0,min:0,max:20,integer:!0,onInput:t})),p=new Slider({element:$("#depth-slider"),name:"Depth",value:1,min:1,max:21,integer:!0,onInput:t});function t(){var[t,e=21]=[d.value,p.value],o=new Array(c),a=new Array(21);for(let n=0;n<21;n++)a[n]=Math.sqrt(eigendata[n][0])*eigendata[n][1][t]/21;for(let r=0;r<c;r++)for(let t=o[r]=0;t<e;t++)o[r]+=a[t]*uVectors[t][r]/h[t];{var i,s=[...o];let t=0,e=0;for(let a=0;a<s.length;a+=4)t=Math.max(t,s[a]),t=Math.max(t,s[a+1]),t=Math.max(t,s[a+2]),e=Math.min(e,s[a]),e=Math.min(e,s[a+1]),e=Math.min(e,s[a+2]);for(let n=0;n<s.length;n+=4)t=Math.max(t,s[n]),t=Math.max(t,s[n+1]),t=Math.max(t,s[n+2]),e=Math.min(e,s[n]),e=Math.min(e,s[n+1]),e=Math.min(e,s[n+2]);for(let r=0;r<s.length;r+=4)s[r]=(s[r]-e)/(t-e)*255,s[r+1]=(s[r+1]-e)/(t-e)*255,s[r+2]=(s[r+2]-e)/(t-e)*255,s[r+3]=255;var l=new ImageData(new Uint8ClampedArray(s),m.canvasWidth,m.canvasHeight);m.ctx.putImageData(l,0,0)}}showPage(),t();for(let a=0;a<21;a++){let t=0;for(let e=0;e<c;e++)t+=uVectors[a][e]*uVectors[a][e];h[a]=Math.sqrt(t)}}export{load};