### image-links
	glsl-docs c GLSL Card
###

### card glsl-docs Complex GLSL Documentation
			
	These functions implement many common operations on complex numbers, as well as a handful of more complicated number-theoretic functions. Unless otherwise specified, `float`s refer to real numbers and `vec2`s to complex ones.
	
	## Constants
	
	`ZERO = vec2(0.0, 0.0)`.
	
	`ONE = vec2(1.0, 0.0)`.
	
	`I = i = vec2(0.0, 1.0)`.
	
	
	
	## Arithmetic Functions
	
	`[float | vec2] cadd([float | vec2] z, [float | vec2] w)`: returns $z + w$.
	
	`[float | vec2] csub([float | vec2] z, [float | vec2] w)`: returns $z - w$.
	
	`[float | vec2] cmul([float | vec2] z, [float | vec2] w)`: returns $zw$.
	
	`[float | vec2] cdiv([float | vec2] z, [float | vec2] w)`: returns $\dfrac{z}{w}$.
	
	`[float | vec2] cinv([float | vec2] z)`: returns $\frac{1}{z}$.
	
	`float cabs([float | vec2] z)`: returns $|z|$, where e.g. $|3 + 4i| = 5$.
	
	`float cmag([float | vec2] z)`: returns $|z|^2$. Avoids taking a square root to compute $|z|$.
	
	`float carg([float | vec2] z)`: returns the principal argument of $z$, i.e. the angle in $(-\pi, \pi]$ that $z$ makes with the positive $x$-axis.
	
	`[float | vec2] cconj([float | vec2] z)`: returns $\overline{z}$, the complex conjugate of $z$.
	
	`[float | vec2] csign([float | vec2] z)`: returns the normalized vector $\dfrac{z}{|z|}$, generalizing the sign function on the real numbers.
	
	
	
	## Exponential Functions
	
	`[float | vec2] cpow([float | vec2] z, [float | vec2] w)`: returns $z^w$. If both $z$ and $w$ are real but the power is complex, at least one of the two must be passed in as a `vec2`.
	
	`vec2 cpow_logz(float z, float logz, float w)`: returns $z^w$. Saves operations in the case $\log(z)$ is already known. Requires $z > 0$.
	
	`vec2 csqrt([float | vec2] z)`: returns $\sqrt{z}$.
	
	`[float | vec2] cexp([float | vec2] z)`: returns $e^z$.
	
	`[float | vec2] clog([float | vec2] z)`: returns $\log(z)$, the natural log of $z$.
	
	`[float | vec2] ctet([float | vec2] z, float w)`: returns $z \uparrow\uparrow w$, e.g. $2 \uparrow\uparrow 3 = 2^{2^2} = 16$.
	
	`int powermod(int a, int b, int c)`: returns $a^b \mod c$.
	
	
	
	## Trigonometric Functions
	
	All six standard trigonometric functions are implemented, along with their inverses, hyperbolic versions, and hyperbolic inverses. For example, `csin(z)` returns $\sin(z)$, `casin(z)` returns $\arcsin(z)$, `csinh(z)` returns $\sinh(z)$, and `casinh(z)` returns $\operatorname{arcsinh}(z)$.
	
	`[float | vec2] c[a]sin[h]([float | vec2] z)`.
	
	`[float | vec2] c[a]cos[h]([float | vec2] z)`.
	
	`[float | vec2] c[a]tan[h]([float | vec2] z)`.
	
	`[float | vec2] c[a]csc[h]([float | vec2] z)`.
	
	`[float | vec2] c[a]sec[h]([float | vec2] z)`.
	
	`[float | vec2] c[a]cot[h]([float | vec2] z)`.
	
	
	
	## Combinatorial Functions
	
	`float factorial([int | float] n)`: returns $n!$.
	
	`float binomial([int | float] n, [int | float] k)`: returns $\displaystyle \binom{n}{k}$.
	
	`float divisor(float n, float k = 1.0)`: returns the sum of all $k$th powers of divisors of $n$.
	
	`float bernoulli(float n)`: returns the $n$th Bernoulli number $B_n$.
	
	`float rising_factorial(float a, [int | float] n)`: returns $(a)(a + 1)\cdots(a+n-1)$.
	
	
	
	## Number-Theoretic Functions
	
	`[float | vec2] zeta([float | vec2] z)`: returns $\zeta(z)$, where $\zeta$ is the Riemann zeta function.
	
	`vec2 hurwitz_zeta(vec2 z, [float | vec2] a)`: returns $\zeta(z, a)$, where $\zeta$ is the Hurwitz zeta function, a generalization of the Riemann zeta function.
	
	`vec2 su3_character([int | float] p, [int | float] p, vec2 z)`: returns the character of the irreducible $SU(3)$ representation with highest weight $(p, q)$.
	
	`[float | vec2] gamma([int | float | vec2] a)`: returns $\Gamma(a)$, where $\Gamma$ is the gamma function, a generalization of the factorial operation.
	
	`vec2 digamma(vec2 a)`: returns the logarithmic derivative of the $\Gamma$ function, i.e. $\dfrac{\Gamma'(a)}{\Gamma(a)}$.
	
	`vec2 polygamma([int | float] n, vec2 a)`: returns the $(n + 1)$st logarithmic derivative of the $\Gamma$ function at $a$.
	
	`vec2 hypergeometric2f1(float a, float b, float c, [float | vec2] z)`: returns the hypergeometric function $_2F_1(a, b; c; z)$.
	
	`vec2 hypergeometricf2(float a, float b1, float b2, float c1, float c2, [float | vec2] x, [float | vec2] y)`: returns the hypergeometric function $F_2(a, b_1, b_2; c_1, c_2; x, y)$. The types of $x$ and $y$ must match.
	
	`vec2 hypergeometricg2(float b1, float b2, float c1, float c2, [float | vec2] x, [float | vec2] y)`: returns the hypergeometric function $G_2(b_1, b_2; c_1, c_2; x, y)$. The types of $x$ and $y$ must match.
	
	`vec2 hypergeometricf1(float a, float b1, float b2, float c, [float | vec2] x, [float | vec2] y)`: returns the hypergeometric function $F_1(b_1, b_2; c_1, c_2; x, y)$. The types of $x$ and $y$ must match.
	
###