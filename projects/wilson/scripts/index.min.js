import{showPage}from"../../../scripts/src/loadPage.min.js";import{$,addTemporaryListener}from"/scripts/src/main.min.js";import{redirect}from"/scripts/src/navigation.min.js";import{Wilson}from"/scripts/wilson.min.js";function load(){var e=`
		precision highp float;
		
		varying vec2 uv;
		
		uniform float aspectRatio;
		
		uniform float worldCenterX;
		uniform float worldCenterY;
		uniform float worldSize;
		
		uniform float a;
		uniform float b;
		uniform float brightnessScale;
		
		
		
		void main(void)
		{
			vec2 z;
			
			if (aspectRatio >= 1.0)
			{
				z = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);
			}
			
			else
			{
				z = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);
			}
			
			vec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));
			float brightness = exp(-length(z));
			
			
			
			vec2 c = vec2(a, b);
			
			for (int iteration = 0; iteration < 100; iteration++)
			{
				if (iteration == 99)
				{
					gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
					return;
				}
				
				if (length(z) >= 10.0)
				{
					break;
				}
				
				z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;
				
				brightness += exp(-length(z));
			}
			
			
			gl_FragColor = vec4(brightness / brightnessScale * color, 1.0);
		}
	`,t={renderer:"gpu",shader:e,canvasWidth:1e3,canvasHeight:1e3,worldWidth:4,worldHeight:4,worldCenterX:0,worldCenterY:0,useDraggables:!0,draggablesMousemoveCallback:S,draggablesTouchmoveCallback:S,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:j,mousedownCallback:F,touchstartCallback:F,mousedragCallback:X,touchmoveCallback:X,mouseupCallback:Y,touchendCallback:Y,wheelCallback:function(x,y,scrollAmount,event){u=x,w=y,Math.abs(scrollAmount/100)<.3?(l+=scrollAmount/100,l=Math.min(l,1)):p+=.05*Math.sign(scrollAmount);H()},pinchCallback:function(x,y,touchDistanceDelta,event){m=1<=i?(l-=touchDistanceDelta/n.worldWidth*10,-touchDistanceDelta/n.worldWidth*10):(l-=touchDistanceDelta/n.worldHeight*10,-touchDistanceDelta/n.worldHeight*10);l=Math.min(l,1),u=x,w=y,H()}},e={renderer:"gpu",shader:e,canvasWidth:100,canvasHeight:100};const n=new Wilson($("#output-canvas"),t);n.render.initUniforms(["aspectRatio","worldCenterX","worldCenterY","worldSize","a","b","brightnessScale"]);n.draggables.add(0,1);const a=new Wilson($("#hidden-canvas"),e);a.render.initUniforms(["aspectRatio","worldCenterX","worldCenterY","worldSize","a","b","brightnessScale"]),n.canvas.parentNode.parentNode.style.setProperty("margin-bottom",0,"important"),a.canvas.parentNode.parentNode.style.setProperty("margin-top",0,"important");let i=1,l=0,s=0,d=1,r=1e3;const c=100;let u=0,w=0,o=0,h=0,m=0,g=0,f=0,p=0;const v=.96,b=.005,C=5e-4,M=.93,z=.01,k=.001;let W=-1;const D=$("#resolution-input");function S(activeDraggable,x,y,event){s=x,d=y,window.requestAnimationFrame(L)}function F(x,y,event){g=0,f=0,p=0,o=0,h=0,m=0}function X(x,y,xDelta,yDelta,event){n.worldCenterX-=xDelta,n.worldCenterY-=yDelta,o=-xDelta,h=-yDelta,n.worldCenterX=Math.min(Math.max(n.worldCenterX,-2),2),n.worldCenterY=Math.min(Math.max(n.worldCenterY,-2),2),window.requestAnimationFrame(L),n.draggables.recalculateLocations()}function Y(x,y,event){Math.sqrt(o*o+h*h)>=b*Math.min(n.worldWidth,n.worldHeight)&&(g=o,f=h),Math.abs(m)>=z&&(p=m),window.requestAnimationFrame(L)}function H(){var e;1<=i?(e=n.input.getZoomedWorldCenter(u,w,4*Math.pow(2,l)*i,4*Math.pow(2,l)),n.worldWidth=4*Math.pow(2,l)*i,n.worldHeight=4*Math.pow(2,l),n.worldCenterX=e[0],n.worldCenterY=e[1]):(e=n.input.getZoomedWorldCenter(u,w,4*Math.pow(2,l),4*Math.pow(2,l)/i),n.worldWidth=4*Math.pow(2,l),n.worldHeight=4*Math.pow(2,l)/i,n.worldCenterX=e[0],n.worldCenterY=e[1]),window.requestAnimationFrame(L),n.draggables.recalculateLocations()}function L(timestamp){var t=timestamp-W;if(W=timestamp,0!=t){a.gl.uniform1f(a.uniforms.worldCenterX,n.worldCenterX),a.gl.uniform1f(a.uniforms.worldCenterY,n.worldCenterY),a.gl.uniform1f(a.uniforms.worldSize,Math.min(n.worldHeight,n.worldWidth)/2),a.gl.uniform1f(a.uniforms.a,s),a.gl.uniform1f(a.uniforms.b,d),a.gl.uniform1f(a.uniforms.brightnessScale,20),a.render.drawFrame();var r=a.render.getPixelData(),o=new Array(c*c);for(let e=0;e<c*c;e++)o[e]=r[4*e]+r[4*e+1]+r[4*e+2];o.sort((a,b)=>a-b);t=o[Math.floor(c*c*.98)]/255*18,t=Math.max(t,.1);n.gl.uniform1f(n.uniforms.aspectRatio,i),n.gl.uniform1f(n.uniforms.worldCenterX,n.worldCenterX),n.gl.uniform1f(n.uniforms.worldCenterY,n.worldCenterY),n.gl.uniform1f(n.uniforms.worldSize,Math.min(n.worldHeight,n.worldWidth)/2),n.gl.uniform1f(n.uniforms.a,s),n.gl.uniform1f(n.uniforms.b,d),n.gl.uniform1f(n.uniforms.brightnessScale,t),n.render.drawFrame(),0===g&&0===f&&0===p||(n.worldCenterX+=g,n.worldCenterY+=f,n.worldCenterX=Math.min(Math.max(n.worldCenterX,-2),2),n.worldCenterY=Math.min(Math.max(n.worldCenterY,-2),2),g*=v,f*=v,Math.sqrt(g*g+f*f)<C*Math.min(n.worldWidth,n.worldHeight)&&(g=0,f=0),l+=p,l=Math.min(l,1),H(u,w),p*=M,Math.abs(p)<k&&(p=0),window.requestAnimationFrame(L),n.draggables.recalculateLocations())}}function j(){n.fullscreen.currentlyFullscreen?1<=(i=window.innerWidth/window.innerHeight)?(n.changeCanvasSize(r,Math.floor(r/i)),n.worldWidth=4*Math.pow(2,l)*i,n.worldHeight=4*Math.pow(2,l)):(n.changeCanvasSize(Math.floor(r*i),r),n.worldWidth=4*Math.pow(2,l),n.worldHeight=4*Math.pow(2,l)/i):(i=1,n.changeCanvasSize(r,r),n.worldWidth=4*Math.pow(2,l),n.worldHeight=4*Math.pow(2,l)),window.requestAnimationFrame(L)}D.addEventListener("input",()=>{r=parseInt(D.value||1e3),n.changeCanvasSize(r,r)}),n.gl.uniform1f(n.uniforms.aspectRatio,1),a.gl.uniform1f(a.uniforms.aspectRatio,1),window.requestAnimationFrame(L),addTemporaryListener({object:window,event:"resize",callback:j}),$("#part-1-button").addEventListener("click",()=>{redirect({url:"/projects/wilson/guide/1-getting-started/"})}),$("#part-2-button").addEventListener("click",()=>{redirect({url:"/projects/wilson/guide/2-draggables/"})}),$("#part-3-button").addEventListener("click",()=>{redirect({url:"/projects/wilson/guide/3-parallelizing/"})}),$("#part-4-button").addEventListener("click",()=>{redirect({url:"/projects/wilson/guide/4-hidden-canvases/"})}),$("#part-5-button").addEventListener("click",()=>{redirect({url:"/projects/wilson/guide/5-fullscreen/"})}),$("#part-6-button").addEventListener("click",()=>{redirect({url:"/projects/wilson/guide/6-interactivity/"})}),$("#docs-button").addEventListener("click",()=>{redirect({url:"/projects/wilson/docs/"})}),$("#download-button").addEventListener("click",()=>{redirect({url:"https://github.com/cruzgodar/wilson/releases",inNewTab:!0})}),showPage()}export{load};