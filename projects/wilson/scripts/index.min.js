!function(){function A(b,f,c,n){w=f;x=c;window.requestAnimationFrame(p)}function B(b,f,c){q=r=t=k=l=m=0}function C(b,f,c,n,H){a.worldCenterX-=c;a.worldCenterY-=n;t=-c;r=-n;a.worldCenterX=Math.min(Math.max(a.worldCenterX,-2),2);a.worldCenterY=Math.min(Math.max(a.worldCenterY,-2),2);window.requestAnimationFrame(p);a.draggables.recalculateLocations()}function D(b,f,c){Math.sqrt(t*t+r*r)>=.005*Math.min(a.worldWidth,a.worldHeight)&&(m=t,l=r);.01<=Math.abs(q)&&(k=q);window.requestAnimationFrame(p)}function y(){if(1<=
g){var b=a.input.getZoomedWorldCenter(u,v,4*Math.pow(2,d)*g,4*Math.pow(2,d));a.worldWidth=4*Math.pow(2,d)*g;a.worldHeight=4*Math.pow(2,d);a.worldCenterX=b[0];a.worldCenterY=b[1]}else b=a.input.getZoomedWorldCenter(u,v,4*Math.pow(2,d),4*Math.pow(2,d)/g),a.worldWidth=4*Math.pow(2,d),a.worldHeight=4*Math.pow(2,d)/g,a.worldCenterX=b[0],a.worldCenterY=b[1];window.requestAnimationFrame(p);a.draggables.recalculateLocations()}function p(b){var f=b-E;E=b;if(0!==f){e.gl.uniform1f(e.uniforms.worldCenterX,a.worldCenterX);
e.gl.uniform1f(e.uniforms.worldCenterY,a.worldCenterY);e.gl.uniform1f(e.uniforms.worldSize,Math.min(a.worldHeight,a.worldWidth)/2);e.gl.uniform1f(e.uniforms.a,w);e.gl.uniform1f(e.uniforms.b,x);e.gl.uniform1f(e.uniforms.brightnessScale,20);e.render.drawFrame();b=e.render.getPixelData();f=Array(1E4);for(let c=0;1E4>c;c++)f[c]=b[4*c]+b[4*c+1]+b[4*c+2];f.sort((c,n)=>c-n);b=f[9800]/255*18;b=Math.max(b,.1);a.gl.uniform1f(a.uniforms.aspectRatio,g);a.gl.uniform1f(a.uniforms.worldCenterX,a.worldCenterX);a.gl.uniform1f(a.uniforms.worldCenterY,
a.worldCenterY);a.gl.uniform1f(a.uniforms.worldSize,Math.min(a.worldHeight,a.worldWidth)/2);a.gl.uniform1f(a.uniforms.a,w);a.gl.uniform1f(a.uniforms.b,x);a.gl.uniform1f(a.uniforms.brightnessScale,b);a.render.drawFrame();if(0!==m||0!==l||0!==k)a.worldCenterX+=m,a.worldCenterY+=l,a.worldCenterX=Math.min(Math.max(a.worldCenterX,-2),2),a.worldCenterY=Math.min(Math.max(a.worldCenterY,-2),2),m*=.96,l*=.96,Math.sqrt(m*m+l*l)<5E-4*Math.min(a.worldWidth,a.worldHeight)&&(l=m=0),d+=k,d=Math.min(d,1),y(u,v),
k*=.93,.001>Math.abs(k)&&(k=0),window.requestAnimationFrame(p),a.draggables.recalculateLocations()}}function z(){a.fullscreen.currentlyFullscreen?(g=window.innerWidth/window.innerHeight,1<=g?(a.changeCanvasSize(h,Math.floor(h/g)),a.worldWidth=4*Math.pow(2,d)*g,a.worldHeight=4*Math.pow(2,d)):(a.changeCanvasSize(Math.floor(h*g),h),a.worldWidth=4*Math.pow(2,d),a.worldHeight=4*Math.pow(2,d)/g)):(g=1,a.changeCanvasSize(h,h),a.worldWidth=4*Math.pow(2,d),a.worldHeight=4*Math.pow(2,d));window.requestAnimationFrame(p)}
let G={renderer:"gpu",shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspectRatio;\n\t\t\n\t\tuniform float worldCenterX;\n\t\tuniform float worldCenterY;\n\t\tuniform float worldSize;\n\t\t\n\t\tuniform float a;\n\t\tuniform float b;\n\t\tuniform float brightnessScale;\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tvec2 z;\n\t\t\t\n\t\t\tif (aspectRatio >= 1.0)\n\t\t\t{\n\t\t\t\tz = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);\n\t\t\t}\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tz = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);\n\t\t\t}\n\t\t\t\n\t\t\tvec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));\n\t\t\tfloat brightness = exp(-length(z));\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvec2 c = vec2(a, b);\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tif (iteration == 99)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (length(z) >= 10.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tz = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n\t\t\t\t\n\t\t\t\tbrightness += exp(-length(z));\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tgl_FragColor = vec4(brightness / brightnessScale * color, 1.0);\n\t\t}\n\t",
canvasWidth:1E3,canvasHeight:1E3,worldWidth:4,worldHeight:4,worldCenterX:0,worldCenterY:0,useDraggables:!0,draggablesMousemoveCallback:A,draggablesTouchmoveCallback:A,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:z,mousedownCallback:B,touchstartCallback:B,mousedragCallback:C,touchmoveCallback:C,mouseupCallback:D,
touchendCallback:D,wheelCallback:function(b,f,c,n){u=b;v=f;.3>Math.abs(c/100)?(d+=c/100,d=Math.min(d,1)):k+=.05*Math.sign(c);y()},pinchCallback:function(b,f,c,n){1<=g?(d-=c/a.worldWidth*10,q=-c/a.worldWidth*10):(d-=c/a.worldHeight*10,q=-c/a.worldHeight*10);d=Math.min(d,1);u=b;v=f;y()}},a=new Wilson($("#output-canvas"),G);a.render.initUniforms("aspectRatio worldCenterX worldCenterY worldSize a b brightnessScale".split(" "));a.draggables.add(0,1);let e=new Wilson($("#hidden-canvas"),{renderer:"gpu",
shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspectRatio;\n\t\t\n\t\tuniform float worldCenterX;\n\t\tuniform float worldCenterY;\n\t\tuniform float worldSize;\n\t\t\n\t\tuniform float a;\n\t\tuniform float b;\n\t\tuniform float brightnessScale;\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tvec2 z;\n\t\t\t\n\t\t\tif (aspectRatio >= 1.0)\n\t\t\t{\n\t\t\t\tz = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);\n\t\t\t}\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tz = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);\n\t\t\t}\n\t\t\t\n\t\t\tvec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));\n\t\t\tfloat brightness = exp(-length(z));\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvec2 c = vec2(a, b);\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tif (iteration == 99)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (length(z) >= 10.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tz = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n\t\t\t\t\n\t\t\t\tbrightness += exp(-length(z));\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tgl_FragColor = vec4(brightness / brightnessScale * color, 1.0);\n\t\t}\n\t",
canvasWidth:100,canvasHeight:100});e.render.initUniforms("aspectRatio worldCenterX worldCenterY worldSize a b brightnessScale".split(" "));a.canvas.parentNode.parentNode.style.setProperty("margin-bottom",0,"important");e.canvas.parentNode.parentNode.style.setProperty("margin-top",0,"important");let g=1,d=0,w=0,x=1,h=1E3,u=0,v=0,t=0,r=0,q=0,m=0,l=0,k=0,E=-1,F=$("#resolution-input");F.addEventListener("input",()=>{h=parseInt(F.value||1E3);a.changeCanvasSize(h,h)});a.gl.uniform1f(a.uniforms.aspectRatio,
1);e.gl.uniform1f(e.uniforms.aspectRatio,1);window.requestAnimationFrame(p);window.addEventListener("resize",z);Page.temporaryHandlers.resize.push(z);$("#part-1-button").addEventListener("click",()=>{Page.Navigation.redirect("/projects/wilson/guide/1-getting-started/")});$("#part-2-button").addEventListener("click",()=>{Page.Navigation.redirect("/projects/wilson/guide/2-draggables/")});$("#part-3-button").addEventListener("click",()=>{Page.Navigation.redirect("/projects/wilson/guide/3-parallelizing/")});
$("#part-4-button").addEventListener("click",()=>{Page.Navigation.redirect("/projects/wilson/guide/4-hidden-canvases/")});$("#part-5-button").addEventListener("click",()=>{Page.Navigation.redirect("/projects/wilson/guide/5-fullscreen/")});$("#part-6-button").addEventListener("click",()=>{Page.Navigation.redirect("/projects/wilson/guide/6-interactivity/")});$("#docs-button").addEventListener("click",()=>{Page.Navigation.redirect("/projects/wilson/docs/")});$("#download-button").addEventListener("click",
()=>{Page.Navigation.redirect("https://github.com/90259025/wilson/releases",!0)});Page.show()}();
