!function(){function l(a,e,c,m){g=e;h=c;window.requestAnimationFrame(n)}function n(a){var e=a-p;p=a;if(0!==e){d.gl.uniform1f(d.uniforms.a,g);d.gl.uniform1f(d.uniforms.b,h);d.gl.uniform1f(d.uniforms.brightnessScale,20);d.render.drawFrame();a=d.render.getPixelData();e=Array(1E4);for(let c=0;1E4>c;c++)e[c]=a[4*c]+a[4*c+1]+a[4*c+2];e.sort((c,m)=>c-m);a=e[9800]/255*18;a=Math.max(a,.1);b.gl.uniform1f(b.uniforms.a,g);b.gl.uniform1f(b.uniforms.b,h);b.gl.uniform1f(b.uniforms.brightnessScale,a);b.render.drawFrame()}}
var f=$$("pre code");for(let a=0;a<f.length;a++)f[a].classList.add("highlightable");hljs.highlightAll();f={renderer:"gpu",shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float a;\n\t\tuniform float b;\n\t\tuniform float brightnessScale;\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tvec2 z = vec2(uv.x * 2.0, uv.y * 2.0);\n\t\t\tvec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));\n\t\t\tfloat brightness = exp(-length(z));\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvec2 c = vec2(a, b);\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tif (iteration == 99)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (length(z) >= 10.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tz = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n\t\t\t\t\n\t\t\t\tbrightness += exp(-length(z));\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tgl_FragColor = vec4(brightness / brightnessScale * color, 1.0);\n\t\t}\n\t",
canvasWidth:1E3,canvasHeight:1E3,worldWidth:4,worldHeight:4,worldCenterX:0,worldCenterY:0,useDraggables:!0,draggablesMousemoveCallback:l,draggablesTouchmoveCallback:l};let b=new Wilson($("#output-canvas"),f);b.render.initUniforms(["a","b","brightnessScale"]);b.draggables.add(0,1);let d=new Wilson($("#hidden-canvas"),{renderer:"gpu",shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float a;\n\t\tuniform float b;\n\t\tuniform float brightnessScale;\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tvec2 z = vec2(uv.x * 2.0, uv.y * 2.0);\n\t\t\tvec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));\n\t\t\tfloat brightness = exp(-length(z));\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvec2 c = vec2(a, b);\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tif (iteration == 99)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (length(z) >= 10.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tz = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n\t\t\t\t\n\t\t\t\tbrightness += exp(-length(z));\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tgl_FragColor = vec4(brightness / brightnessScale * color, 1.0);\n\t\t}\n\t",
canvasWidth:100,canvasHeight:100});d.render.initUniforms(["a","b","brightnessScale"]);b.canvas.parentNode.parentNode.style.setProperty("margin-bottom",0,"important");d.canvas.parentNode.parentNode.style.setProperty("margin-top",0,"important");let g=0,h=1,k=1E3,p=-1,q=$("#resolution-input");q.addEventListener("input",()=>{k=parseInt(q.value||1E3);b.changeCanvasSize(k,k)});$("#download-button").addEventListener("click",()=>{b.downloadFrame("a-julia-set.png")});window.requestAnimationFrame(n);Page.show()}();
