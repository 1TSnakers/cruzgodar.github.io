import{AnimationFrameApplet}from"./animationFrameApplet.min.js";class RaymarchApplet extends AnimationFrameApplet{movingSpeed=.1;moveVelocity=[0,0,0];moveFriction=.96;moveStopThreshhold=.01;distanceToScene=1;lastTimestamp=-1;theta=0;phi=0;imageSize=400;imageWidth=400;imageHeight=400;maxMarches=100;imagePlaneCenterPos=[];forwardVec=[];rightVec=[];upVec=[];cameraPos=[0,0,0];focalLength=2;lockedOnOrigin=!1;distanceFromOrigin=1;constructor(canvas){super(canvas),this.lockedOnOrigin||this.listenForKeysPressed(["w","s","a","d","q","e"," ","shift"]);const t=setInterval(()=>{this?.wilson?.draggables?.container&&(this.listenForNumTouches(),clearInterval(t))},100)}calculateVectors(){var t=this.lockedOnOrigin?-1:1;this.forwardVec=[Math.cos(t*this.theta)*Math.sin(this.phi),Math.sin(t*this.theta)*Math.sin(this.phi),Math.cos(this.phi)],this.rightVec=RaymarchApplet.normalize([this.forwardVec[1],-this.forwardVec[0],0]),this.upVec=RaymarchApplet.crossProduct(this.rightVec,this.forwardVec),this.lockedOnOrigin&&(this.cameraPos=RaymarchApplet.scaleVector(-this.distanceFromOrigin,this.forwardVec)),this.distanceToScene=this.distanceEstimator(this.cameraPos[0],this.cameraPos[1],this.cameraPos[2]),this.focalLength=Math.min(this.distanceToScene,.5)/2,this.forwardVec[0]*=this.focalLength/2,this.forwardVec[1]*=this.focalLength/2,this.forwardVec[2]*=this.focalLength/2,this.rightVec[0]*=this.focalLength/2,this.rightVec[1]*=this.focalLength/2,this.upVec[0]*=this.focalLength/2,this.upVec[1]*=this.focalLength/2,this.upVec[2]*=this.focalLength/2,this.imagePlaneCenterPos=[this.cameraPos[0]+this.forwardVec[0],this.cameraPos[1]+this.forwardVec[1],this.cameraPos[2]+this.forwardVec[2]],this.wilson.gl.uniform3fv(this.wilson.uniforms.cameraPos,this.cameraPos),this.wilson.gl.uniform3fv(this.wilson.uniforms.imagePlaneCenterPos,this.imagePlaneCenterPos),this.wilson.gl.uniform3fv(this.wilson.uniforms.forwardVec,this.forwardVec),this.wilson.gl.uniform3fv(this.wilson.uniforms.rightVec,this.rightVec),this.wilson.gl.uniform3fv(this.wilson.uniforms.upVec,this.upVec),this.wilson.gl.uniform1f(this.wilson.uniforms.focalLength,this.focalLength)}moveUpdate(timeElapsed){var t;this.keysPressed.w||2===this.numTouches?this.moveVelocity[0]=1:!this.keysPressed.s&&3!==this.numTouches||(this.moveVelocity[0]=-1),this.keysPressed.d?this.moveVelocity[1]=1:this.keysPressed.a&&(this.moveVelocity[1]=-1),this.keysPressed[" "]?this.moveVelocity[2]=1:this.keysPressed.shift&&(this.moveVelocity[2]=-1),this.lockedOnOrigin||0===this.moveVelocity[0]&&0===this.moveVelocity[1]&&0===this.moveVelocity[2]||(t=[this.moveVelocity[0]*this.forwardVec[0]+this.moveVelocity[1]*this.rightVec[0],this.moveVelocity[0]*this.forwardVec[1]+this.moveVelocity[1]*this.rightVec[1],this.moveVelocity[0]*this.forwardVec[2]+this.moveVelocity[1]*this.rightVec[2]+this.moveVelocity[2]*this.focalLength/2],this.cameraPos[0]+=this.movingSpeed*t[0]*(timeElapsed/6.944),this.cameraPos[1]+=this.movingSpeed*t[1]*(timeElapsed/6.944),this.cameraPos[2]+=this.movingSpeed*t[2]*(timeElapsed/6.944),this.needNewFrame=!0),this.calculateVectors();for(let e=0;e<3;e++)this.moveVelocity[e]*=this.moveFriction**(timeElapsed/6.944),Math.abs(this.moveVelocity[e])<this.moveStopThreshhold&&(this.moveVelocity[e]=0)}static magnitude(vec){return Math.sqrt(vec[0]*vec[0]+vec[1]*vec[1]+vec[2]*vec[2])}static addVectors(vec1,vec2){return[vec1[0]+vec2[0],vec1[1]+vec2[1],vec1[2]+vec2[2]]}static scaleVector(c,vec){return[c*vec[0],c*vec[1],c*vec[2]]}static dotProduct(vec1,vec2){return vec1[0]*vec2[0]+vec1[1]*vec2[1]+vec1[2]*vec2[2]}static dotProduct4(vec1,vec2){return vec1[0]*vec2[0]+vec1[1]*vec2[1]+vec1[2]*vec2[2]+vec1[3]*vec2[3]}static crossProduct(vec1,vec2){return[vec1[1]*vec2[2]-vec1[2]*vec2[1],vec1[2]*vec2[0]-vec1[0]*vec2[2],vec1[0]*vec2[1]-vec1[1]*vec2[0]]}static matMul(mat1,mat2){return[[mat1[0][0]*mat2[0][0]+mat1[0][1]*mat2[1][0]+mat1[0][2]*mat2[2][0],mat1[0][0]*mat2[0][1]+mat1[0][1]*mat2[1][1]+mat1[0][2]*mat2[2][1],mat1[0][0]*mat2[0][2]+mat1[0][1]*mat2[1][2]+mat1[0][2]*mat2[2][2]],[mat1[1][0]*mat2[0][0]+mat1[1][1]*mat2[1][0]+mat1[1][2]*mat2[2][0],mat1[1][0]*mat2[0][1]+mat1[1][1]*mat2[1][1]+mat1[1][2]*mat2[2][1],mat1[1][0]*mat2[0][2]+mat1[1][1]*mat2[1][2]+mat1[1][2]*mat2[2][2]],[mat1[2][0]*mat2[0][0]+mat1[2][1]*mat2[1][0]+mat1[2][2]*mat2[2][0],mat1[2][0]*mat2[0][1]+mat1[2][1]*mat2[1][1]+mat1[2][2]*mat2[2][1],mat1[2][0]*mat2[0][2]+mat1[2][1]*mat2[1][2]+mat1[2][2]*mat2[2][2]]]}static qmul(x1,y1,z1,w1,x2,y2,z2,w2){return[x1*x2-y1*y2-z1*z1-w1*w2,x1*y2+y1*x2+z1*w2-w1*z2,x1*z2-y1*w2+z1*x2+w1*y2,x1*w2+y1*z2-z1*y2+w1*x2]}static normalize(vec){var t=RaymarchApplet.magnitude(vec);return[vec[0]/t,vec[1]/t,vec[2]/t]}}export{RaymarchApplet};