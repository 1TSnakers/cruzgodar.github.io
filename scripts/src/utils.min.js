import anime from"../anime.min.js";function sleep(ms){return new Promise(resolve=>setTimeout(resolve,ms))}function clamp(value,min,max){return Math.min(Math.max(value,min),max)}function downloadFile(filename){var e=document.createElement("a");e.href=filename,e.download=filename.slice(filename.lastIndexOf("/")+1),document.body.appendChild(e),e.click(),e.remove()}async function asyncFetch(url){return new Promise((resolve,reject)=>{var t=new Worker("/scripts/src/asyncFetcher.js");t.postMessage([url]),t.onmessage=e=>{resolve(e.data[0])},t.onerror=reject})}async function animate(update,duration,easing="easeOutQuad"){if(0===duration)update(1);else{const e={t:0};await anime({targets:e,t:1,duration:duration,easing:easing,update:()=>update(e.t),complete:()=>update(1)}).finished}}function fuzzySearch(query,names,threshold=.3){var e=[],t=query.toLowerCase();for(const a of names){var r=calculateSimilarity(t,a.toLowerCase());threshold<=r&&e.push({name:a,score:r})}return e.sort((a,b)=>b.score-a.score).map(result=>result.name)}function calculateSimilarity(query,target){if(query===target)return 1;if(0===query.length||0===target.length)return 0;if(target.startsWith(query))return.95+query.length/target.length*.05;var e;for(const a of target.split(" "))if(a.startsWith(query))return.85+query.length/a.length*.1;if(target.includes(query))return.6+query.length/target.length*.2;let t=0,r=0;for(let n=0;n<target.length&&r<query.length;n++)target[n]===query[r]&&(e=1-n/target.length*.8,t+=e,n++,r++);return Math.min(t/query.length,.5)}export{sleep,clamp,downloadFile,asyncFetch,animate,fuzzySearch};