import{changeOpacity}from"./animation.min.mjs";import{$$,loadScript}from"./main.min.mjs";import{siteSettings}from"./settings.min.mjs";let desmosPurple="#772fbf",desmosBlue="#2f77bf",desmosRed="#bf2f2f",desmosGreen="#2fbf2f";const desmosBlack="#000000";function updateDesmosColors(){desmosPurple=siteSettings.darkTheme?"#60c000":"#772fbf",desmosBlue=siteSettings.darkTheme?"#c06000":"#2f77bf",desmosRed=siteSettings.darkTheme?"#00c0c0":"#bf2f2f",desmosGreen=siteSettings.darkTheme?"#c000c0":"#2fbf2f"}let desmosGraphs={};function clearDesmosGraphs(){desmosGraphs={}}let getDesmosData=()=>({});function setGetDesmosData(newGetDesmosData){getDesmosData=newGetDesmosData}async function createDesmosGraphs(){await loadScript("https://www.desmos.com/api/v1.7/calculator.js?apiKey=dcb31709b452b1cf9dc26972add0fda6");for(const key in desmosGraphs)desmosGraphs[key]?.destroy&&desmosGraphs[key].destroy();desmosGraphs={},updateDesmosColors();const data=getDesmosData();for(const key in data)data[key].expressions.forEach(expression=>{expression.latex=expression.latex.replace(/\(/g,String.raw`\left(`),expression.latex=expression.latex.replace(/\)/g,String.raw`\right)`),expression.latex=expression.latex.replace(/\[/g,String.raw`\left[`),expression.latex=expression.latex.replace(/\]/g,String.raw`\right]`)});$$(".desmos-container").forEach(element=>{var options={keypad:!1,settingsMenu:!1,zoomButtons:!1,showResetButtonOnGraphpaper:!0,border:!1,expressionsCollapsed:!0,invertedColors:siteSettings.darkTheme,xAxisMinorSubdivisions:1,yAxisMinorSubdivisions:1};if(data[element.id].options)for(const key in data[element.id].options)options[key]=data[element.id].options[key];desmosGraphs[element.id]=Desmos.GraphingCalculator(element,options),desmosGraphs[element.id].setMathBounds(data[element.id].bounds),desmosGraphs[element.id].setExpressions(data[element.id].expressions),desmosGraphs[element.id].setDefaultState(desmosGraphs[element.id].getState())})}async function recreateDesmosGraphs(){var elements=Array.from($$(".desmos-container"));elements&&(await Promise.all(elements.map(element=>changeOpacity(element,0))),await createDesmosGraphs(),await Promise.all(elements.map(element=>changeOpacity(element,1))))}function getDesmosScreenshot(id,forPdf=!1){desmosGraphs[id].updateSettings({showGrid:forPdf,xAxisNumbers:forPdf,yAxisNumbers:forPdf});var expressions=desmosGraphs[id].getExpressions();for(let i=0;i<expressions.length;i++)expressions[i].lineWidth=forPdf?5:7.5,expressions[i].pointSize=forPdf?15:27,expressions[i].dragMode="NONE";desmosGraphs[id].setExpressions(expressions),desmosGraphs[id].asyncScreenshot({width:500,height:500,targetPixelRatio:8},imageData=>{var img=document.createElement("img");img.width=4e3,img.height=4e3,img.style.width="50vmin",img.style.height="50vmin",img.src=imageData,document.body.appendChild(img)})}export{desmosPurple,desmosBlue,desmosRed,desmosGreen,desmosBlack,desmosGraphs,clearDesmosGraphs,setGetDesmosData,createDesmosGraphs,recreateDesmosGraphs,getDesmosScreenshot};