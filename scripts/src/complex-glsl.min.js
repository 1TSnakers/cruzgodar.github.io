Site.GLSLFilenames="equality powers trig combinatorics number-theory gamma hypergeometric su3_character lambert_w hurwitz_zeta zeta".split(" ");Site.GLSLFiles={main:{dependencies:[],keywords:[]},constants:{dependencies:[],keywords:[]}};Site.doubleEmulationGLSL="";Site.doubleEncodingGLSL="";
Site.splitGLSLFile=function(g,c){c=c.replaceAll("\r","");for(var e=0;;){var d=c.indexOf("#function",e);if(-1===d)break;var f=c.indexOf("\n",d+10);if(-1===f){console.error(`[GLSL bundling] Invalid function name in file ${g}.frag`);break}e=c.slice(d+10,f).split(" ");e=e.map(b=>b.replaceAll(" ",""));for(var a=0;a<e.length;a++)""===e[a]&&(e.splice(a,1),a--);a=c.indexOf("#endfunction",f+1);if(-1===a){console.error(`[GLSL bundling] Missing #endfunction in file ${g}.frag`);break}Site.GLSLFiles[e[0]]={keywords:e};
d=c.indexOf("#requires",d);if(-1!==d&&d<a){f=c.indexOf("\n",d+10);d=c.slice(d+10,f).split(" ");d=d.map(b=>b.replaceAll(" ",""));for(let b=0;b<d.length;b++)""===d[b]&&(d.splice(b,1),b--);Site.GLSLFiles[e[0]].dependencies=d;Site.GLSLFiles[e[0]].content=c.slice(f+1,a)}else Site.GLSLFiles[e[0]].dependencies=[],Site.GLSLFiles[e[0]].content=c.slice(f+1,a);e=a+13}};Site.GLSLFilesByDepth=[];
Site.loadGLSL=function(){return 0===Site.scriptsLoaded.glsl?(Site.scriptsLoaded.glsl=1,new Promise(async(g,c)=>{c=await (await fetch("/scripts/glsl/constants.frag")).text();this.GLSLFiles.constants.content=c;c=await (await fetch("/scripts/glsl/main.frag")).text();this.GLSLFiles.main.content=c;this.doubleEmulationGLSL=await (await fetch("/scripts/glsl/double_emulation.frag")).text();this.doubleEncodingGLSL=await (await fetch("/scripts/glsl/double_encoding.frag")).text();const e={};await Promise.all(this.GLSLFilenames.map(a=>
new Promise(async(b,h)=>{h=await fetch(`/scripts/glsl/${a}.frag`);e[a]=await h.text();b()})));this.GLSLFilenames.forEach(a=>this.splitGLSLFile(a,e[a]));c=Object.keys(this.GLSLFiles);c.forEach(a=>this.GLSLFiles[a].parents=[]);c.forEach(a=>{const b=this.GLSLFiles[a].dependencies;b.forEach(h=>this.GLSLFiles[h].parents.push(a));0===b.length&&"main"!==a&&this.GLSLFiles.main.parents.push(a)});let d=["main"],f=0;for(;0!==d.length;){let a=[];Site.GLSLFilesByDepth.push([]);d.forEach(b=>{this.GLSLFiles[b].depth=
"undefined"===typeof this.GLSLFiles[b].depth?f:Math.max(this.GLSLFiles[b].depth,f);this.GLSLFiles[b].parents.forEach(h=>{a.includes(h)||a.push(h)})});f++;d=a}c.forEach(a=>Site.GLSLFilesByDepth[this.GLSLFiles[a].depth].push(a));Site.scriptsLoaded.glsl=2;g()})):1===Site.scriptsLoaded.glsl?new Promise((g,c)=>{const e=setInterval(()=>{2===Site.scriptsLoaded.glsl&&(clearInterval(e),g())},100)}):new Promise((g,c)=>g())};
Site.getGLSLBundle=function(g){function c(b,h){f[b]||(f[b]=!0,DEBUG&&0!==h&&(a+="\n                     "+"   ".repeat(h)+`\u21b3 ${b}`),Site.GLSLFiles[b].dependencies.forEach(k=>c(k,h+1)))}const e=g.match(/[a-zA-Z_][a-zA-Z0-9_]*/g);let d="";g=Object.keys(this.GLSLFiles);let f={};g.forEach(b=>f[b]=!1);f.main=!0;let a="";g.forEach(b=>{f[b]||e.forEach(h=>{-1!==Site.GLSLFiles[b].keywords.indexOf(h)&&(a=`[GLSL bundling] Adding ${b}`,c(b,0),DEBUG&&console.log(a))})});d=Site.GLSLFiles.constants.content+
Site.GLSLFiles.main.content;for(g=1;g<Site.GLSLFilesByDepth.length;g++)Site.GLSLFilesByDepth[g].forEach(b=>{f[b]&&(d+=Site.GLSLFiles[b].content)});return d};
