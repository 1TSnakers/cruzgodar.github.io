import{ThurstonGeometry}from"../class.min.mjs";class BaseGeometry{geodesicGlsl="vec4 pos = cameraPos + t * rayDirectionVec;";fogGlsl="return mix(color, fogColor, 1.0 - exp(-length(pos - cameraPos) * fogScaling));";customDotProduct(vec1,vec2){return vec1[0]*vec2[0]+vec1[1]*vec2[1]+vec1[2]*vec2[2]+vec1[3]*vec2[3]}updateCameraPos(cameraPos,tangentVec,dt){var e=[...cameraPos];for(let r=0;r<4;r++)e[r]=e[r]+dt*tangentVec[r];return e}getGeodesicDirection(pos1,pos2){var e=new Array(4);for(let o=0;o<4;o++)e[o]=pos2[o]-pos1[o];var r=ThurstonGeometry.magnitude(e);return[ThurstonGeometry.normalize(e),r]}getNormalVec(){return[0,0,0,1]}getGammaPrime(_pos,dir){return[...dir]}getGammaDoublePrime(){return[0,0,0,0]}getGammaTriplePrime(){return[0,0,0,0]}gammaTriplePrimeIsLinearlyIndependent=!1}export{BaseGeometry};