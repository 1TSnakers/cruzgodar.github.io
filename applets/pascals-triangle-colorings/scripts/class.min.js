class PascalsTriangleColoring extends Applet{gridSize=20;pixelsPerRow=0;pixelsPerFrame=10;delayOnMeet=0;resolution=2E3;numColors=3;yOffset=0;fillRegions=!0;parities=[];coordinates=[];colors=[];isFinished=[];lastTimestamp=-1;activeNodes=[];constructor(b){super(b);this.wilson=new Wilson(b,{renderer:"cpu",canvasWidth:2E3,canvasHeight:2E3,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"})}run(b,
a,f){this.resolution=b;this.gridSize=a;this.numColors=f;this.wilson.changeCanvasSize(this.resolution,this.resolution);this.pixelsPerFrame=Math.ceil(this.resolution/200);this.pixelsPerRow=Math.round(this.resolution/(this.gridSize+2));this.delayOnMeet=2*this.pixelsPerRow;this.yOffset=(1-Math.sqrt(3)/2*(this.gridSize+1)/(this.gridSize+2))/2*this.resolution;this.activeNodes=[[0,0,0,0]];this.parities=Array(this.gridSize);this.colors=Array(this.gridSize);this.isFinished=Array(this.gridSize);this.coordinates=
Array(this.gridSize);for(b=0;b<this.gridSize;b++)for(this.parities[b]=Array(this.gridSize),this.colors[b]=Array(this.gridSize),this.coordinates[b]=Array(this.gridSize),this.isFinished[b]=Array(this.gridSize),a=0;a<this.gridSize;a++)this.isFinished[b][a]=!1;this.parities[0][0]=1;this.colors[0][0]=this.wilson.utils.hsvToRgb(1/this.numColors,1,1);for(b=1;b<this.gridSize;b++)for(this.parities[b][0]=1,this.parities[b][b]=1,this.colors[b][0]=[...this.colors[0][0]],this.colors[b][b]=[...this.colors[0][0]],
a=1;a<b;a++)this.parities[b][a]=(this.parities[b-1][a-1]+this.parities[b-1][a])%this.numColors,this.colors[b][a]=this.wilson.utils.hsvToRgb(this.parities[b][a]/this.numColors,1,1);for(b=0;b<this.gridSize;b++)for(a=0;a<=b;a++)this.coordinates[b][a]=this.getCoordinates(b,a);this.wilson.ctx.fillStyle="rgb(0, 0, 0)";this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution);this.wilson.ctx.lineWidth=10*Math.sqrt(this.pixelsPerRow/150);window.requestAnimationFrame(this.drawFrame.bind(this))}drawFrame(b){var a=
b-this.lastTimestamp;this.lastTimestamp=b;if(0!==a){for(b=0;b<this.pixelsPerFrame;b++)for(a=0;a<this.activeNodes.length;a++)if(0!==this.activeNodes[a][3])this.activeNodes[a][3]--;else if(this.drawLineSegments(a),this.activeNodes[a][2]++,this.activeNodes[a][2]===this.pixelsPerRow-1){if(this.activeNodes[a][0]!==this.gridSize-2){if(!this.isFinished[this.activeNodes[a][0]+1][this.activeNodes[a][1]]){var f=!1;for(var c=0;c<this.activeNodes.length;c++)if(this.activeNodes[c][0]===this.activeNodes[a][0]+
1&&this.activeNodes[c][1]===this.activeNodes[a][1]){f=!0;this.activeNodes[c][3]+=this.delayOnMeet;break}f||this.activeNodes.push([this.activeNodes[a][0]+1,this.activeNodes[a][1],0,0])}if(!this.isFinished[this.activeNodes[a][0]+1][this.activeNodes[a][1]+1]){f=!1;for(c=0;c<this.activeNodes.length;c++)if(this.activeNodes[c][0]===this.activeNodes[a][0]+1&&this.activeNodes[c][1]===this.activeNodes[a][1]+1){f=!0;this.activeNodes[c][3]+=this.delayOnMeet;break}!f&&this.activeNodes[a][1]+1<=(this.activeNodes[a][0]+
1)/2&&this.activeNodes.push([this.activeNodes[a][0]+1,this.activeNodes[a][1]+1,0,0])}}this.isFinished[this.activeNodes[a][0]][this.activeNodes[a][1]]=!0;this.activeNodes.splice(a,1)}this.animationPaused||0===this.activeNodes.length||window.requestAnimationFrame(this.drawFrame.bind(this))}}getCoordinates(b,a){a=(a-Math.floor(b/2))*this.resolution/(this.gridSize+2)+this.resolution/2;1===b%2&&(a-=.5*this.resolution/(this.gridSize+2));return[.8*a+.1*this.resolution,.8*((b+1)*Math.sqrt(3)/2*this.resolution/
(this.gridSize+2)+this.yOffset)+.1*this.resolution]}drawLineSegments(b){let a=this.activeNodes[b][2]/this.pixelsPerRow,f=(this.activeNodes[b][2]+2)/this.pixelsPerRow,c=this.activeNodes[b][0];b=this.activeNodes[b][1];let e=c+1,d=b;this.wilson.ctx.strokeStyle=`rgb(${this.colors[c][b][0]*(1-a)+this.colors[e][d][0]*a}, ${this.colors[c][b][1]*(1-a)+this.colors[e][d][1]*a}, ${this.colors[c][b][2]*(1-a)+this.colors[e][d][2]*a})`;this.wilson.ctx.beginPath();this.wilson.ctx.moveTo(this.coordinates[c][b][0]*
(1-a)+this.coordinates[e][d][0]*a,this.coordinates[c][b][1]*(1-a)+this.coordinates[e][d][1]*a);this.wilson.ctx.lineTo(this.coordinates[c][b][0]*(1-f)+this.coordinates[e][d][0]*f,this.coordinates[c][b][1]*(1-f)+this.coordinates[e][d][1]*f);this.wilson.ctx.stroke();d++;this.wilson.ctx.strokeStyle=`rgb(${this.colors[c][b][0]*(1-a)+this.colors[e][d][0]*a}, ${this.colors[c][b][1]*(1-a)+this.colors[e][d][1]*a}, ${this.colors[c][b][2]*(1-a)+this.colors[e][d][2]*a})`;this.wilson.ctx.beginPath();this.wilson.ctx.moveTo(this.coordinates[c][b][0]*
(1-a)+this.coordinates[e][d][0]*a,this.coordinates[c][b][1]*(1-a)+this.coordinates[e][d][1]*a);this.wilson.ctx.lineTo(this.coordinates[c][b][0]*(1-f)+this.coordinates[e][d][0]*f,this.coordinates[c][b][1]*(1-f)+this.coordinates[e][d][1]*f);this.wilson.ctx.stroke();b=c-b;d=e-d;this.wilson.ctx.strokeStyle=`rgb(${this.colors[c][b][0]*(1-a)+this.colors[e][d][0]*a}, ${this.colors[c][b][1]*(1-a)+this.colors[e][d][1]*a}, ${this.colors[c][b][2]*(1-a)+this.colors[e][d][2]*a})`;this.wilson.ctx.beginPath();this.wilson.ctx.moveTo(this.coordinates[c][b][0]*
(1-a)+this.coordinates[e][d][0]*a,this.coordinates[c][b][1]*(1-a)+this.coordinates[e][d][1]*a);this.wilson.ctx.lineTo(this.coordinates[c][b][0]*(1-f)+this.coordinates[e][d][0]*f,this.coordinates[c][b][1]*(1-f)+this.coordinates[e][d][1]*f);this.wilson.ctx.stroke();d++;this.wilson.ctx.strokeStyle=`rgb(${this.colors[c][b][0]*(1-a)+this.colors[e][d][0]*a}, ${this.colors[c][b][1]*(1-a)+this.colors[e][d][1]*a}, ${this.colors[c][b][2]*(1-a)+this.colors[e][d][2]*a})`;this.wilson.ctx.beginPath();this.wilson.ctx.moveTo(this.coordinates[c][b][0]*
(1-a)+this.coordinates[e][d][0]*a,this.coordinates[c][b][1]*(1-a)+this.coordinates[e][d][1]*a);this.wilson.ctx.lineTo(this.coordinates[c][b][0]*(1-f)+this.coordinates[e][d][0]*f,this.coordinates[c][b][1]*(1-f)+this.coordinates[e][d][1]*f);this.wilson.ctx.stroke()}};
