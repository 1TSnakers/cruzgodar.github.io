onmessage=async function(a){gridSize=a.data[0];numIterations=a.data[1];await drawFern()};let gridSize=null,numIterations=null,fernGraph=null,randomizationCoefficients=[.1,.1,.1,.1,.5,.5],transformationCoefficients=[[0,0,0,.16,0,0],[.85,.04,-.04,.85,0,1.6],[.2,-.26,.23,.22,0,1.6],[-.15,.28,.26,.24,0,.44]],currentX=0,currentY=0;const minX=-6,maxX=6,minY=-1,maxY=11;
function drawFern(){return new Promise(function(a,c){fernGraph=new Uint8ClampedArray(gridSize*gridSize*4);for(c=0;c<gridSize;c++)for(var b=0;b<gridSize;b++)fernGraph[4*(gridSize*c+b)+3]=255;for(c=0;c<numIterations;c++){0===c%Math.floor(numIterations/10)&&postMessage([fernGraph]);b=Math.random();var d=3;.01>b?d=0:.86>b?d=1:.93>b&&(d=2);affineTransformation(d);currentX>=maxX||currentX<=minX||currentY>=maxY||currentY<=minY||(b=(currentX-minX)/(maxX-minX),b=Math.floor(gridSize*b),d=(currentY-minY)/(maxY-
minY),d=Math.floor(gridSize*(1-d)),fernGraph[4*(gridSize*d+b)+1]++)}postMessage([fernGraph]);a()})}function affineTransformation(a){let c=transformationCoefficients[a][0]*currentX+transformationCoefficients[a][1]*currentY+transformationCoefficients[a][4];currentY=transformationCoefficients[a][2]*currentX+transformationCoefficients[a][3]*currentY+transformationCoefficients[a][5];currentX=c};
