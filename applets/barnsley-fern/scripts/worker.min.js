"use strict";onmessage=r=>{gridSize=r.data[0],numIterations=r.data[1],drawFern()};let gridSize=null,numIterations=null,fernGraph=null,transformationCoefficients=[[0,0,0,.16,0,0],[.85,.04,-.04,.85,0,1.6],[.2,-.26,.23,.22,0,1.6],[-.15,.28,.26,.24,0,.44]],currentX=0,currentY=0;const minX=-6,maxX=6,minY=-1,maxY=11;function drawFern(){fernGraph=new Uint8ClampedArray(gridSize*gridSize*4);for(let n=0;n<gridSize;n++)for(let r=0;r<gridSize;r++)fernGraph[4*(gridSize*n+r)+3]=255;for(let n=0;n<numIterations;n++){n%Math.floor(numIterations/10)==0&&postMessage([fernGraph]);var e,t=Math.random();let r=3;t<.01?r=0:t<.86?r=1:t<.93&&(r=2),affineTransformation(r),currentX>=maxX||currentX<=minX||currentY>=maxY||currentY<=minY||(t=(currentX-minX)/(maxX-minX),t=Math.floor(gridSize*t),e=(currentY-minY)/(maxY-minY),e=Math.floor(gridSize*(1-e)),fernGraph[4*(gridSize*e+t)+1]++)}postMessage([fernGraph])}function affineTransformation(r){var n=transformationCoefficients[r][0]*currentX+transformationCoefficients[r][1]*currentY+transformationCoefficients[r][4];currentY=transformationCoefficients[r][2]*currentX+transformationCoefficients[r][3]*currentY+transformationCoefficients[r][5],currentX=n}