import{Applet,rgbToHsv}from"/scripts/applets/applet.min.js";import{changeOpacity}from"/scripts/src/animation.min.js";import{animate,sleep}from"/scripts/src/utils.min.js";import{WilsonCPU}from"/scripts/wilson.min.js";const hThreshold=.05,sThreshold=.45,vThreshold=.4;class FlagOverlap extends Applet{possibleFlags=[];won=!1;currentlyAnimating=!1;guessCanvases;overlayCanvases;progressBars;progressBarTexts;overlapCheckboxes;winOverlay;wilsonOverlay;wilsonCorrectFlag;resolution=2048;correctFlag;correctPixels;correctHsv;lastGuessFlagId;guesses=[];constructor({canvas,overlayCanvas,guessCanvases,overlayCanvases,progressBars,progressBarTexts,overlapCheckboxes,winOverlay}){super(canvas),this.guessCanvases=guessCanvases,this.overlayCanvases=overlayCanvases,this.progressBars=progressBars,this.progressBarTexts=progressBarTexts,this.overlapCheckboxes=overlapCheckboxes,this.winOverlay=winOverlay;var s=()=>{this.wilson.currentlyFullscreen?this.wilson.exitFullscreen():this.wilson.enterFullscreen()},s={canvasWidth:this.resolution,useP3ColorSpace:!1,interactionOptions:{callbacks:{mousedown:s,touchstart:s}}},s=(this.wilson=new WilsonCPU(canvas,s),this.wilsonOverlay=new WilsonCPU(overlayCanvas,s),{canvasWidth:this.resolution}),e=this.createHiddenCanvas(!0,1024/683);this.wilsonCorrectFlag=new WilsonCPU(e,s)}chooseCorrectFlag(){this.correctFlag=this.possibleFlags[Math.floor(Math.random()*this.possibleFlags.length)],this.correctFlag="ca"}async drawFlag(wilson,flagId){let s;var e=new Promise(r=>s=r);const a=new Image;a.onload=()=>{wilson.ctx.drawImage(a,0,0,wilson.canvasWidth,wilson.canvasHeight),s()},a.src=`/applets/flag-overlap/graphics/flags/${flagId}.webp`,await e;var t=wilson.ctx.getImageData(0,0,wilson.canvasWidth,wilson.canvasHeight).data,i=new Array(wilson.canvasWidth*wilson.canvasHeight*3);for(let l=0;l<wilson.canvasWidth*wilson.canvasHeight;l++){var n=rgbToHsv(t[4*l],t[4*l+1],t[4*l+2]);i[3*l]=n[0],i[3*l+1]=n[1],i[3*l+2]=n[2]}return{pixels:t,hsvData:i}}updateMainCanvas(){var s=new Uint8ClampedArray(this.wilson.canvasWidth*this.wilson.canvasHeight*4);for(let e=0;e<this.wilson.canvasWidth*this.wilson.canvasHeight;e++){s[4*e]=32,s[4*e+1]=32,s[4*e+2]=32,s[4*e+3]=255;for(const a of this.guesses)if(a.matchingPixels[e]){s[4*e]=this.correctPixels[4*e],s[4*e+1]=this.correctPixels[4*e+1],s[4*e+2]=this.correctPixels[4*e+2];break}}this.wilson.ctx.putImageData(new ImageData(s,this.wilson.canvasWidth,this.wilson.canvasHeight),0,0)}async guessFlag(flagId){if(this.won||this.currentlyAnimating)console.log(this.won);else{if(this.currentlyAnimating=!0,void 0===this.correctFlag){this.chooseCorrectFlag();const c=await this.drawFlag(this.wilsonCorrectFlag,this.correctFlag);this.correctPixels=c.pixels,this.correctHsv=c.hsvData}const r={};this.lastGuessFlagId=flagId,r.flagId=flagId,r.showDiffs=!0,r.matchingPixels=new Array(this.wilson.canvasWidth*this.wilson.canvasHeight);var i=()=>{r.wilsonOverlay.currentlyFullscreen?r.wilsonOverlay.exitFullscreen():r.wilson.currentlyFullscreen?r.wilson.exitFullscreen():(r.showDiffs?r.wilson:r.wilsonOverlay).enterFullscreen()},i={canvasWidth:this.resolution,useP3ColorSpace:!1,interactionOptions:{callbacks:{mousedown:i,touchstart:i}}};r.wilson=new WilsonCPU(this.guessCanvases[this.guesses.length],i),r.wilsonOverlay=new WilsonCPU(this.overlayCanvases[this.guesses.length],i);const[c]=await Promise.all([this.drawFlag(r.wilsonOverlay,flagId),this.drawFlag(this.wilsonOverlay,flagId)]);r.pixels=c.pixels,r.hsvData=c.hsvData;let s=0;for(let a=0;a<this.wilson.canvasWidth*this.wilson.canvasHeight;a++){var n=Math.abs(r.hsvData[3*a]-this.correctHsv[3*a]),n=Math.min(n,1-n),l=Math.abs(r.hsvData[3*a+1]-this.correctHsv[3*a+1]),o=Math.abs(r.hsvData[3*a+2]-this.correctHsv[3*a+2]);r.matchingPixels[a]=0===r.hsvData[3*a+2]?0===o:n<hThreshold&&l<sThreshold&&o<vThreshold,r.matchingPixels[a]?s++:(r.pixels[4*a]=32,r.pixels[4*a+1]=32,r.pixels[4*a+2]=32,r.pixels[4*a+3]=255)}await Promise.all([changeOpacity({element:r.wilsonOverlay.canvas,opacity:1,duration:250}),changeOpacity({element:this.wilsonOverlay.canvas,opacity:1,duration:250})]),r.wilson.ctx.putImageData(new ImageData(r.pixels,this.wilson.canvasWidth,this.wilson.canvasHeight),0,0),this.guesses.push(r),this.updateMainCanvas(),await sleep(100);const h=this.progressBars[this.guesses.length-1],v=this.progressBarTexts[this.guesses.length-1];changeOpacity({element:v,opacity:1,duration:125});let e=s/(this.wilson.canvasWidth*this.wilson.canvasHeight);flagId===this.correctFlag?e=1:.999<=e&&(e=.999),await animate(t=>{h.style.width=t*e*100+"%",h.style.background=`hsl(${t*e*120}, 70%, 50%)`,v.innerText=(t*e*100).toFixed(1)+"%"},500+500*e,"easeInOutQuad"),flagId===this.correctFlag?this.win():(await sleep(100),r.showDiffs?(this.overlapCheckboxes[this.guesses.length-1].classList.add("checked"),await Promise.all([changeOpacity({element:r.wilsonOverlay.canvas,opacity:0,duration:250}),changeOpacity({element:this.wilsonOverlay.canvas,opacity:0,duration:250})])):await changeOpacity({element:this.wilsonOverlay.canvas,opacity:0,duration:250}),this.currentlyAnimating=!1)}}async win(){this.currentlyAnimating=!0,this.won=!0,await sleep(200),this.wilsonOverlay.canvas.style.padding="24px",this.wilsonOverlay.canvas.style.borderColor="transparent",this.wilsonOverlay.canvas.style.marginTop="-22px",this.wilsonOverlay.canvas.style.marginLeft="-22px",this.wilsonOverlay.canvas.style.borderRadius="32px",this.winOverlay.style.zIndex=1,changeOpacity({element:this.winOverlay,opacity:1,duration:300}),this.currentlyAnimating=!1}async replaceGuessCanvas(index){this.guesses[index].wilson.destroy(),this.guesses[index].wilsonOverlay.destroy();var s=document.createElement("canvas"),e=(s.classList.add("guess-canvas"),s.style.position="absolute",s.style.top="0",s.style.left="0",this.guessCanvases[index].parentNode.insertBefore(s,this.guessCanvases[index]),document.createElement("div")),a=(e.classList.add("overlay-canvas-container"),this.guessCanvases[index].parentNode.insertBefore(e,this.overlayCanvases[index].parentNode),document.createElement("canvas"));a.classList.add("overlay-canvas"),e.appendChild(a),await Promise.all([changeOpacity({element:this.guessCanvases[index],opacity:0,duration:250}),changeOpacity({element:this.overlayCanvases[index],opacity:0,duration:250})]),s.style.position="",this.guessCanvases[index].remove(),this.overlayCanvases[index].parentNode.remove(),this.guessCanvases[index]=s,this.overlayCanvases[index]=a}async replaceMainCanvas(){this.wilson.destroy(),this.wilsonOverlay.destroy();var s=document.createElement("canvas"),e=(s.id="output-canvas",s.classList.add("output-canvas"),s.style.position="absolute",s.style.top="0",s.style.left="0",this.wilson.canvas.parentNode.insertBefore(s,this.wilson.canvas),document.createElement("canvas")),a=(e.id="overlay-canvas",e.classList.add("output-canvas"),e.style.position="absolute",e.style.top="0",e.style.left="0",this.wilsonOverlay.canvas.parentNode.insertBefore(e,this.wilsonOverlay.canvas),await Promise.all([changeOpacity({element:this.wilson.canvas,opacity:0,duration:250}),changeOpacity({element:this.wilsonOverlay.canvas,opacity:0,duration:250})]),s.style.position="",s.style.top="",s.style.left="",e.style.position="",e.style.top="",e.style.left="",this.wilson.canvas.remove(),this.wilsonOverlay.canvas.remove(),()=>{this.wilson.currentlyFullscreen?this.wilson.exitFullscreen():this.wilson.enterFullscreen()}),a={canvasWidth:this.resolution,useP3ColorSpace:!1,interactionOptions:{callbacks:{mousedown:a,touchstart:a}}};await new Promise(resolve=>{requestAnimationFrame(()=>resolve())}),this.wilson=new WilsonCPU(s,a),this.wilsonOverlay=new WilsonCPU(e,a)}async replay(){if(!this.currentlyAnimating){this.currentlyAnimating=!0;for(const e of this.progressBars){const a=e.getBoundingClientRect().width;animate(t=>{e.style.width=(1-t)*a+"px"},250,"easeInOutQuad")}for(const i of this.overlapCheckboxes)i.classList.remove("checked");for(let s=0;s<this.guesses.length;s++)this.replaceGuessCanvas(s);this.replaceMainCanvas(),await changeOpacity({element:this.winOverlay,opacity:0,duration:250}),this.winOverlay.display="none",this.winOverlay.style.zIndex=-1,this.guesses=[],this.correctFlag=void 0,this.won=!1,this.currentlyAnimating=!1}}setShowDiffs(showDiffs,index){const s=this.guesses[index];s.showDiffs=showDiffs;for(const s of this.guesses)changeOpacity({element:s.wilsonOverlay.canvas,opacity:s.showDiffs?0:1,duration:150})}}export{FlagOverlap};