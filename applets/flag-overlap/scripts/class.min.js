import{Applet,rgbToHsv}from"/scripts/applets/applet.min.js";import{WilsonCPU}from"/scripts/wilson.min.js";const hThreshold=.075,sThreshold=.4,vThreshold=.4;class FlagOverlap extends Applet{loadPromise;guessCanvases;wilsonCorrectFlag;resolution=2048;correctFlag="bw";correctPixels;correctHsv;guesses=[];constructor({canvas,guessCanvases}){super(canvas),this.guessCanvases=guessCanvases;var s={canvasWidth:this.resolution,fullscreenOptions:{useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}},a=(this.wilson=new WilsonCPU(canvas,s),this.createHiddenCanvas(!1));a.style.setProperty("aspect-ratio","1024 / 683","important"),this.wilsonCorrectFlag=new WilsonCPU(a,s),this.loadPromise=new Promise(resolve=>{this.drawFlag(this.wilsonCorrectFlag,this.correctFlag).then(returnValue=>{this.correctPixels=returnValue.pixels,this.correctHsv=returnValue.hsvData,resolve()})})}async drawFlag(wilson,flagId){let s;var a=new Promise(r=>s=r);const t=new Image;t.onload=()=>{wilson.ctx.drawImage(t,0,0,wilson.canvasWidth,wilson.canvasHeight),s()},t.src=`graphics/${flagId}.png`,await a;var e=wilson.ctx.getImageData(0,0,wilson.canvasWidth,wilson.canvasHeight).data,i=new Array(wilson.canvasWidth*wilson.canvasHeight*3);for(let l=0;l<wilson.canvasWidth*wilson.canvasHeight;l++){var n=rgbToHsv(e[4*l],e[4*l+1],e[4*l+2]);i[3*l]=n[0],i[3*l+1]=n[1],i[3*l+2]=n[2]}return{pixels:e,hsvData:i}}updateMainCanvas(){var s=new Uint8ClampedArray(this.wilson.canvasWidth*this.wilson.canvasHeight*4);for(let t=0;t<this.wilson.canvasWidth*this.wilson.canvasHeight;t++){s[4*t]=32,s[4*t+1]=32,s[4*t+2]=32,s[4*t+3]=255;for(const e of this.guesses)if(e.matchingPixels[t]){s[4*t]=this.correctPixels[4*t],s[4*t+1]=this.correctPixels[4*t+1],s[4*t+2]=this.correctPixels[4*t+2];break}}var a=new ImageData(s,this.wilson.canvasWidth,this.wilson.canvasHeight);this.wilson.ctx.putImageData(a,0,0)}async guessFlag(flagId){const s={};s.flagId=flagId,s.matchingPixels=new Array(this.wilson.canvasWidth*this.wilson.canvasHeight);var a=await this.drawFlag(this.wilson,flagId);s.pixels=a.pixels,s.hsvData=a.hsvData;for(let n=0;n<this.wilson.canvasWidth*this.wilson.canvasHeight;n++){var t=Math.abs(s.hsvData[3*n]-this.correctHsv[3*n]),t=Math.min(t,1-t),e=Math.abs(s.hsvData[3*n+1]-this.correctHsv[3*n+1]),i=Math.abs(s.hsvData[3*n+2]-this.correctHsv[3*n+2]);s.matchingPixels[n]=t<hThreshold&&e<sThreshold&&i<vThreshold,s.matchingPixels[n]||(s.pixels[4*n]=32,s.pixels[4*n+1]=32,s.pixels[4*n+2]=32)}a=()=>{s.wilson.currentlyFullscreen?s.wilson.exitFullscreen():s.wilson.enterFullscreen()},a={canvasWidth:this.resolution,interactionOptions:{callbacks:{mousedown:a,touchstart:a}}},s.wilson=new WilsonCPU(this.guessCanvases[this.guesses.length],a),a=new ImageData(s.pixels,this.wilson.canvasWidth,this.wilson.canvasHeight);s.wilson.ctx.putImageData(a,0,0),this.guesses.push(s),this.updateMainCanvas()}}export{FlagOverlap};