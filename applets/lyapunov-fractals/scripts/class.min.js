class LyapunovFractal extends Applet{wilsonHidden=null;aspectRatio=1;numIterations=100;pastBrightnessScales=[];resolution=500;resolutionHidden=100;lastTimestamp=-1;constructor(a){super(a);this.pan.minX=0;this.pan.maxX=4;this.pan.minY=0;this.pan.maxY=4;const c=this.createHiddenCanvas(),b={renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",canvasWidth:500,canvasHeight:500,worldWidth:4,worldHeight:4,worldCenterX:2,worldCenterY:2,
useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:()=>this.changeAspectRatio(!0),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),
touchendCallback:this.onReleaseCanvas.bind(this),wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this)};this.wilson=new Wilson(a,b);this.wilsonHidden=new Wilson(c,{renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",canvasWidth:100,canvasHeight:100});this.zoom.init();console.log(this.zoom.level);a=()=>this.changeAspectRatio(!0);window.addEventListener("resize",a);this.handlers.push([window,"resize",
a])}run(a){let c=[];for(let b=0;b<a.length;b++)"B"===a[b]?c.push(1):c.push(0);a=`
			precision highp float;
			
			varying vec2 uv;
			
			uniform float aspectRatio;
			
			uniform float worldCenterX;
			uniform float worldCenterY;
			uniform float worldSize;
			
			uniform float brightnessScale;
			
			uniform int seq[12];
			
			
			
			void main(void)
			{
				vec2 z;
				
				if (aspectRatio >= 1.0)
				{
					z = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);
				}
				
				else
				{
					z = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);
				}
				
				gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
				
				
				
				float x = .5;
				
				float lambda = 0.0;
				
				vec3 color = vec3(0.0, 0.0, 0.0);
				
				for (int iteration = 0; iteration < ${Math.floor(250/a.length)}; iteration++)
				{
					for (int index = 0; index < ${a.length}; index++)
					{
						if (seq[index] == 0)
						{
							x = z.x * x * (1.0 - x);
							
							color.x += abs(z.x) / 40.0;
						}
						
						else
						{
							x = z.y * x * (1.0 - x);
							
							color.y += abs(z.y) / 40.0;
						}
						
						lambda += log(abs(1.0 - 2.0*x));
						
						color.z = -lambda / 100.0;
					}
				}
				
				lambda /= 10000.0;
				
				if (lambda <= 0.0)
				{
					gl_FragColor = vec4(-lambda / brightnessScale * color, 1.0);
					
					return;
				}
			}
		`;this.wilson.render.shaderPrograms=[];this.wilson.render.loadNewShader(a);this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[0]);this.wilson.render.initUniforms("aspectRatio worldCenterX worldCenterY worldSize brightnessScale seq".split(" "));this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,1);this.wilsonHidden.render.shaderPrograms=[];this.wilsonHidden.render.loadNewShader(a);this.wilsonHidden.gl.useProgram(this.wilsonHidden.render.shaderPrograms[0]);this.wilsonHidden.render.initUniforms("aspectRatio worldCenterX worldCenterY worldSize brightnessScale seq".split(" "));
this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,1);this.pastBrightnessScales=[];this.zoom.init();this.wilson.gl.uniform1iv(this.wilson.uniforms.seq,c);this.wilsonHidden.gl.uniform1iv(this.wilsonHidden.uniforms.seq,c);window.requestAnimationFrame(this.drawFrame.bind(this))}drawFrame(a){var c=a-this.lastTimestamp;this.lastTimestamp=a;if(0!==c){this.pan.update();this.zoom.update();this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,this.aspectRatio);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterX,
this.wilson.worldCenterX);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterY,this.wilson.worldCenterY);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.brightnessScale,20);this.wilsonHidden.render.drawFrame();a=this.wilsonHidden.render.getPixelData();c=Array(this.resolutionHidden*this.resolutionHidden);for(let b=0;b<this.resolutionHidden*this.resolutionHidden;b++)c[b]=
a[4*b]+a[4*b+1]+a[4*b+2];c.sort((b,d)=>b-d);a=(c[Math.floor(this.resolutionHidden*this.resolutionHidden*.96)]+c[Math.floor(this.resolutionHidden*this.resolutionHidden*.98)])/255*6;this.pastBrightnessScales.push(a);a=this.pastBrightnessScales.length;10<a&&this.pastBrightnessScales.shift();a=Math.max(this.pastBrightnessScales.reduce((b,d)=>b+d)/a,.5);this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,this.aspectRatio);this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterX,this.wilson.worldCenterX);
this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterY,this.wilson.worldCenterY);this.wilson.gl.uniform1f(this.wilson.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2);this.wilson.gl.uniform1f(this.wilson.uniforms.brightnessScale,a);this.wilson.render.drawFrame();this.animationPaused||window.requestAnimationFrame(this.drawFrame.bind(this))}}};
