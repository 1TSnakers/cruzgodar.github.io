import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{hsvToRgb}from"/scripts/applets/applet.min.js";import{WilsonCPU}from"/scripts/wilson.min.js";class Boids extends AnimationFrameApplet{resolution=2e3;numBoids=500;boids=[];boidSize=.01;minVelocity;maxVelocity;alignmentRange;alignmentFactor;avoidRange;avoidFactor;centeringFactor;turnFactor;margin=.02;avoidCycle=0;numAvoidCycles;alignCycle=0;numAlignCycles;constructor({canvas}){super(canvas);var i={canvasWidth:this.resolution,fullscreenOptions:{useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}};this.wilson=new WilsonCPU(canvas,i),this.run({}),this.resume()}run({resolution=2e3,numBoids=500,minVelocity=.002,maxVelocity=.004,alignmentRange=.1,alignmentFactor=.05,avoidRange=.01,avoidFactor=.05,centeringFactor=5e-4,turnFactor=1e-4}){this.resolution=resolution,this.numBoids=numBoids,this.minVelocity=minVelocity,this.maxVelocity=maxVelocity,this.alignmentRange=alignmentRange,this.alignmentFactor=alignmentFactor,this.avoidRange=avoidRange,this.avoidFactor=avoidFactor,this.centeringFactor=centeringFactor,this.turnFactor=turnFactor,this.setResolution(resolution),this.setNumBoids(numBoids)}setResolution(resolution){this.resolution=resolution,this.wilson.resizeCanvas({width:this.resolution})}setNumBoids(numBoids){if(this.numBoids=numBoids,this.boids.length>this.numBoids)this.boids.splice(this.numBoids,this.boids.length-this.numBoids);else if(this.boids.length<this.numBoids)for(let i=this.boids.length;i<this.numBoids;i++){var t=this.minVelocity+Math.random()*(this.maxVelocity-this.minVelocity),s=2*Math.random()*Math.PI;this.boids.push({x:(Math.random()-.5)*this.wilson.worldWidth,y:(Math.random()-.5)*this.wilson.worldHeight,vx:Math.cos(s)*t,vy:Math.sin(s)*t})}this.numAvoidCycles=Math.ceil(this.numBoids/200),this.numAlignCycles=Math.ceil(this.numBoids/100)}drawFrame(){this.avoidCycle=(this.avoidCycle+1)%this.numAvoidCycles,this.alignCycle=(this.alignCycle+1)%this.numAlignCycles,this.updateBoids(),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution);for(let l=0;l<this.numBoids;l++){var i=this.boids[l],t=i.x,s=i.y,o=Math.atan2(i.vy,i.vx),i=i.vx*i.vx+i.vy*i.vy,i=hsvToRgb(o/(2*Math.PI)+.5,i/(this.maxVelocity*this.maxVelocity),1),i=(this.wilson.ctx.fillStyle=`rgb(${i[0]}, ${i[1]}, ${i[2]})`,o+2*Math.PI/3),n=o+4*Math.PI/3,e=t+2*Math.cos(o)*this.boidSize,o=s+2*Math.sin(o)*this.boidSize,a=t+Math.cos(i)*this.boidSize,i=s+Math.sin(i)*this.boidSize,h=t+Math.cos(n)*this.boidSize,n=s+Math.sin(n)*this.boidSize;this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(...this.wilson.interpolateWorldToCanvas([e,o])),this.wilson.ctx.lineTo(...this.wilson.interpolateWorldToCanvas([a,i])),this.wilson.ctx.lineTo(...this.wilson.interpolateWorldToCanvas([t,s])),this.wilson.ctx.lineTo(...this.wilson.interpolateWorldToCanvas([h,n])),this.wilson.ctx.closePath(),this.wilson.ctx.fill()}this.needNewFrame=!0}updateBoids(){for(let g=0;g<this.numBoids;g++){var r,c,d,m,v,u=this.boids[g];let i=0,t=0;for(let h=this.avoidCycle;h<this.numBoids;h+=this.numAvoidCycles)g!==h&&(r=u.x-this.boids[h].x,c=u.y-this.boids[h].y,d=Math.sqrt(r*r+c*c),i+=r*Math.exp(-d/this.avoidRange),t+=c*Math.exp(-d/this.avoidRange));u.vx+=i*this.avoidFactor,u.vy+=t*this.avoidFactor;let s=0,o=0,n=0,e=0,a=0;for(let l=this.alignCycle;l<this.numBoids;l+=this.numAlignCycles)g!==l&&(m=u.x-this.boids[l].x,v=u.y-this.boids[l].y,m=Math.sqrt(m*m+v*v),v=Math.exp(-m/this.alignmentRange),s+=this.boids[l].x*v,o+=this.boids[l].y*v,n+=this.boids[l].vx*v,e+=this.boids[l].vy*v,a+=v);0<a&&(u.x+=(s/a-u.x)*this.centeringFactor,u.y+=(o/a-u.y)*this.centeringFactor,u.vx+=(n/a-u.vx)*this.alignmentFactor,u.vy+=(e/a-u.vy)*this.alignmentFactor);var y=Math.exp(10*(Math.abs(u.x)-this.wilson.worldWidth/2)),x=Math.exp(10*(Math.abs(u.y)-this.wilson.worldHeight/2)),y=(u.vx-=Math.sign(u.x)*y*this.turnFactor,u.vy-=Math.sign(u.y)*x*this.turnFactor,u.vx*u.vx+u.vy*u.vy);y>this.maxVelocity*this.maxVelocity?(x=Math.sqrt(y),u.vx=this.maxVelocity*u.vx/x,u.vy=this.maxVelocity*u.vy/x):y<this.minVelocity*this.minVelocity&&(x=Math.sqrt(y),u.vx=this.minVelocity*u.vx/x,u.vy=this.minVelocity*u.vy/x),u.x+=u.vx,u.y+=u.vy}}}export{Boids};