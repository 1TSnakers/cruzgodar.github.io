import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{hsvToRgb}from"/scripts/applets/applet.min.js";import{WilsonCPU}from"/scripts/wilson.min.js";class Boids extends AnimationFrameApplet{resolution=2e3;numBoids;numBoidsOfPrey;boids=[];boidsOfPrey=[];boidSize=.01;minVelocity;maxVelocity;alignmentRange;alignmentFactor;avoidRange;avoidFactor;centeringFactor;turnFactor;fearFactor;fearRange;preyFactor;preyRange;margin=.02;avoidCycle=0;numAvoidCycles;alignCycle=0;numAlignCycles;frame=0;lastTimeElapseds=Array(16).fill(0);lastTimeElapsed=0;constructor({canvas}){super(canvas);var i={canvasWidth:this.resolution,fullscreenOptions:{fillScreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}};this.wilson=new WilsonCPU(canvas,i),this.run({}),this.resume()}run({resolution=2e3,numBoids=500,numBoidsOfPrey=0,minVelocity=.002,maxVelocity=.004,alignmentRange=.1,alignmentFactor=.05,avoidRange=.0075,avoidFactor=.1,centeringFactor=5e-4,turnFactor=1e-4,fearFactor=.01,fearRange=.1,preyFactor=5e-4,preyRange=.1}){this.resolution=resolution,this.numBoids=numBoids,this.numBoidsOfPrey=numBoidsOfPrey,this.minVelocity=minVelocity,this.maxVelocity=maxVelocity,this.alignmentRange=alignmentRange,this.alignmentFactor=alignmentFactor,this.avoidRange=avoidRange,this.avoidFactor=avoidFactor,this.centeringFactor=centeringFactor,this.turnFactor=turnFactor,this.fearFactor=fearFactor,this.fearRange=fearRange,this.preyFactor=preyFactor,this.preyRange=preyRange,this.setResolution(resolution),this.setNumBoids(numBoids),this.setNumBoidsOfPrey(numBoidsOfPrey)}setResolution(resolution){this.resolution=resolution,this.wilson.resizeCanvas({width:this.resolution})}setNumBoids(numBoids){if(this.numBoids=numBoids,this.boids.length>this.numBoids)this.boids.splice(this.numBoids,this.boids.length-this.numBoids);else if(this.boids.length<this.numBoids)for(let i=this.boids.length;i<this.numBoids;i++){var t=this.minVelocity+Math.random()*(this.maxVelocity-this.minVelocity),s=2*Math.random()*Math.PI;this.boids.push({x:(Math.random()-.5)*this.wilson.worldWidth,y:(Math.random()-.5)*this.wilson.worldHeight,vx:Math.cos(s)*t,vy:Math.sin(s)*t})}this.numAvoidCycles=Math.ceil(this.numBoids/200),this.numAlignCycles=Math.ceil(this.numBoids/100)}setNumBoidsOfPrey(numBoidsOfPrey){if(this.numBoidsOfPrey=numBoidsOfPrey,this.boidsOfPrey.length>this.numBoidsOfPrey)this.boidsOfPrey.splice(this.numBoidsOfPrey,this.boidsOfPrey.length-this.numBoidsOfPrey);else if(this.boidsOfPrey.length<this.numBoidsOfPrey)for(let i=this.boidsOfPrey.length;i<this.numBoidsOfPrey;i++){var t=this.minVelocity+Math.random()*(this.maxVelocity-this.minVelocity),s=2*Math.random()*Math.PI;this.boidsOfPrey.push({x:(Math.random()-.5)*this.wilson.worldWidth,y:(Math.random()-.5)*this.wilson.worldHeight,vx:Math.cos(s)*t,vy:Math.sin(s)*t})}}prepareFrame(timeElapsed){this.frame=(this.frame+1)%this.lastTimeElapseds.length,this.lastTimeElapseds[this.frame]=timeElapsed;for(let i=this.lastTimeElapsed=0;i<this.lastTimeElapseds.length;i++)this.lastTimeElapsed+=this.lastTimeElapseds[i];this.lastTimeElapsed/=this.lastTimeElapseds.length}drawFrame(){this.avoidCycle=(this.avoidCycle+1)%this.numAvoidCycles,this.alignCycle=(this.alignCycle+1)%this.numAlignCycles,this.updateBoids(),this.updateBoidsOfPrey(),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.wilson.canvasWidth,this.wilson.canvasHeight);for(let i=0;i<this.numBoids;i++)this.drawBoid(this.boids[i]);for(let t=0;t<this.numBoidsOfPrey;t++)this.drawBoid(this.boidsOfPrey[t],3);this.needNewFrame=!0}drawBoid(boid,size=1){var i=boid.x,t=boid.y,s=Math.atan2(boid.vy,boid.vx),e=boid.vx*boid.vx+boid.vy*boid.vy,e=hsvToRgb(s/(2*Math.PI)+.5,e/(this.maxVelocity*this.maxVelocity),1),e=(this.wilson.ctx.fillStyle=`rgb(${e[0]}, ${e[1]}, ${e[2]})`,s+2*Math.PI/3),o=s+4*Math.PI/3,a=i+2*Math.cos(s)*this.boidSize*size,s=t+2*Math.sin(s)*this.boidSize*size,h=i+Math.cos(e)*this.boidSize*size,e=t+Math.sin(e)*this.boidSize*size,n=i+Math.cos(o)*this.boidSize*size,o=t+Math.sin(o)*this.boidSize*size,i=this.wilson.interpolateWorldToCanvas([i,t]),t=this.wilson.interpolateWorldToCanvas([a,s]),a=this.wilson.interpolateWorldToCanvas([h,e]),s=this.wilson.interpolateWorldToCanvas([n,o]);this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(t[1],t[0]),this.wilson.ctx.lineTo(a[1],a[0]),this.wilson.ctx.lineTo(i[1],i[0]),this.wilson.ctx.lineTo(s[1],s[0]),this.wilson.ctx.closePath(),this.wilson.ctx.fill()}updateBoids(){for(let M=0;M<this.numBoids;M++){var d,y,c,m,v,x=this.boids[M];let i=0,t=0;for(let n=this.avoidCycle;n<this.numBoids;n+=this.numAvoidCycles)M!==n&&(d=x.x-this.boids[n].x,y=x.y-this.boids[n].y,c=Math.sqrt(d*d+y*y),i+=d*Math.exp(-c/this.avoidRange),t+=y*Math.exp(-c/this.avoidRange));x.vx+=i*this.avoidFactor,x.vy+=t*this.avoidFactor,i=0;for(let l=t=0;l<this.numBoidsOfPrey;l++){var u=x.x-this.boidsOfPrey[l].x,g=x.y-this.boidsOfPrey[l].y,p=Math.sqrt(u*u+g*g);i+=u*Math.exp(-p/this.fearRange),t+=g*Math.exp(-p/this.fearRange)}x.vx+=i*this.fearFactor,x.vy+=t*this.fearFactor;let s=0,e=0,o=0,a=0,h=0;for(let r=this.alignCycle;r<this.numBoids;r+=this.numAlignCycles)M!==r&&(m=x.x-this.boids[r].x,v=x.y-this.boids[r].y,m=Math.sqrt(m*m+v*v),v=Math.exp(-m/this.alignmentRange),s+=this.boids[r].x*v,e+=this.boids[r].y*v,o+=this.boids[r].vx*v,a+=this.boids[r].vy*v,h+=v);0<h&&(x.x+=(s/h-x.x)*this.centeringFactor,x.y+=(e/h-x.y)*this.centeringFactor,x.vx+=(o/h-x.vx)*this.alignmentFactor,x.vy+=(a/h-x.vy)*this.alignmentFactor);var f=Math.exp(15*(Math.abs(x.x)-(this.wilson.worldWidth/2-.075))),b=Math.exp(15*(Math.abs(x.y)-(this.wilson.worldHeight/2-.075))),f=(x.vx-=Math.sign(x.x)*f*this.turnFactor,x.vy-=Math.sign(x.y)*b*this.turnFactor,x.vx*x.vx+x.vy*x.vy);f>this.maxVelocity*this.maxVelocity?(b=Math.sqrt(f),x.vx=this.maxVelocity*x.vx/b,x.vy=this.maxVelocity*x.vy/b):f<this.minVelocity*this.minVelocity&&(b=Math.sqrt(f),x.vx=this.minVelocity*x.vx/b,x.vy=this.minVelocity*x.vy/b),x.x+=x.vx*(this.lastTimeElapsed/6.944),x.y+=x.vy*(this.lastTimeElapsed/6.944)}}updateBoidsOfPrey(){for(let f=0;f<this.numBoidsOfPrey;f++){var l,r,d,y,c,m=this.boidsOfPrey[f];let i=0,t=0;for(let a=this.avoidCycle;a<this.numBoids;a+=this.numAvoidCycles){var v=m.x-this.boids[a].x,x=m.y-this.boids[a].y,u=Math.sqrt(v*v+x*x);i+=v*Math.exp(-u/this.preyRange),t+=x*Math.exp(-u/this.preyRange)}m.vx-=i*this.preyFactor,m.vy-=t*this.preyFactor,i=0;for(let h=t=0;h<this.numBoidsOfPrey;h++)f!==h&&(l=m.x-this.boidsOfPrey[h].x,r=m.y-this.boidsOfPrey[h].y,d=Math.sqrt(l*l+r*r),i+=l*Math.exp(-d/this.avoidRange),t+=r*Math.exp(-d/this.avoidRange));m.vx+=i*this.avoidFactor,m.vy+=t*this.avoidFactor;let s=0,e=0,o=0;for(let n=this.alignCycle;n<this.numBoids;n+=this.numAlignCycles)f!==n&&(y=m.x-this.boids[n].x,c=m.y-this.boids[n].y,y=Math.sqrt(y*y+c*c),c=Math.exp(-y/(5*this.alignmentRange)),s+=this.boids[n].x*c,e+=this.boids[n].y*c,o+=c);0<o&&(m.x+=(s/o-m.x)*this.centeringFactor*3,m.y+=(e/o-m.y)*this.centeringFactor*3);var g=Math.exp(15*(Math.abs(m.x)-(this.wilson.worldWidth/2-.075))),p=Math.exp(15*(Math.abs(m.y)-(this.wilson.worldHeight/2-.075))),g=(m.vx-=Math.sign(m.x)*g*this.turnFactor,m.vy-=Math.sign(m.y)*p*this.turnFactor,m.vx*m.vx+m.vy*m.vy);g>this.maxVelocity*this.maxVelocity?(p=Math.sqrt(g),m.vx=this.maxVelocity*m.vx/p,m.vy=this.maxVelocity*m.vy/p):g<this.minVelocity*this.minVelocity&&(p=Math.sqrt(g),m.vx=this.minVelocity*m.vx/p,m.vy=this.minVelocity*m.vy/p),m.x+=m.vx*(this.lastTimeElapsed/6.944),m.y+=m.vy*(this.lastTimeElapsed/6.944)}}}export{Boids};