"use strict";class GeneralizedJuliaSet extends Applet{loadPromise=null;generatingCode="cadd(cpow(z, 2.0), c)";wilsonHidden=null;switchJuliaModeButtonElement=null;juliaMode=0;aspectRatio=1;numIterations=200;exposure=1;zoomLevel=0;pastBrightnessScales=[];a=0;b=0;resolution=500;resolutionHidden=50;fixedPointX=0;fixedPointY=0;nextPanVelocityX=0;nextPanVelocityY=0;nextZoomVelocity=0;panVelocityX=0;panVelocityY=0;zoomVelocity=0;panFriction=.96;panVelocityStartThreshhold=.0025;panVelocityStopThreshhold=25e-5;zoomFriction=.93;zoomVelocityStartThreshhold=.01;zoomVelocityStopThreshhold=.001;lastTimestamp=-1;constructor(i,t,e=null){super(i),this.switchJuliaModeButtonElement=e;let o=this.createHiddenCanvas(),s="precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",n={renderer:"gpu",shader:s,canvasWidth:this.resolution,canvasHeight:this.resolution,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:this.changeAspectRatio.bind(this),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousemoveCallback:this.onHoverCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),touchendCallback:this.onReleaseCanvas.bind(this),wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this)};this.wilson=new Wilson(i,n);let l={renderer:"gpu",shader:s,canvasWidth:this.resolutionHidden,canvasHeight:this.resolutionHidden};this.wilsonHidden=new Wilson(o,l);let h=this.changeAspectRatio.bind(this);window.addEventListener("resize",h),this.handlers.push([window,"resize",h]),this.loadPromise=new Promise(async(i,t)=>{await Site.loadGlsl(),i()})}run(i="cpow(z, 2.0) + c",t=500,e=1,o=200){this.generatingCode=i,this.resolution=t,this.exposure=e,this.numIterations=o;let s=`
   precision highp float;
   
   varying vec2 uv;
   
   uniform int juliaMode;
   
   uniform float aspectRatio;
   
   uniform float worldCenterX;
   uniform float worldCenterY;
   uniform float worldSize;
   
   uniform float a;
   uniform float b;
   uniform float exposure;
   uniform int numIterations;
   uniform float brightnessScale;
   
   
   
   ${Site.getGlslBundle(i)}
   
   
   
   void main(void)
   {
    vec2 z;
    
    if (aspectRatio >= 1.0)
    {
     z = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);
    }
    
    else
    {
     z = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);
    }
    
    vec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));
    float brightness = exp(-length(z));
    
    
    
    if (juliaMode == 0)
    {
     vec2 c = z;
     
     for (int iteration = 0; iteration < 3001; iteration++)
     {
      if (iteration == numIterations)
      {
       gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
       return;
      }
      
      if (length(z) >= 1000.0)
      {
       break;
      }
      
      z = ${i};
      
      brightness += exp(-length(z));
     }
     
     
     gl_FragColor = vec4(brightness / brightnessScale * exposure * color, 1.0);
    }
    
    
    
    else if (juliaMode == 1)
    {
     vec2 c = vec2(a, b);
     
     for (int iteration = 0; iteration < 3001; iteration++)
     {
      if (iteration == numIterations)
      {
       gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
       return;
      }
      
      if (length(z) >= 4.0)
      {
       break;
      }
      
      z = ${i};
      
      brightness += exp(-length(z));
     }
     
     
     gl_FragColor = vec4(brightness / brightnessScale * exposure * color, 1.0);
    }
    
    
    
    else
    {
     vec2 c = z;
     
     bool broken = false;
     
     for (int iteration = 0; iteration < 3001; iteration++)
     {
      if (iteration == numIterations)
      {
       gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
       
       broken = true;
       
       break;
      }
      
      if (length(z) >= 4.0)
      {
       break;
      }
      
      z = ${i};
      
      brightness += exp(-length(z));
     }
     
     
     
     if (!broken)
     {
      gl_FragColor = vec4(.5 * brightness / brightnessScale * exposure * color, 1.0);
     }
     
     
     
     z = vec2(uv.x * aspectRatio * 2.0, uv.y * 2.0);
     color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));
     brightness = exp(-length(z));
     
     broken = false;
     
     c = vec2(a, b);
     
     for (int iteration = 0; iteration < 3001; iteration++)
     {
      if (iteration == numIterations)
      {
       gl_FragColor.xyz /= 4.0;
       
       broken = true;
       
       break;
      }
      
      if (length(z) >= 4.0)
      {
       break;
      }
      
      z = ${i};
      
      brightness += exp(-length(z));
     }
     
     if (!broken)
     {
      gl_FragColor += vec4(brightness / brightnessScale * exposure * color, 0.0);
     }
    }
   }
  `;this.wilson.render.shaderPrograms=[],this.wilson.render.loadNewShader(s),this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[0]),this.wilson.render.initUniforms(["juliaMode","aspectRatio","worldCenterX","worldCenterY","worldSize","a","b","exposure","numIterations","brightnessScale"]),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,1),this.wilsonHidden.render.shaderPrograms=[],this.wilsonHidden.render.loadNewShader(s),this.wilsonHidden.gl.useProgram(this.wilsonHidden.render.shaderPrograms[0]),this.wilsonHidden.render.initUniforms(["juliaMode","aspectRatio","worldCenterX","worldCenterY","worldSize","a","b","exposure","numIterations","brightnessScale"]),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,1),this.nextPanVelocityX=0,this.nextPanVelocityY=0,this.nextZoomVelocity=0,this.panVelocityX=0,this.panVelocityY=0,this.zoomVelocity=0,this.wilson.worldWidth=4,this.wilson.worldHeight=4,this.wilson.worldCenterX=0,this.wilson.worldCenterY=0,this.juliaMode=0,this.zoomLevel=0,this.pastBrightnessScales=[],this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,1),window.requestAnimationFrame(this.drawFrame.bind(this))}switchJuliaMode(){try{Page.Animate.changeOpacity(this.switchJuliaModeButtonElement,0,Site.opacityAnimationTime),setTimeout(()=>{2===this.juliaMode?this.switchJuliaModeButtonElement.textContent="Return to Mandelbrot Set":0===this.juliaMode&&(this.switchJuliaModeButtonElement.textContent="Pick Julia Set",Page.Animate.changeOpacity(this.switchJuliaModeButtonElement,1,Site.opacityAnimationTime))},Site.opacityAnimationTime)}catch(i){}0===this.juliaMode?(this.juliaMode=2,this.a=0,this.b=0,this.panVelocityX=0,this.panVelocityY=0,this.zoomVelocity=0,this.nextPanVelocityX=0,this.nextPanVelocityY=0,this.nextZoomVelocity=0,this.pastBrightnessScales=[],window.requestAnimationFrame(this.drawFrame.bind(this))):1===this.juliaMode&&(this.juliaMode=0,this.wilson.worldCenterX=0,this.wilson.worldCenterY=0,this.wilson.worldWidth=4,this.wilson.worldHeight=4,this.zoomLevel=0,this.pastBrightnessScales=[],window.requestAnimationFrame(this.drawFrame.bind(this)))}onGrabCanvas(i,t,e){if(this.panVelocityX=0,this.panVelocityY=0,this.zoomVelocity=0,this.nextPanVelocityX=0,this.nextPanVelocityY=0,this.nextZoomVelocity=0,2===this.juliaMode&&"mousedown"===e.type){this.juliaMode=1,this.wilson.worldCenterX=0,this.wilson.worldCenterY=0,this.wilson.worldWidth=4,this.wilson.worldHeight=4,this.zoomLevel=0,this.pastBrightnessScales=[];try{Page.Animate.changeOpacity(this.switchJuliaModeButtonElement,1,Site.opacityAnimationTime)}catch(o){}window.requestAnimationFrame(this.drawFrame.bind(this))}}onDragCanvas(i,t,e,o,s){2===this.juliaMode&&"touchmove"===s.type?(this.a=i,this.b=t):(this.wilson.worldCenterX-=e,this.wilson.worldCenterY-=o,this.nextPanVelocityX=-e/this.wilson.worldWidth,this.nextPanVelocityY=-o/this.wilson.worldHeight),window.requestAnimationFrame(this.drawFrame.bind(this))}onHoverCanvas(i,t,e,o,s){2===this.juliaMode&&"mousemove"===s.type&&(this.a=i,this.b=t,window.requestAnimationFrame(this.drawFrame.bind(this)))}onReleaseCanvas(i,t,e){if(2===this.juliaMode&&"touchend"===e.type){this.juliaMode=1,this.wilson.worldCenterX=0,this.wilson.worldCenterY=0,this.wilson.worldWidth=4,this.wilson.worldHeight=4,this.zoomLevel=0,this.pastBrightnessScales=[];try{Page.Animate.changeOpacity(this.switchJuliaModeButtonElement,1,Site.opacityAnimationTime)}catch(o){}}else this.nextPanVelocityX*this.nextPanVelocityX+this.nextPanVelocityY*this.nextPanVelocityY>=this.panVelocityStartThreshhold*this.panVelocityStartThreshhold&&(this.panVelocityX=this.nextPanVelocityX,this.panVelocityY=this.nextPanVelocityY),Math.abs(this.nextZoomVelocity)>=this.zoomVelocityStartThreshhold&&(this.zoomVelocity=this.nextZoomVelocity);window.requestAnimationFrame(this.drawFrame.bind(this))}onWheelCanvas(i,t,e,o){this.fixedPointX=i,this.fixedPointY=t,.3>Math.abs(e/100)?(this.zoomLevel+=e/100,this.zoomLevel=Math.min(this.zoomLevel,1)):this.zoomVelocity+=.05*Math.sign(e),this.zoomCanvas()}onPinchCanvas(i,t,e,o){2!==this.juliaMode&&(this.aspectRatio>=1?(this.zoomLevel-=e/this.wilson.worldWidth*10,this.nextZoomVelocity=-e/this.wilson.worldWidth*10):(this.zoomLevel-=e/this.wilson.worldHeight*10,this.nextZoomVelocity=-e/this.wilson.worldHeight*10),this.zoomLevel=Math.min(this.zoomLevel,1),this.fixedPointX=i,this.fixedPointY=t,this.zoomCanvas())}zoomCanvas(){if(this.aspectRatio>=1){let i=this.wilson.input.getZoomedWorldCenter(this.fixedPointX,this.fixedPointY,4*Math.pow(2,this.zoomLevel)*this.aspectRatio,4*Math.pow(2,this.zoomLevel));this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel)*this.aspectRatio,this.wilson.worldHeight=4*Math.pow(2,this.zoomLevel),this.wilson.worldCenterX=i[0],this.wilson.worldCenterY=i[1]}else{let t=this.wilson.input.getZoomedWorldCenter(this.fixedPointX,this.fixedPointY,4*Math.pow(2,this.zoomLevel),4*Math.pow(2,this.zoomLevel)/this.aspectRatio);this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel),this.wilson.worldHeight=4*Math.pow(2,this.zoomLevel)/this.aspectRatio,this.wilson.worldCenterX=t[0],this.wilson.worldCenterY=t[1]}this.numIterations=-(30*this.zoomLevel)+200,window.requestAnimationFrame(this.drawFrame.bind(this))}drawFrame(i){let t=i-this.lastTimestamp;if(this.lastTimestamp=i,0===t)return;this.wilsonHidden.gl.uniform1i(this.wilsonHidden.uniforms.juliaMode,this.juliaMode),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterX,this.wilson.worldCenterX),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterY,this.wilson.worldCenterY),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2),this.wilsonHidden.gl.uniform1i(this.wilsonHidden.uniforms.numIterations,this.numIterations),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.exposure,1),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.a,this.a),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.b,this.b),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.brightnessScale,20*(Math.abs(this.zoomLevel)+1)),this.wilsonHidden.render.drawFrame();let e=this.wilsonHidden.render.getPixelData(),o=Array(this.resolutionHidden*this.resolutionHidden);for(let s=0;s<this.resolutionHidden*this.resolutionHidden;s++)o[s]=e[4*s]+e[4*s+1]+e[4*s+2];o.sort((i,t)=>i-t);let n=(o[Math.floor(this.resolutionHidden*this.resolutionHidden*.96)]+o[Math.floor(this.resolutionHidden*this.resolutionHidden*.98)])/255*15*(Math.abs(this.zoomLevel/2)+1);this.pastBrightnessScales.push(n);let l=this.pastBrightnessScales.length;l>10&&this.pastBrightnessScales.shift(),n=Math.max(this.pastBrightnessScales.reduce((i,t)=>i+t)/l,.5),this.wilson.gl.uniform1i(this.wilson.uniforms.juliaMode,this.juliaMode),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,this.aspectRatio),this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterX,this.wilson.worldCenterX),this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterY,this.wilson.worldCenterY),this.wilson.gl.uniform1f(this.wilson.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2),this.wilson.gl.uniform1i(this.wilson.uniforms.numIterations,this.numIterations),this.wilson.gl.uniform1f(this.wilson.uniforms.exposure,this.exposure),this.wilson.gl.uniform1f(this.wilson.uniforms.a,this.a),this.wilson.gl.uniform1f(this.wilson.uniforms.b,this.b),this.wilson.gl.uniform1f(this.wilson.uniforms.brightnessScale,n),this.wilson.render.drawFrame(),t>=50&&(this.panVelocityX=0,this.panVelocityY=0,this.zoomVelocity=0,this.nextPanVelocityX=0,this.nextPanVelocityY=0,this.nextZoomVelocity=0),(0!==this.panVelocityX||0!==this.panVelocityY||0!==this.zoomVelocity)&&(this.wilson.worldCenterX+=this.panVelocityX*this.wilson.worldWidth,this.wilson.worldCenterY+=this.panVelocityY*this.wilson.worldHeight,this.panVelocityX*=this.panFriction,this.panVelocityY*=this.panFriction,this.panVelocityX*this.panVelocityX+this.panVelocityY*this.panVelocityY<this.panVelocityStopThreshhold*this.panVelocityStopThreshhold&&(this.panVelocityX=0,this.panVelocityY=0),this.zoomLevel+=this.zoomVelocity,this.zoomLevel=Math.min(this.zoomLevel,1),this.zoomCanvas(),this.zoomVelocity*=this.zoomFriction,Math.abs(this.zoomVelocity)<this.zoomVelocityStopThreshhold&&(this.zoomVelocity=0),window.requestAnimationFrame(this.drawFrame.bind(this)))}changeAspectRatio(){this.wilson.fullscreen.currentlyFullscreen?(this.aspectRatio=window.innerWidth/window.innerHeight,this.aspectRatio>=1?(this.wilson.changeCanvasSize(this.resolution,Math.floor(this.resolution/this.aspectRatio)),this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel)*this.aspectRatio,this.wilson.worldHeight=4*Math.pow(2,this.zoomLevel)):(this.wilson.changeCanvasSize(Math.floor(this.resolution*this.aspectRatio),this.resolution),this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel),this.wilson.worldHeight=4*Math.pow(2,this.zoomLevel)/this.aspectRatio)):(this.aspectRatio=1,this.wilson.changeCanvasSize(this.resolution,this.resolution),this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel),this.wilson.worldHeight=4*Math.pow(2,this.zoomLevel)),window.requestAnimationFrame(this.drawFrame.bind(this))}}