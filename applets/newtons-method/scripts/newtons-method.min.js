!function(){"use strict";let t=1e3,e=[],n=document.querySelector("#newtons-method-plot").getContext("webgl"),o=!1,r=!0,l=[],i=-1,s=-1,u=document.querySelector("#root-selector").offsetWidth,a=document.querySelector("#root-selector").offsetHeight,c=17.5,d=20,_=!1;!function(){1===url_vars.contrast&&(1===url_vars.theme?document.querySelector("#newtons-method-plot").style.borderColor="rgb(192, 192, 192)":document.querySelector("#newtons-method-plot").style.borderColor="rgb(64, 64, 64)");add_style("\n\t\t\t.root-marker.hover\n\t\t\t{\n\t\t\t\tbackground-color: rgb(127, 127, 127);\t\n\t\t\t}\n\t\t\t\n\t\t\t.root-marker:not(:hover):focus\n\t\t\t{\n\t\t\t\tbackground-color: rgb(127, 127, 127);\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t",!0)}(),document.documentElement.addEventListener("touchstart",v,!1),document.documentElement.addEventListener("touchmove",b,!1),document.documentElement.addEventListener("touchend",y,!1),document.documentElement.addEventListener("mousedown",v,!1),document.documentElement.addEventListener("mousemove",b,!1),document.documentElement.addEventListener("mouseup",y,!1),temporary_handlers.touchstart.push(v),temporary_handlers.touchmove.push(b),temporary_handlers.touchend.push(y),temporary_handlers.mousedown.push(v),temporary_handlers.mousemove.push(b),temporary_handlers.mouseup.push(y),document.querySelector("#root-a-input").addEventListener("input",S),document.querySelector("#root-b-input").addEventListener("input",S),document.querySelector("#root-a-input").addEventListener("keydown",function(t){13===t.keyCode&&window.requestAnimationFrame(p)}),document.querySelector("#root-b-input").addEventListener("keydown",function(t){13===t.keyCode&&window.requestAnimationFrame(p)}),document.querySelector("#resolution-input").addEventListener("input",function(){(t=parseInt(document.querySelector("#resolution-input").value||1e3))<200&&(t=200);t>2e3&&(t=2e3);document.querySelector("#newtons-method-plot").setAttribute("width",t),document.querySelector("#newtons-method-plot").setAttribute("height",t),n.viewport(0,0,t,t),window.requestAnimationFrame(p)}),document.querySelector("#add-marker-button").addEventListener("click",function(){if(8===e.length)return;let t=3*Math.random()-1.5,n=3*Math.random()-1.5,o=Math.floor(a*(1-(n/4+.5))),i=Math.floor(u*(t/4+.5)),s=document.createElement("div");s.classList.add("root-marker"),s.id=`root-marker-${l.length}`,s.style.transform=`translate3d(${i-c}px, ${o-c}px, 0)`,document.querySelector("#root-selector").appendChild(s),l.push(s),e.push([t,n]),d=20,_=!0,r&&window.requestAnimationFrame(p)}),document.querySelector("#spread-markers-button").addEventListener("click",function(t=!0){document.querySelector("#polynomial-label-1").textContent="",document.querySelector("#polynomial-label-2").textContent="",document.querySelector("#polynomial-label-3").textContent="";for(let t=0;t<e.length;t++){t<e.length/2||e.length%2==1?(e[t][0]=Math.cos(2*Math.PI*2*t/e.length),e[t][1]=Math.sin(2*Math.PI*2*t/e.length)):(e[t][0]=Math.cos(2*Math.PI*(2*t+1)/e.length),e[t][1]=Math.sin(2*Math.PI*(2*t+1)/e.length));let n=Math.floor(a*(1-(e[t][1]/4+.5))),o=Math.floor(u*(e[t][0]/4+.5));l[t].style.transform=`translate3d(${o-c}px, ${n-c}px, 0)`}_=!0,r&&window.requestAnimationFrame(p)}),document.querySelector("#generate-high-res-plot-button").addEventListener("click",function(){t=parseInt(document.querySelector("#dim-input").value||2e3),document.querySelector("#newtons-method-plot").setAttribute("width",t),document.querySelector("#newtons-method-plot").setAttribute("height",t),n.viewport(0,0,t,t),p();let e=document.createElement("a");e.download="newtons-method.png",e.href=document.querySelector("#newtons-method-plot").toDataURL(),e.click(),e.remove(),t=1e3,document.querySelector("#newtons-method-plot").setAttribute("width",t),document.querySelector("#newtons-method-plot").setAttribute("height",t),n.viewport(0,0,t,t),p()}),document.querySelector("#dim-input").addEventListener("keydown",function(t){13===t.keyCode&&draw_high_res_plot()}),window.addEventListener("resize",z),temporary_handlers.resize.push(z),applet_canvases_to_resize=[document.querySelector("#newtons-method-plot"),document.querySelector("#root-selector")],applet_canvas_resize_callback=function(){u=document.querySelector("#root-selector").offsetWidth,a=document.querySelector("#root-selector").offsetHeight,z()},set_up_canvas_resizer(),setTimeout(function(){let e=g(n,n.VERTEX_SHADER,m),o=g(n,n.FRAGMENT_SHADER,h);f=n.createProgram(),n.attachShader(f,e),n.attachShader(f,o),n.linkProgram(f),n.getProgramParameter(f,n.LINK_STATUS)||(console.log(`Couldn't link shader program: ${n.getShaderInfoLog(shader)}`),n.deleteProgram(f));n.useProgram(f);let r=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,r),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,0,-1,1,0,1,-1,0,1,1,0]),n.STATIC_DRAW),f.position_attribute=n.getAttribLocation(f,"position"),n.enableVertexAttribArray(f.position_attribute),n.vertexAttribPointer(f.position_attribute,3,n.FLOAT,!1,0,0),f.num_roots_uniform=n.getUniformLocation(f,"num_roots"),f.root_1_uniform=n.getUniformLocation(f,"root_1"),f.root_2_uniform=n.getUniformLocation(f,"root_2"),f.root_3_uniform=n.getUniformLocation(f,"root_3"),f.root_4_uniform=n.getUniformLocation(f,"root_4"),f.root_5_uniform=n.getUniformLocation(f,"root_5"),f.root_6_uniform=n.getUniformLocation(f,"root_6"),f.root_7_uniform=n.getUniformLocation(f,"root_7"),f.root_8_uniform=n.getUniformLocation(f,"root_8"),f.brightness_scale_uniform=n.getUniformLocation(f,"brightness_scale"),document.querySelector("#newtons-method-plot").setAttribute("width",t),document.querySelector("#newtons-method-plot").setAttribute("height",t),n.viewport(0,0,t,t)},500);const m="\n\t\tattribute vec3 position;\n\t\tvarying vec2 uv;\n\n\t\tvoid main(void)\n\t\t{\n\t\t\tgl_Position = vec4(position, 1.0);\n\n\t\t\t//Interpolate quad coordinates in the fragment shader.\n\t\t\tuv = position.xy;\n\t\t}\n\t",h="\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform int num_roots;\n\t\t\n\t\tuniform vec2 root_1;\n\t\tuniform vec2 root_2;\n\t\tuniform vec2 root_3;\n\t\tuniform vec2 root_4;\n\t\tuniform vec2 root_5;\n\t\tuniform vec2 root_6;\n\t\tuniform vec2 root_7;\n\t\tuniform vec2 root_8;\n\t\t\n\t\tconst vec3 color_1 = vec3(1.0, 0.0, 0.0);\n\t\tconst vec3 color_2 = vec3(0.0, 1.0, 0.0);\n\t\tconst vec3 color_3 = vec3(0.0, 0.0, 1.0);\n\t\tconst vec3 color_4 = vec3(0.0, 1.0, 1.0);\n\t\tconst vec3 color_5 = vec3(1.0, 0.0, 1.0);\n\t\tconst vec3 color_6 = vec3(1.0, 1.0, 0.0);\n\t\tconst vec3 color_7 = vec3(0.5, 0.0, 1.0);\n\t\tconst vec3 color_8 = vec3(1.0, 0.5, 0.0);\n\t\t\n\t\tuniform float brightness_scale;\n\t\t\n\t\tconst float threshhold = .05;\n\t\t\n\t\t\n\t\t\n\t\t//Returns z_1 * z_2.\n\t\tvec2 complex_multiply(vec2 z_1, vec2 z_2)\n\t\t{\n\t\t\treturn vec2(z_1.x * z_2.x - z_1.y * z_2.y, z_1.x * z_2.y + z_1.y * z_2.x);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t//Returns 1/z.\n\t\tvec2 complex_invert(vec2 z)\n\t\t{\n\t\t\tfloat magnitude = z.x*z.x + z.y*z.y;\n\t\t\t\n\t\t\treturn vec2(z.x / magnitude, -z.y / magnitude);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t//Returns f(z) for a polynomial f with given roots.\n\t\tvec2 complex_polynomial(vec2 z)\n\t\t{\n\t\t\tvec2 result = vec2(1.0, 0.0);\n\t\t\t\n\t\t\tif (num_roots == 0)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_1);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 1)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_2);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 2)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_3);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 3)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_4);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 4)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_5);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 5)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_6);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 6)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_7);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 7)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_8);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t//Approximates f'(z) for a polynomial f with given roots.\n\t\tvec2 complex_derivative(vec2 z)\n\t\t{\n\t\t\treturn 1000.0 * (complex_polynomial(z) - complex_polynomial(z - vec2(.001, 0.0)));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tvec2 z = vec2(uv.x * 2.0, uv.y * 2.0);\n\t\t\tvec2 last_z = vec2(0.0, 0.0);\n\t\t\t\n\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tvec2 temp = complex_multiply(complex_polynomial(z), complex_invert(complex_derivative(z)));\n\t\t\t\t\n\t\t\t\tlast_z = z;\n\t\t\t\t\n\t\t\t\tz -= temp;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 1)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_1);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_1 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 2)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_2);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_2 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 3)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_3);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_3);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_3 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 4)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_4);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_4 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 5)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_5);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_5);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_5 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 6)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_6);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_6);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_6 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 7)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_7);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_7);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_7 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 8)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_8);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_8);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_8 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t";let f=null;function g(t,e,n){let o=t.createShader(e);return t.shaderSource(o,n),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)||(console.log(`Couldn't load shader: ${t.getProgramInfoLog(shaderProgram)}`),t.deleteShader(o)),o}function p(){n.uniform1i(f.num_roots_uniform,e.length),e.length>=1&&n.uniform2fv(f.root_1_uniform,e[0]),e.length>=2&&n.uniform2fv(f.root_2_uniform,e[1]),e.length>=3&&n.uniform2fv(f.root_3_uniform,e[2]),e.length>=4&&n.uniform2fv(f.root_4_uniform,e[3]),e.length>=5&&n.uniform2fv(f.root_5_uniform,e[4]),e.length>=6&&n.uniform2fv(f.root_6_uniform,e[5]),e.length>=7&&n.uniform2fv(f.root_7_uniform,e[6]),e.length>=8&&n.uniform2fv(f.root_8_uniform,e[7]),n.uniform1f(f.brightness_scale_uniform,d),n.drawArrays(n.TRIANGLE_STRIP,0,4);let l=new Uint8Array(t*t*4);n.readPixels(0,0,t,t,n.RGBA,n.UNSIGNED_BYTE,l);let i=0;for(let e=0;e<t*t;e++)1!==l[4*e]&&1!==l[4*e+1]&&1!==l[4*e+2]||i++;let s=!1;i<25e-6*t*t*e.length?(d-=.25,s=!0):i>5e-5*t*t*e.length&&(d+=.25,s=!0),_?s?window.requestAnimationFrame(p):(_=!1,r=!0):o?(o=!1,window.requestAnimationFrame(p)):r=!0}function v(t){i=-1;for(let e=0;e<l.length;e++)if(t.target.id===`root-marker-${e}`){t.preventDefault(),i=e;break}}function y(t){-1!==i&&(document.body.style.WebkitUserSelect="",_=!0,o=!0,r&&(r=!1,window.requestAnimationFrame(p)),document.querySelector("#polynomial-label-1").textContent="",document.querySelector("#polynomial-label-2").textContent="",document.querySelector("#polynomial-label-3").textContent="",s=i,document.querySelector("#root-a-input").value=Math.round(1e3*e[s][0])/1e3,document.querySelector("#root-b-input").value=Math.round(1e3*e[s][1])/1e3,document.querySelector("#root-setter").style.pointerEvents="auto",document.querySelector("#root-setter").style.opacity=1),i=-1}function b(t){if(-1===i)return;let n=null,s=null,d=document.querySelector("#root-selector").getBoundingClientRect();"touchmove"===t.type?(n=t.touches[0].clientY-d.top,s=t.touches[0].clientX-d.left):(n=t.clientY-d.top,s=t.clientX-d.left),n<c&&(n=c),n>a-c&&(n=a-c),s<c&&(s=c),s>u-c&&(s=u-c),l[i].style.transform=`translate3d(${s-c}px, ${n-c}px, 0)`;let m=(s-u/2)/u*4,h=-(n-a/2)/a*4;e[i][0]=m,e[i][1]=h,o=!0,(_||r)&&(_=!1,r=!1,window.requestAnimationFrame(p))}function S(){e[s][0]=parseFloat(document.querySelector("#root-a-input").value)||0,e[s][1]=parseFloat(document.querySelector("#root-b-input").value)||0;let t=Math.floor(a*(1-(e[s][1]/4+.5))),n=Math.floor(u*(e[s][0]/4+.5));l[s].style.transform=`translate3d(${n-c}px, ${t-c}px, 0)`,window.requestAnimationFrame(p)}function z(){u=document.querySelector("#root-selector").offsetWidth,a=document.querySelector("#root-selector").offsetHeight;document.querySelector("#root-selector").getBoundingClientRect();for(let t=0;t<e.length;t++){let n=Math.floor(a*(1-(e[t][1]/4+.5))),o=Math.floor(u*(e[t][0]/4+.5));l[t].style.transform=`translate3d(${o-c}px, ${n-c}px, 0)`}}}();