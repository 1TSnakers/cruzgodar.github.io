!function(){"use strict";let t=1e3,e=1e3,n=1e3,o=[],r=document.querySelector("#newtons-method-plot").getContext("webgl"),l=!1,i=!0,s=[],a=-1,u=-1,c=document.querySelector("#root-selector").offsetWidth,_=document.querySelector("#root-selector").offsetHeight,d=17.5,m=20,h=!1;!function(){1===url_vars.contrast&&(1===url_vars.theme?document.querySelector("#newtons-method-plot").style.borderColor="rgb(192, 192, 192)":document.querySelector("#newtons-method-plot").style.borderColor="rgb(64, 64, 64)");add_style("\n\t\t\t.root-marker.hover\n\t\t\t{\n\t\t\t\tbackground-color: rgb(127, 127, 127);\t\n\t\t\t}\n\t\t\t\n\t\t\t.root-marker:not(:hover):focus\n\t\t\t{\n\t\t\t\tbackground-color: rgb(127, 127, 127);\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t",!0)}(),document.documentElement.addEventListener("touchstart",b,!1),document.documentElement.addEventListener("touchmove",S,!1),document.documentElement.addEventListener("touchend",w,!1),document.documentElement.addEventListener("mousedown",b,!1),document.documentElement.addEventListener("mousemove",S,!1),document.documentElement.addEventListener("mouseup",w,!1),temporary_handlers.touchstart.push(b),temporary_handlers.touchmove.push(S),temporary_handlers.touchend.push(w),temporary_handlers.mousedown.push(b),temporary_handlers.mousemove.push(S),temporary_handlers.mouseup.push(w),document.querySelector("#root-a-input").addEventListener("input",z),document.querySelector("#root-b-input").addEventListener("input",z),document.querySelector("#root-a-input").addEventListener("keydown",function(t){13===t.keyCode&&window.requestAnimationFrame(y)}),document.querySelector("#root-b-input").addEventListener("keydown",function(t){13===t.keyCode&&window.requestAnimationFrame(y)}),document.querySelector("#resolution-input").addEventListener("input",function(){(t=parseInt(document.querySelector("#resolution-input").value||1e3))<200&&(t=200);t>2e3&&(t=2e3);canvas_is_fullscreen&&(aspect_ratio>=1?(e=t,n=Math.floor(t/aspect_ratio)):(e=Math.floor(t*aspect_ratio),n=t));document.querySelector("#newtons-method-plot").setAttribute("width",e),document.querySelector("#newtons-method-plot").setAttribute("height",n),r.viewport(0,0,e,n),window.requestAnimationFrame(y)}),document.querySelector("#add-marker-button").addEventListener("click",function(){if(8===o.length)return;let t=3*Math.random()-1.5,r=3*Math.random()-1.5,l=Math.floor(_*(1-(r/4+.5))),a=Math.floor(c*(t/(e/n)/4+.5)),u=document.createElement("div");u.classList.add("root-marker"),u.classList.add("no-floating-footer"),u.id=`root-marker-${s.length}`,u.style.transform=`translate3d(${a-d}px, ${l-d}px, 0)`,document.querySelector("#root-selector").appendChild(u),s.push(u),o.push([t,r]),m=20,h=!0,i&&window.requestAnimationFrame(y)}),document.querySelector("#spread-markers-button").addEventListener("click",function(t=!0){document.querySelector("#polynomial-label-1").textContent="",document.querySelector("#polynomial-label-2").textContent="",document.querySelector("#polynomial-label-3").textContent="";for(let t=0;t<o.length;t++){t<o.length/2||o.length%2==1?(o[t][0]=Math.cos(2*Math.PI*2*t/o.length),o[t][1]=Math.sin(2*Math.PI*2*t/o.length)):(o[t][0]=Math.cos(2*Math.PI*(2*t+1)/o.length),o[t][1]=Math.sin(2*Math.PI*(2*t+1)/o.length));let r=Math.floor(_*(1-(o[t][1]/4+.5))),l=Math.floor(c*(o[t][0]/(e/n)/4+.5));s[t].style.transform=`translate3d(${l-d}px, ${r-d}px, 0)`}h=!0,i&&window.requestAnimationFrame(y)}),document.querySelector("#generate-high-res-plot-button").addEventListener("click",function(){t=parseInt(document.querySelector("#dim-input").value||2e3),canvas_is_fullscreen?aspect_ratio>=1?(e=t,n=Math.floor(t/aspect_ratio)):(e=Math.floor(t*aspect_ratio),n=t):(e=t,n=t);document.querySelector("#newtons-method-plot").setAttribute("width",e),document.querySelector("#newtons-method-plot").setAttribute("height",n),r.viewport(0,0,e,n),y();let o=document.createElement("a");o.download="newtons-method.png",o.href=document.querySelector("#newtons-method-plot").toDataURL(),o.click(),o.remove(),t=1e3,canvas_is_fullscreen?aspect_ratio>=1?(e=t,n=Math.floor(t/aspect_ratio)):(e=Math.floor(t*aspect_ratio),n=t):(e=t,n=t);document.querySelector("#newtons-method-plot").setAttribute("width",e),document.querySelector("#newtons-method-plot").setAttribute("height",n),r.viewport(0,0,e,n),y()}),document.querySelector("#dim-input").addEventListener("keydown",function(t){13===t.keyCode&&draw_high_res_plot()}),window.addEventListener("resize",q),temporary_handlers.resize.push(q),applet_canvases_to_resize=[document.querySelector("#newtons-method-plot"),document.querySelector("#root-selector")],applet_canvas_resize_callback=function(){canvas_is_fullscreen?aspect_ratio>=1?(e=t,n=Math.floor(t/aspect_ratio)):(e=Math.floor(t*aspect_ratio),n=t):(e=t,n=t),document.querySelector("#newtons-method-plot").setAttribute("width",e),document.querySelector("#newtons-method-plot").setAttribute("height",n),r.viewport(0,0,e,n),q(),window.requestAnimationFrame(y)},applet_canvas_true_fullscreen=!0,set_up_canvas_resizer(),setTimeout(function(){let t=v(r,r.VERTEX_SHADER,f),o=v(r,r.FRAGMENT_SHADER,g);p=r.createProgram(),r.attachShader(p,t),r.attachShader(p,o),r.linkProgram(p),r.getProgramParameter(p,r.LINK_STATUS)||(console.log(`Couldn't link shader program: ${r.getShaderInfoLog(shader)}`),r.deleteProgram(p));r.useProgram(p);let l=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,l),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-1,-1,0,-1,1,0,1,-1,0,1,1,0]),r.STATIC_DRAW),p.position_attribute=r.getAttribLocation(p,"position"),r.enableVertexAttribArray(p.position_attribute),r.vertexAttribPointer(p.position_attribute,3,r.FLOAT,!1,0,0),p.aspect_ratio_uniform=r.getUniformLocation(p,"aspect_ratio"),p.num_roots_uniform=r.getUniformLocation(p,"num_roots"),p.root_1_uniform=r.getUniformLocation(p,"root_1"),p.root_2_uniform=r.getUniformLocation(p,"root_2"),p.root_3_uniform=r.getUniformLocation(p,"root_3"),p.root_4_uniform=r.getUniformLocation(p,"root_4"),p.root_5_uniform=r.getUniformLocation(p,"root_5"),p.root_6_uniform=r.getUniformLocation(p,"root_6"),p.root_7_uniform=r.getUniformLocation(p,"root_7"),p.root_8_uniform=r.getUniformLocation(p,"root_8"),p.brightness_scale_uniform=r.getUniformLocation(p,"brightness_scale"),document.querySelector("#newtons-method-plot").setAttribute("width",e),document.querySelector("#newtons-method-plot").setAttribute("height",n),r.viewport(0,0,e,n)},500),setTimeout(q,1e3);const f="\n\t\tattribute vec3 position;\n\t\tvarying vec2 uv;\n\n\t\tvoid main(void)\n\t\t{\n\t\t\tgl_Position = vec4(position, 1.0);\n\n\t\t\t//Interpolate quad coordinates in the fragment shader.\n\t\t\tuv = position.xy;\n\t\t}\n\t",g="\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio;\n\t\t\n\t\tuniform int num_roots;\n\t\t\n\t\tuniform vec2 root_1;\n\t\tuniform vec2 root_2;\n\t\tuniform vec2 root_3;\n\t\tuniform vec2 root_4;\n\t\tuniform vec2 root_5;\n\t\tuniform vec2 root_6;\n\t\tuniform vec2 root_7;\n\t\tuniform vec2 root_8;\n\t\t\n\t\tconst vec3 color_1 = vec3(1.0, 0.0, 0.0);\n\t\tconst vec3 color_2 = vec3(0.0, 1.0, 0.0);\n\t\tconst vec3 color_3 = vec3(0.0, 0.0, 1.0);\n\t\tconst vec3 color_4 = vec3(0.0, 1.0, 1.0);\n\t\tconst vec3 color_5 = vec3(1.0, 0.0, 1.0);\n\t\tconst vec3 color_6 = vec3(1.0, 1.0, 0.0);\n\t\tconst vec3 color_7 = vec3(0.5, 0.0, 1.0);\n\t\tconst vec3 color_8 = vec3(1.0, 0.5, 0.0);\n\t\t\n\t\tuniform float brightness_scale;\n\t\t\n\t\tconst float threshhold = .05;\n\t\t\n\t\t\n\t\t\n\t\t//Returns z_1 * z_2.\n\t\tvec2 complex_multiply(vec2 z_1, vec2 z_2)\n\t\t{\n\t\t\treturn vec2(z_1.x * z_2.x - z_1.y * z_2.y, z_1.x * z_2.y + z_1.y * z_2.x);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t//Returns 1/z.\n\t\tvec2 complex_invert(vec2 z)\n\t\t{\n\t\t\tfloat magnitude = z.x*z.x + z.y*z.y;\n\t\t\t\n\t\t\treturn vec2(z.x / magnitude, -z.y / magnitude);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t//Returns f(z) for a polynomial f with given roots.\n\t\tvec2 complex_polynomial(vec2 z)\n\t\t{\n\t\t\tvec2 result = vec2(1.0, 0.0);\n\t\t\t\n\t\t\tif (num_roots == 0)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_1);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 1)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_2);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 2)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_3);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 3)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_4);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 4)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_5);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 5)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_6);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 6)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_7);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (num_roots == 7)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tresult = complex_multiply(result, z - root_8);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t//Approximates f'(z) for a polynomial f with given roots.\n\t\tvec2 complex_derivative(vec2 z)\n\t\t{\n\t\t\treturn 1000.0 * (complex_polynomial(z) - complex_polynomial(z - vec2(.001, 0.0)));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tvec2 z = vec2(uv.x * aspect_ratio * 2.0, uv.y * 2.0);\n\t\t\tvec2 last_z = vec2(0.0, 0.0);\n\t\t\t\n\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tvec2 temp = complex_multiply(complex_polynomial(z), complex_invert(complex_derivative(z)));\n\t\t\t\t\n\t\t\t\tlast_z = z;\n\t\t\t\t\n\t\t\t\tz -= temp;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 1)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_1);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_1 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 2)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_2);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_2 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 3)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_3);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_3);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_3 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 4)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_4);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_4 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 5)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_5);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_5);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_5 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 6)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_6);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_6);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_6 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 7)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_7);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_7);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_7 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (num_roots >= 8)\n\t\t\t\t{\n\t\t\t\t\tfloat d_0 = length(z - root_8);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(last_z - root_8);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl_FragColor = vec4(color_8 * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t";let p=null;function v(t,e,n){let o=t.createShader(e);return t.shaderSource(o,n),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)||(console.log(`Couldn't load shader: ${t.getProgramInfoLog(shaderProgram)}`),t.deleteShader(o)),o}function y(){r.uniform1f(p.aspect_ratio_uniform,e/n),r.uniform1i(p.num_roots_uniform,o.length),o.length>=1&&r.uniform2fv(p.root_1_uniform,o[0]),o.length>=2&&r.uniform2fv(p.root_2_uniform,o[1]),o.length>=3&&r.uniform2fv(p.root_3_uniform,o[2]),o.length>=4&&r.uniform2fv(p.root_4_uniform,o[3]),o.length>=5&&r.uniform2fv(p.root_5_uniform,o[4]),o.length>=6&&r.uniform2fv(p.root_6_uniform,o[5]),o.length>=7&&r.uniform2fv(p.root_7_uniform,o[6]),o.length>=8&&r.uniform2fv(p.root_8_uniform,o[7]),r.uniform1f(p.brightness_scale_uniform,m),r.drawArrays(r.TRIANGLE_STRIP,0,4);let s=new Uint8Array(e*n*4);r.readPixels(0,0,e,n,r.RGBA,r.UNSIGNED_BYTE,s);let a=0;for(let e=0;e<t*t;e++)1!==s[4*e]&&1!==s[4*e+1]&&1!==s[4*e+2]||a++;let u=!1;a<25e-6*e*n*o.length?(m-=.25,u=!0):a>5e-5*e*n*o.length&&(m+=.25,u=!0),h?u?window.requestAnimationFrame(y):(h=!1,i=!0):l?(l=!1,window.requestAnimationFrame(y)):i=!0}function b(t){a=-1;for(let e=0;e<s.length;e++)if(t.target.id===`root-marker-${e}`){t.preventDefault(),a=e;break}}function w(t){-1!==a&&(document.body.style.WebkitUserSelect="",h=!0,l=!0,i&&(i=!1,window.requestAnimationFrame(y)),document.querySelector("#polynomial-label-1").textContent="",document.querySelector("#polynomial-label-2").textContent="",document.querySelector("#polynomial-label-3").textContent="",u=a,document.querySelector("#root-a-input").value=Math.round(1e3*o[u][0])/1e3,document.querySelector("#root-b-input").value=Math.round(1e3*o[u][1])/1e3,document.querySelector("#root-setter").style.pointerEvents="auto",document.querySelector("#root-setter").style.opacity=1),a=-1}function S(t){if(-1===a)return;let r=null,u=null,m=document.querySelector("#root-selector").getBoundingClientRect();"touchmove"===t.type?(r=t.touches[0].clientY-m.top,u=t.touches[0].clientX-m.left):(r=t.clientY-m.top,u=t.clientX-m.left),r<d&&(r=d),r>_-d&&(r=_-d),u<d&&(u=d),u>c-d&&(u=c-d),s[a].style.transform=`translate3d(${u-d}px, ${r-d}px, 0)`;let f=(u-c/2)/c*4*(e/n),g=-(r-_/2)/_*4;o[a][0]=f,o[a][1]=g,l=!0,(h||i)&&(h=!1,i=!1,window.requestAnimationFrame(y))}function z(){o[u][0]=parseFloat(document.querySelector("#root-a-input").value)||0,o[u][1]=parseFloat(document.querySelector("#root-b-input").value)||0;let t=Math.floor(_*(1-(o[u][1]/4+.5))),r=Math.floor(c*(o[u][0]/(e/n)/4+.5));s[u].style.transform=`translate3d(${r-d}px, ${t-d}px, 0)`,window.requestAnimationFrame(y)}function q(){c=document.querySelector("#root-selector").offsetWidth,_=document.querySelector("#root-selector").offsetHeight;for(let t=0;t<o.length;t++){let r=Math.floor(_*(1-(o[t][1]/4+.5))),l=Math.floor(c*(o[t][0]/(e/n)/4+.5));s[t].style.transform=`translate3d(${l-d}px, ${r-d}px, 0)`}}}();