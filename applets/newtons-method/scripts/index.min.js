import{NewtonsMethod}from"./class.min.js";import{hexToRgb}from"/scripts/applets/applet.min.js";import{Button,DownloadButton,ToggleButton}from"/scripts/src/buttons.min.js";import{Checkbox}from"/scripts/src/checkboxes.min.js";import{$}from"/scripts/src/main.min.js";import{siteSettings}from"/scripts/src/settings.min.js";import{TextBox}from"/scripts/src/textBoxes.min.js";export default function(){var t=$("#root-setter"),e=$("#color-setter");const o=new TextBox({element:$("#root-a-input"),name:"Root a",value:0,onInput:l,persistState:!1}),n=new TextBox({element:$("#root-b-input"),name:"Root b",value:0,onInput:l,persistState:!1}),s=new NewtonsMethod({canvas:$("#output-canvas"),rootSetterElement:t,rootAInput:o,rootBInput:n,colorSetterElement:e}),i=(new ToggleButton({element:$("#switch-method-button"),name0:"Switch to Secant Method",name1:"Switch to Newton's Method",onClick0:instant=>s.switchMethod(instant),onClick1:instant=>s.switchMethod(instant)}),new Button({element:$("#add-root-button"),name:"Add Root",onClick:()=>s.addRoot()}),new Button({element:$("#remove-root-button"),name:"Remove Root",onClick:()=>s.removeRoot()}),new Button({element:$("#spread-roots-button"),name:"Spread Roots",onClick:()=>{s.spreadRoots({animate:!0,randomize:!1})}}),new Button({element:$("#randomize-roots-button"),name:"Randomize Roots",onClick:()=>{s.spreadRoots({animate:!0,randomize:!0})}}),new Button({element:$("#randomize-colors-button"),name:"Randomize Colors",onClick:()=>s.randomizeColors()}),new DownloadButton({element:$("#download-button"),applet:s,filename:"newtons-method.png"}),new TextBox({element:$("#resolution-input"),name:"Resolution",value:500,minValue:100,maxValue:2e3,onInput:function(){s.resolution=i.value*siteSettings.resolutionMultiplier,s.wilson.resizeCanvas({width:s.resolution})}})),a=new Checkbox({element:$("#antialiasing-checkbox"),name:"Antialiasing",onInput:m,checked:!0}),r=(m(),$("#root-color-input"));function l(){s.setRoot(o.value,n.value)}function m(){s.wilson.setAntialiasing(a.checked),s.needNewFrame=!0}r.addEventListener("input",()=>{var t=r.value,t=hexToRgb(t);s.setColor({rgb:[t[0],t[1],t[2]]})})}