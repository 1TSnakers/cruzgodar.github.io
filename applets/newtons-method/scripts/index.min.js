import{showPage}from"../../../scripts/src/loadPage.min.js";import{NewtonsMethod}from"./class.min.js";import{Button,DownloadButton}from"/scripts/src/buttons.min.js";import{$}from"/scripts/src/main.min.js";function load(){var t=$("#root-setter");const e=$("#root-a-input"),n=$("#root-b-input");var o=$("#color-setter");const r=new NewtonsMethod({canvas:$("#output-canvas"),rootSetterElement:t,rootAInputElement:e,rootBInputElement:n,colorSetterElement:o}),s=(new Button({element:$("#add-root-button"),name:"Add Root",onClick:()=>r.addRoot()}),new Button({element:$("#remove-root-button"),name:"Remove Root",onClick:()=>r.removeRoot()}),new Button({element:$("#spread-roots-button"),name:"Spread Roots",onClick:()=>r.spreadRoots(!1,!1)}),new Button({element:$("#randomize-roots-button"),name:"Randomize Roots",onClick:()=>r.spreadRoots(!1,!0)}),new DownloadButton({element:$("#download-button"),wilson:r.wilson,filename:"newtons-method.png"}),$("#resolution-input"));function a(){var t=parseFloat(e.value||0),o=parseFloat(n.value||0);r.setRoot(t,o)}r.setInputCaps([s],[2e3]),s.addEventListener("input",()=>{r.resolution=parseInt(s.value||500),r.changeAspectRatio(!0)}),e.addEventListener("input",a),n.addEventListener("input",a);const l=$("#root-color-input");l.addEventListener("input",()=>{var t=l.value;r.setColor(t)}),showPage()}export{load};