import{getGlslBundle,loadGlsl}from"../../../scripts/src/complexGlsl.min.js";import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{tempShader}from"/scripts/applets/applet.min.js";import{changeOpacity}from"/scripts/src/animation.min.js";import{convertColor}from"/scripts/src/browser.min.js";import{$$,addTemporaryListener}from"/scripts/src/main.min.js";import{Wilson}from"/scripts/wilson.min.js";class FractalSounds extends AnimationFrameApplet{loadPromise;wilsonHidden;wilsonJulia;juliaMode=0;aspectRatio=1;numIterations=200;exposure=1;zoomLevel=0;pastBrightnessScales=[];resolution=500;resolutionHidden=200;needToClear=!1;fixedPointX=0;fixedPointY=0;moved=0;lastX=0;lastY=0;zoomingWithMouse=!1;constructor({canvas,lineDrawerCanvas}){super(canvas);var e={renderer:"gpu",shader:tempShader,canvasWidth:this.resolution,canvasHeight:this.resolution,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:this.switchFullscreen.bind(this)},e=(this.wilsonJulia=new Wilson(canvas,e),this.wilsonForFullscreen=this.wilsonJulia,this.createHiddenCanvas()),t={renderer:"gpu",shader:tempShader,canvasWidth:this.resolutionHidden,canvasHeight:this.resolutionHidden},e=(this.wilsonHidden=new Wilson(e,t),{renderer:"cpu",canvasWidth:this.resolution,canvasHeight:this.resolution,worldWidth:4,worldHeight:4,worldCenterX:0,worldCenterY:0,mousemoveCallback:this.onHoverCanvas.bind(this),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),touchendCallback:this.onReleaseCanvas.bind(this),wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this),useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!1}),t=(this.wilson=new Wilson(lineDrawerCanvas,e),$$(".wilson-fullscreen-components-container"));t[0].style.setProperty("z-index",200,"important"),t[1].style.setProperty("z-index",300,"important"),this.wilson.ctx.lineWidth=40,this.pan.setBounds({minX:-3,maxX:3,minY:-3,maxY:3}),this.zoom.init(),this.listenForNumTouches();addTemporaryListener({object:window,event:"resize",callback:()=>this.changeAspectRatio(!0,[this.wilson,this.wilsonJulia])}),this.loadPromise=loadGlsl()}run({glslCode,jsCode,resolution,exposure,numIterations}){this.currentFractalFunction=jsCode,this.resolution=resolution,this.exposure=exposure,this.numIterations=numIterations;var e=`
			precision highp float;
			
			varying vec2 uv;
			
			uniform float aspectRatio;
			
			uniform float worldCenterX;
			uniform float worldCenterY;
			uniform float worldSize;
			
			uniform float exposure;
			uniform int numIterations;
			uniform float brightnessScale;
			
			const float hueMultiplier = 100.0;
			
			const vec3 color1 = vec3(1.0, 0.0, 0.0);
			const vec3 color2 = vec3(1.0, .4157, 0.0);
			const vec3 color3 = vec3(1.0, .8471, 0.0);
			const vec3 color4 = vec3(.7333, 1.0, 0.0);
			const vec3 color5 = vec3(.2980, 1.0, 0.0);
			const vec3 color6 = vec3(0.0, 1.0, .1137);
			const vec3 color7 = vec3(0.0, 1.0, .5490);
			const vec3 color8 = vec3(0.0, 1.0, .9647);
			const vec3 color9 = vec3(0.0, .6, 1.0);
			const vec3 color10 = vec3(0.0, .1804, 1.0);
			const vec3 color11 = vec3(.2471, 0.0, 1.0);
			const vec3 color12 = vec3(.6667, 0.0, 1.0);
			const vec3 color13 = vec3(1.0, 0.0, .8980);
			
			
			
			${getGlslBundle(glslCode)}
			
			
			
			vec3 hsv2rgb(vec3 c)
			{
				vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
				vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
				return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
			}
			
			
			
			void main(void)
			{
				vec2 z;
				
				if (aspectRatio >= 1.0)
				{
					z = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);
				}
				
				else
				{
					z = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);
				}
				
				float brightness = exp(-max(length(z), .5));
				
				vec2 c = z;
				
				gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
				
				
				
				vec2 lastZ1 = vec2(0.0, 0.0);
				vec2 lastZ2 = vec2(0.0, 0.0);
				vec2 lastZ3 = vec2(0.0, 0.0);
				vec2 lastZ4 = vec2(0.0, 0.0);
				vec2 lastZ5 = vec2(0.0, 0.0);
				vec2 lastZ6 = vec2(0.0, 0.0);
				vec2 lastZ7 = vec2(0.0, 0.0);
				vec2 lastZ8 = vec2(0.0, 0.0);
				vec2 lastZ9 = vec2(0.0, 0.0);
				vec2 lastZ10 = vec2(0.0, 0.0);
				vec2 lastZ11 = vec2(0.0, 0.0);
				vec2 lastZ12 = vec2(0.0, 0.0);
				vec2 lastZ13 = vec2(0.0, 0.0);
				
				float hue1 = 0.0;
				float hue2 = 0.0;
				float hue3 = 0.0;
				float hue4 = 0.0;
				float hue5 = 0.0;
				float hue6 = 0.0;
				float hue7 = 0.0;
				float hue8 = 0.0;
				float hue9 = 0.0;
				float hue10 = 0.0;
				float hue11 = 0.0;
				float hue12 = 0.0;
				float hue13 = 0.0;
				
				
				
				for (int iteration = 0; iteration < 3001; iteration++)
				{
					if (iteration == numIterations)
					{
						vec3 color = hue1 * color1 + hue2 * color2 + hue3 * color3 + hue4 * color4 + hue5 * color5 + hue6 * color6 + hue7 * color7 + hue8 * color8 + hue9 * color9 + hue10 * color10 + hue11 * color11 + hue12 * color12 + hue13 * color13;
						gl_FragColor = vec4(brightness / brightnessScale * exposure * normalize(color), 1.0);
						return;
					}
					
					if (length(z) >= 10.0)
					{
						gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
						return;
					}
					
					lastZ13 = lastZ12;
					lastZ12 = lastZ11;
					lastZ11 = lastZ10;
					lastZ10 = lastZ9;
					lastZ9 = lastZ8;
					lastZ8 = lastZ7;
					lastZ7 = lastZ6;
					lastZ6 = lastZ5;
					lastZ5 = lastZ4;
					lastZ4 = lastZ3;
					lastZ3 = lastZ2;
					lastZ2 = lastZ1;
					lastZ1 = z;
					z = ${glslCode};
					
					
					
					brightness += exp(-max(length(z), .5));
					
					hue1 += exp(-hueMultiplier * length(z - lastZ1));
					hue2 += exp(-hueMultiplier * length(z - lastZ2));
					hue3 += exp(-hueMultiplier * length(z - lastZ3));
					hue4 += exp(-hueMultiplier * length(z - lastZ4));
					hue5 += exp(-hueMultiplier * length(z - lastZ5));
					hue6 += exp(-hueMultiplier * length(z - lastZ6));
					hue7 += exp(-hueMultiplier * length(z - lastZ7));
					hue8 += exp(-hueMultiplier * length(z - lastZ8));
					hue9 += exp(-hueMultiplier * length(z - lastZ9));
					hue10 += exp(-hueMultiplier * length(z - lastZ10));
					hue11 += exp(-hueMultiplier * length(z - lastZ11));
					hue12 += exp(-hueMultiplier * length(z - lastZ12));
					hue13 += exp(-hueMultiplier * length(z - lastZ13));
				}
			}
		`;this.wilsonJulia.render.shaderPrograms=[],this.wilsonJulia.render.loadNewShader(e),this.wilsonJulia.gl.useProgram(this.wilsonJulia.render.shaderPrograms[0]),this.wilsonJulia.render.initUniforms(["juliaMode","aspectRatio","worldCenterX","worldCenterY","worldSize","a","b","numIterations","exposure","brightnessScale"],0),this.wilsonHidden.render.shaderPrograms=[],this.wilsonHidden.render.loadNewShader(e),this.wilsonHidden.gl.useProgram(this.wilsonHidden.render.shaderPrograms[0]),this.wilsonHidden.render.initUniforms(["juliaMode","aspectRatio","worldCenterX","worldCenterY","worldSize","a","b","numIterations","exposure","brightnessScale"],0),this.juliaMode=0,this.pastBrightnessScales=[],this.wilson.worldWidth=4,this.wilson.worldHeight=4,this.wilson.worldCenterX=0,this.wilson.worldCenterY=0,this.zoom.init(),this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.aspectRatio[0],1),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio[0],1),this.resume()}onGrabCanvas(x,y,event){this.pan.onGrabCanvas(),this.zoom.onGrabCanvas(),this.wilson.canvas.style.opacity=1,"touchstart"===event.type?(this.numTouches=event.touches.length,1===this.numTouches?this.showOrbit(x,y):changeOpacity({element:this.wilson.canvas,opacity:0})):(this.moved=0,this.showOrbit(x,y))}onDragCanvas(x,y,xDelta,yDelta,event){"mousemove"===event.type||"touchmove"===event.type&&2<=this.numTouches?(this.pan.onDragCanvas(x,y,xDelta,yDelta),this.moved++,10<=this.moved&&this.wilson.ctx.clearRect(0,0,this.resolution,this.resolution),this.needNewFrame=!0):this.showOrbit(x,y)}onHoverCanvas(x,y){this.showOrbit(x,y),this.moved=0}onReleaseCanvas(x,y,event){this.pan.onReleaseCanvas(),this.zoom.onReleaseCanvas(),"touchend"===event.type&&1===this.numTouches||this.moved<10?(this.playSound(x,y),setTimeout(()=>this.numTouches=0,50)):changeOpacity({element:this.wilson.canvas,opacity:0}),this.moved=0}showOrbit(x0,y0){this.wilson.ctx.lineWidth=2,this.wilson.canvas.style.opacity=1,this.wilson.ctx.strokeStyle=convertColor(255,255,255),this.wilson.ctx.clearRect(0,0,this.resolution,this.resolution),this.wilson.ctx.beginPath();var e,t=this.wilson.utils.interpolate.worldToCanvas(x0,y0),s=(this.wilson.ctx.moveTo(t[1],t[0]),x0),i=x0,o=y0;let l=this.currentFractalFunction(s,y0,i,o);for(let n=s=0;n<300;n++){if(10<Math.abs(l[0])||10<Math.abs(l[1]))return;s=l[0],e=l[1],l=this.currentFractalFunction(s,e,i,o),t=this.wilson.utils.interpolate.worldToCanvas(s,e),this.wilson.ctx.lineTo(t[1],t[0])}this.wilson.ctx.stroke()}playSound(x0,y0){var e=new AudioContext,t=44100,s=Math.floor(3675);let i=x0,o=y0;var l=x0,n=y0;let r=this.currentFractalFunction(i,o,l,n),a=(i=0,o=0);var h=new Array(s),c=new Array(s),t=e.createBuffer(2,t,44100),u=t.getChannelData(0),d=t.getChannelData(1);for(let v=0;v<s;v++){if(100<Math.abs(r[0])||100<Math.abs(r[1]))return;Math.abs(r[0])>a&&(a=Math.abs(r[0])),Math.abs(r[1])>a&&(a=Math.abs(r[1])),h[v]=i,c[v]=o,i=r[0],o=r[1],r=this.currentFractalFunction(i,o,l,n)}for(let p=0;p<s;p++)h[p]/=a,c[p]/=a;for(let f=0;f<s-1;f++)for(let e=0;e<12;e++){var w=.5+.5*Math.sin(Math.PI*e/12-Math.PI/2);u[12*f+e]=(1-w)*(h[f]/2)+w*(h[f+1]/2),d[12*f+e]=(1-w)*(c[f]/2)+w*(c[f+1]/2)}var m=e.createBufferSource(),t=(m.buffer=t,e.createGain());m.connect(t),t.connect(e.destination),m.start(0),t.gain.exponentialRampToValueAtTime(1e-4,1)}prepareFrame(timeElapsed){this.pan.update(timeElapsed),this.zoom.update(timeElapsed)}drawFrame(){this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterX[0],this.wilson.worldCenterX),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterY[0],this.wilson.worldCenterY),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldSize[0],Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2),this.wilsonHidden.gl.uniform1i(this.wilsonHidden.uniforms.numIterations[0],this.numIterations),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.exposure[0],1),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.brightnessScale[0],20*(Math.abs(this.zoom.level)+1)),this.wilsonHidden.render.drawFrame();var e=this.wilsonHidden.render.getPixelData(),t=new Array(this.resolutionHidden*this.resolutionHidden);for(let o=0;o<this.resolutionHidden*this.resolutionHidden;o++)t[o]=e[4*o]+e[4*o+1]+e[4*o+2];t.sort((a,b)=>a-b);var s=(t[Math.floor(this.resolutionHidden*this.resolutionHidden*.96)]+t[Math.floor(this.resolutionHidden*this.resolutionHidden*.98)])/255*15*(Math.abs(this.zoom.level/2)+1),i=(this.pastBrightnessScales.push(s),this.pastBrightnessScales.length);10<i&&this.pastBrightnessScales.shift(),s=Math.max(this.pastBrightnessScales.reduce((a,b)=>a+b)/i,.5),this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.aspectRatio[0],this.aspectRatio),this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.worldCenterX[0],this.wilson.worldCenterX),this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.worldCenterY[0],this.wilson.worldCenterY),this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.worldSize[0],Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2),this.wilsonJulia.gl.uniform1i(this.wilsonJulia.uniforms.numIterations[0],this.numIterations),this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.exposure[0],this.exposure),this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.brightnessScale[0],s),this.wilsonJulia.render.drawFrame()}switchFullscreen(){document.body.querySelectorAll(".wilson-applet-canvas-container").forEach(element=>element.style.setProperty("background-color","rgba(0, 0, 0, 0)","important"));var e=document.body.querySelector(".wilson-exit-fullscreen-button");e&&e.style.setProperty("z-index","300","important"),this.wilson.fullscreen.switchFullscreen(),this.changeAspectRatio(!0,[this.wilson,this.wilsonJulia])}}export{FractalSounds};