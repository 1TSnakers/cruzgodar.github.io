class FractalSounds extends Applet{loadPromise=null;wilsonHidden=null;wilsonJulia=null;juliaMode=0;aspectRatio=1;numIterations=200;exposure=1;zoomLevel=0;pastBrightnessScales=[];resolution=500;resolutionHidden=200;needToClear=!1;fixedPointX=0;fixedPointY=0;numTouches=0;moved=0;lastX=0;lastY=0;zoomingWithMouse=!1;lastTimestamp=-1;constructor(a,b){super(a);this.pan.minX=-3;this.pan.maxX=3;this.pan.minY=-3;this.pan.maxY=3;const c={renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",
canvasWidth:this.resolution,canvasHeight:this.resolution,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:this.switchFullscreen.bind(this)};this.wilsonJulia=new Wilson(a,c);a=this.createHiddenCanvas();this.wilsonHidden=new Wilson(a,{renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",
canvasWidth:this.resolutionHidden,canvasHeight:this.resolutionHidden});a={renderer:"cpu",canvasWidth:this.resolution,canvasHeight:this.resolution,worldWidth:4,worldHeight:4,worldCenterX:0,worldCenterY:0,mousemoveCallback:this.onHoverCanvas.bind(this),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),touchendCallback:this.onReleaseCanvas.bind(this),
wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this),useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!1};this.wilson=new Wilson(b,a);b=$$(".wilson-fullscreen-components-container");b[0].style.setProperty("z-index",200,"important");b[1].style.setProperty("z-index",300,"important");this.wilson.ctx.lineWidth=40;this.zoom.init();b=()=>this.changeAspectRatio(!0,[this.wilson,this.wilsonJulia]);window.addEventListener("resize",b);this.handlers.push([window,"resize",
b]);this.loadPromise=new Promise(async(d,e)=>{await Site.loadGLSL();d()})}run(a,b,c,d,e){this.currentFractalFunction=b;this.resolution=c;this.exposure=d;this.numIterations=e;a=`
			precision highp float;
			
			varying vec2 uv;
			
			uniform float aspectRatio;
			
			uniform float worldCenterX;
			uniform float worldCenterY;
			uniform float worldSize;
			
			uniform float exposure;
			uniform int numIterations;
			uniform float brightnessScale;
			
			const float hueMultiplier = 100.0;
			
			const vec3 color1 = vec3(1.0, 0.0, 0.0);
			const vec3 color2 = vec3(1.0, .4157, 0.0);
			const vec3 color3 = vec3(1.0, .8471, 0.0);
			const vec3 color4 = vec3(.7333, 1.0, 0.0);
			const vec3 color5 = vec3(.2980, 1.0, 0.0);
			const vec3 color6 = vec3(0.0, 1.0, .1137);
			const vec3 color7 = vec3(0.0, 1.0, .5490);
			const vec3 color8 = vec3(0.0, 1.0, .9647);
			const vec3 color9 = vec3(0.0, .6, 1.0);
			const vec3 color10 = vec3(0.0, .1804, 1.0);
			const vec3 color11 = vec3(.2471, 0.0, 1.0);
			const vec3 color12 = vec3(.6667, 0.0, 1.0);
			const vec3 color13 = vec3(1.0, 0.0, .8980);
			
			
			
			${Site.getGLSLBundle(a)}
			
			
			
			vec3 hsv2rgb(vec3 c)
			{
				vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
				vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
				return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
			}
			
			
			
			void main(void)
			{
				vec2 z;
				
				if (aspectRatio >= 1.0)
				{
					z = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);
				}
				
				else
				{
					z = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);
				}
				
				float brightness = exp(-max(length(z), .5));
				
				vec2 c = z;
				
				gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
				
				
				
				vec2 lastZ1 = vec2(0.0, 0.0);
				vec2 lastZ2 = vec2(0.0, 0.0);
				vec2 lastZ3 = vec2(0.0, 0.0);
				vec2 lastZ4 = vec2(0.0, 0.0);
				vec2 lastZ5 = vec2(0.0, 0.0);
				vec2 lastZ6 = vec2(0.0, 0.0);
				vec2 lastZ7 = vec2(0.0, 0.0);
				vec2 lastZ8 = vec2(0.0, 0.0);
				vec2 lastZ9 = vec2(0.0, 0.0);
				vec2 lastZ10 = vec2(0.0, 0.0);
				vec2 lastZ11 = vec2(0.0, 0.0);
				vec2 lastZ12 = vec2(0.0, 0.0);
				vec2 lastZ13 = vec2(0.0, 0.0);
				
				float hue1 = 0.0;
				float hue2 = 0.0;
				float hue3 = 0.0;
				float hue4 = 0.0;
				float hue5 = 0.0;
				float hue6 = 0.0;
				float hue7 = 0.0;
				float hue8 = 0.0;
				float hue9 = 0.0;
				float hue10 = 0.0;
				float hue11 = 0.0;
				float hue12 = 0.0;
				float hue13 = 0.0;
				
				
				
				for (int iteration = 0; iteration < 3001; iteration++)
				{
					if (iteration == numIterations)
					{
						vec3 color = hue1 * color1 + hue2 * color2 + hue3 * color3 + hue4 * color4 + hue5 * color5 + hue6 * color6 + hue7 * color7 + hue8 * color8 + hue9 * color9 + hue10 * color10 + hue11 * color11 + hue12 * color12 + hue13 * color13;
						gl_FragColor = vec4(brightness / brightnessScale * exposure * normalize(color), 1.0);
						return;
					}
					
					if (length(z) >= 10.0)
					{
						gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
						return;
					}
					
					lastZ13 = lastZ12;
					lastZ12 = lastZ11;
					lastZ11 = lastZ10;
					lastZ10 = lastZ9;
					lastZ9 = lastZ8;
					lastZ8 = lastZ7;
					lastZ7 = lastZ6;
					lastZ6 = lastZ5;
					lastZ5 = lastZ4;
					lastZ4 = lastZ3;
					lastZ3 = lastZ2;
					lastZ2 = lastZ1;
					lastZ1 = z;
					z = ${a};
					
					
					
					brightness += exp(-max(length(z), .5));
					
					hue1 += exp(-hueMultiplier * length(z - lastZ1));
					hue2 += exp(-hueMultiplier * length(z - lastZ2));
					hue3 += exp(-hueMultiplier * length(z - lastZ3));
					hue4 += exp(-hueMultiplier * length(z - lastZ4));
					hue5 += exp(-hueMultiplier * length(z - lastZ5));
					hue6 += exp(-hueMultiplier * length(z - lastZ6));
					hue7 += exp(-hueMultiplier * length(z - lastZ7));
					hue8 += exp(-hueMultiplier * length(z - lastZ8));
					hue9 += exp(-hueMultiplier * length(z - lastZ9));
					hue10 += exp(-hueMultiplier * length(z - lastZ10));
					hue11 += exp(-hueMultiplier * length(z - lastZ11));
					hue12 += exp(-hueMultiplier * length(z - lastZ12));
					hue13 += exp(-hueMultiplier * length(z - lastZ13));
				}
			}
		`;this.wilsonJulia.render.shaderPrograms=[];this.wilsonJulia.render.loadNewShader(a);this.wilsonJulia.gl.useProgram(this.wilsonJulia.render.shaderPrograms[0]);this.wilsonJulia.render.initUniforms("juliaMode aspectRatio worldCenterX worldCenterY worldSize a b numIterations exposure brightnessScale".split(" "),0);this.wilsonHidden.render.shaderPrograms=[];this.wilsonHidden.render.loadNewShader(a);this.wilsonHidden.gl.useProgram(this.wilsonHidden.render.shaderPrograms[0]);this.wilsonHidden.render.initUniforms("juliaMode aspectRatio worldCenterX worldCenterY worldSize a b numIterations exposure brightnessScale".split(" "),
0);this.juliaMode=0;this.pastBrightnessScales=[];this.wilson.worldWidth=4;this.wilson.worldHeight=4;this.wilson.worldCenterX=0;this.wilson.worldCenterY=0;this.zoom.init();this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.aspectRatio[0],1);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio[0],1);window.requestAnimationFrame(this.drawFrame.bind(this))}onGrabCanvas(a,b,c){this.pan.onGrabCanvas();this.zoom.onGrabCanvas();this.wilson.canvas.style.opacity=1;"touchstart"===c.type?
(this.numTouches=c.touches.length,1===this.numTouches?this.showOrbit(a,b):Page.Animate.changeOpacity(this.wilson.canvas,0,Site.opacityAnimationTime)):(this.moved=0,this.showOrbit(a,b))}onDragCanvas(a,b,c,d,e){"mousemove"===e.type||"touchmove"===e.type&&2<=this.numTouches?(this.pan.onDragCanvas(a,b,c,d),this.moved++,10<=this.moved&&this.wilson.ctx.clearRect(0,0,this.resolution,this.resolution)):this.showOrbit(a,b)}onHoverCanvas(a,b,c,d,e){this.showOrbit(a,b);this.moved=0}onReleaseCanvas(a,b,c){this.pan.onReleaseCanvas();
this.zoom.onReleaseCanvas();"touchend"===c.type&&1===this.numTouches||10>this.moved?(this.playSound(a,b),setTimeout(()=>this.numTouches=0,50)):Page.Animate.changeOpacity(this.wilson.canvas,0,Site.opacityAnimationTime);this.moved=0}showOrbit(a,b){this.wilson.ctx.lineWidth=2;this.wilson.canvas.style.opacity=1;this.wilson.ctx.strokeStyle="rgb(255, 255, 255)";this.wilson.ctx.clearRect(0,0,this.resolution,this.resolution);this.wilson.ctx.beginPath();var c=this.wilson.utils.interpolate.worldToCanvas(a,
b);this.wilson.ctx.moveTo(c[1],c[0]);let d,e=this.currentFractalFunction(a,b,a,b);for(let g=0;300>g;g++){if(10<Math.abs(e[0])||10<Math.abs(e[1]))return;c=e[0];d=e[1];e=this.currentFractalFunction(c,d,a,b);c=this.wilson.utils.interpolate.worldToCanvas(c,d);this.wilson.ctx.lineTo(c[1],c[0])}this.wilson.ctx.stroke()}playSound(a,b){const c=new AudioContext;let d,e,g=this.currentFractalFunction(a,b,a,b);var f=e=d=0,h=Array(3675);let l=Array(3675);var k=c.createBuffer(2,44100,44100);let n=k.getChannelData(0),
p=k.getChannelData(1);for(let m=0;3675>m;m++){if(100<Math.abs(g[0])||100<Math.abs(g[1]))return;Math.abs(g[0])>f&&(f=Math.abs(g[0]));Math.abs(g[1])>f&&(f=Math.abs(g[1]));h[m]=d;l[m]=e;d=g[0];e=g[1];g=this.currentFractalFunction(d,e,a,b)}for(a=0;3675>a;a++)h[a]/=f,l[a]/=f;for(f=0;3674>f;f++)for(a=0;12>a;a++)b=.5+.5*Math.sin(Math.PI*a/12-Math.PI/2),n[12*f+a]=h[f]/2*(1-b)+h[f+1]/2*b,p[12*f+a]=l[f]/2*(1-b)+l[f+1]/2*b;h=c.createBufferSource();h.buffer=k;k=c.createGain();h.connect(k);k.connect(c.destination);
h.start(0);k.gain.exponentialRampToValueAtTime(1E-4,1)}drawFrame(a){var b=a-this.lastTimestamp;this.lastTimestamp=a;if(0!==b){this.pan.update();this.zoom.update();this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterX[0],this.wilson.worldCenterX);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterY[0],this.wilson.worldCenterY);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldSize[0],Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2);this.wilsonHidden.gl.uniform1i(this.wilsonHidden.uniforms.numIterations[0],
this.numIterations);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.exposure[0],1);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.brightnessScale[0],20*(Math.abs(this.zoom.level)+1));this.wilsonHidden.render.drawFrame();a=this.wilsonHidden.render.getPixelData();b=Array(this.resolutionHidden*this.resolutionHidden);for(let c=0;c<this.resolutionHidden*this.resolutionHidden;c++)b[c]=a[4*c]+a[4*c+1]+a[4*c+2];b.sort((c,d)=>c-d);a=(b[Math.floor(this.resolutionHidden*this.resolutionHidden*
.96)]+b[Math.floor(this.resolutionHidden*this.resolutionHidden*.98)])/255*15*(Math.abs(this.zoom.level/2)+1);this.pastBrightnessScales.push(a);a=this.pastBrightnessScales.length;10<a&&this.pastBrightnessScales.shift();a=Math.max(this.pastBrightnessScales.reduce((c,d)=>c+d)/a,.5);this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.aspectRatio[0],this.aspectRatio);this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.worldCenterX[0],this.wilson.worldCenterX);this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.worldCenterY[0],
this.wilson.worldCenterY);this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.worldSize[0],Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2);this.wilsonJulia.gl.uniform1i(this.wilsonJulia.uniforms.numIterations[0],this.numIterations);this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.exposure[0],this.exposure);this.wilsonJulia.gl.uniform1f(this.wilsonJulia.uniforms.brightnessScale[0],a);this.wilsonJulia.render.drawFrame();this.animationPaused||window.requestAnimationFrame(this.drawFrame.bind(this))}}switchFullscreen(){try{document.body.querySelectorAll(".wilson-applet-canvas-container").forEach(a=>
a.style.setProperty("background-color","rgba(0, 0, 0, 0)","important")),document.body.querySelector(".wilson-exit-fullscreen-button").style.setProperty("z-index","300","important")}catch(a){}this.wilson.fullscreen.switchFullscreen();this.changeAspectRatio(!0,[this.wilson,this.wilsonJulia])}};
