!function(){"use strict";let e=1e3,r=0,t=1,a=-.866,n=-.5,l=.866,i=-.5,o=!1,s=!1,d=null,c=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D uTexture;
  
  const float dt = .001;
  
  uniform vec2 planet1;
  uniform vec2 planet2;
  uniform vec2 planet3;
  
  const float worldSize = 15.0;
  
  const float crashThreshhold = .02;
  
  const float G = 1.0;
  
  
  
  void main(void)
  {
   vec4 state = (texture2D(uTexture, (uv + vec2(1.0, 1.0)) / 2.0) - vec4(.5, .5, .5, .5)) * worldSize;
   
   vec4 dState = vec4(0.0, 0.0, 0.0, 0.0);
   
   
   
   float dX = planet1.x - state.x;
   float dY = planet1.y - state.y;
   
   if (abs(dX) > worldSize / 2.0)
   {
    if (dX < 0.0)
    {
     dX += worldSize;
    }
    
    else
    {
     dX -= worldSize;
    }
   }
   
   if (abs(dY) > worldSize / 2.0)
   {
    if (dY < 0.0)
    {
     dY += worldSize;
    }
    
    else
    {
     dY -= worldSize;
    }
   }
   
   vec2 planetDirection = vec2(dX, dY);
   
   float r = length(planetDirection);
   
   if (r < crashThreshhold)
   {
    gl_FragColor = vec4(planet1 / worldSize + vec2(.5, .5), 0.5, 0.5);
    return;
   }
   
   dState.zw += planetDirection / (r*r*r);
   
   
   
   dX = planet2.x - state.x;
   dY = planet2.y - state.y;
   
   if (abs(dX) > worldSize / 2.0)
   {
    if (dX < 0.0)
    {
     dX += worldSize;
    }
    
    else
    {
     dX -= worldSize;
    }
   }
   
   if (abs(dY) > worldSize / 2.0)
   {
    if (dY < 0.0)
    {
     dY += worldSize;
    }
    
    else
    {
     dY -= worldSize;
    }
   }
   
   planetDirection = vec2(dX, dY);
   
   r = length(planetDirection);
   
   if (r < crashThreshhold)
   {
    gl_FragColor = vec4(planet2 / worldSize + vec2(.5, .5), 0.5, 0.5);
    return;
   }
   
   dState.zw += planetDirection / (r*r*r);
   
   
   
   dX = planet3.x - state.x;
   dY = planet3.y - state.y;
   
   if (abs(dX) > worldSize / 2.0)
   {
    if (dX < 0.0)
    {
     dX += worldSize;
    }
    
    else
    {
     dX -= worldSize;
    }
   }
   
   if (abs(dY) > worldSize / 2.0)
   {
    if (dY < 0.0)
    {
     dY += worldSize;
    }
    
    else
    {
     dY -= worldSize;
    }
   }
   
   planetDirection = vec2(dX, dY);
   
   r = length(planetDirection);
   
   if (r < crashThreshhold)
   {
    gl_FragColor = vec4(planet3 / worldSize + vec2(.5, .5), 0.5, 0.5);
    return;
   }
   
   dState.zw += planetDirection / (r*r*r);
   
   
   
   dState.xy = state.zw;
   
   state = ((dt * dState + state) / worldSize) + vec4(.5, .5, .5, .5);
   
   state.xy = fract(state.xy);
   
   gl_FragColor = state;
  }
 `,u=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D uTexture;
  
  
  
  vec3 hsv2rgb(vec3 c)
  {
   vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
   vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
  }
  
  
  
  void main(void)
  {
   vec4 state = (texture2D(uTexture, (uv + vec2(1.0, 1.0)) / 2.0) - vec4(.5, .5, .5, .5));
   
   float h = atan(state.y, state.x) / (2.0 * 3.14159265258) + .5;
   
   float s = min((state.x * state.x + state.y * state.y) * 100.0, 1.0);
   
   float vAdd = .9 * (1.0 - 4.0 * ((uv.x * uv.x) / 4.0 + (uv.y * uv.y) / 4.0));
   
   float v = clamp(sqrt(state.z * state.z + state.w * state.w) + vAdd, 0.0, 1.0);
   
   vec3 rgb = hsv2rgb(vec3(h, s, v));
   
   gl_FragColor = vec4(rgb, 1.0);
  }
 `,f={renderer:"gpu",shader:`
  precision highp float;
  
  varying vec2 uv;
  
  
  
  void main(void)
  {
   gl_FragColor = vec4((uv + vec2(1.0, 1.0)) / 2.0, 0.5, 0.5);
   
   return;
  }
 `,canvasWidth:e,canvasHeight:e,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"},g=new Wilson($("#output-canvas"),f);g.render.loadNewShader(c),g.render.initUniforms(["planet1","planet2","planet3"]),g.gl.uniform2f(g.uniforms.planet1,r,t),g.gl.uniform2f(g.uniforms.planet2,a,n),g.gl.uniform2f(g.uniforms.planet3,l,i),g.render.loadNewShader(u),g.render.createFramebufferTexturePair(),g.render.createFramebufferTexturePair();let m=$("#resolution-input");$("#generate-button").addEventListener("click",()=>{o=!1,d=Site.appletProcessId,e=parseInt(m.value||1e3),g.changeCanvasSize(e,e),g.gl.useProgram(g.render.shaderPrograms[1]),g.gl.bindTexture(g.gl.TEXTURE_2D,g.render.framebuffers[0].texture),g.gl.texImage2D(g.gl.TEXTURE_2D,0,g.gl.RGBA,g.canvasWidth,g.canvasHeight,0,g.gl.RGBA,g.gl.FLOAT,null),g.gl.bindTexture(g.gl.TEXTURE_2D,g.render.framebuffers[1].texture),g.gl.texImage2D(g.gl.TEXTURE_2D,0,g.gl.RGBA,g.canvasWidth,g.canvasHeight,0,g.gl.RGBA,g.gl.FLOAT,null),g.gl.useProgram(g.render.shaderPrograms[0]),g.gl.bindTexture(g.gl.TEXTURE_2D,g.render.framebuffers[0].texture),g.gl.bindFramebuffer(g.gl.FRAMEBUFFER,g.render.framebuffers[0].framebuffer),g.render.drawFrame(),window.requestAnimationFrame(v),o=!0});let _=$("#switch-planet-drawer-canvas-button");_.style.transition="filter .125s ease-in-out, opacity .25s ease-in-out",_.addEventListener("click",()=>{s?(D(),window.requestAnimationFrame(D),_.style.opacity=0,setTimeout(()=>{_.textContent="Pick Particle",_.style.opacity=1},250)):(s=!0,_.style.opacity=0,setTimeout(()=>{_.textContent="Return to Fractal",_.style.opacity=1},250))});function v(e){let o=e-T;if(T=e,0!==o){if(g.gl.useProgram(g.render.shaderPrograms[1]),g.gl.uniform2f(g.uniforms.planet1,r,t),g.gl.uniform2f(g.uniforms.planet2,a,n),g.gl.uniform2f(g.uniforms.planet3,l,i),g.gl.bindFramebuffer(g.gl.FRAMEBUFFER,g.render.framebuffers[1].framebuffer),g.render.drawFrame(),g.gl.useProgram(g.render.shaderPrograms[2]),g.gl.bindTexture(g.gl.TEXTURE_2D,g.render.framebuffers[1].texture),g.gl.bindFramebuffer(g.gl.FRAMEBUFFER,null),g.render.drawFrame(),g.gl.useProgram(g.render.shaderPrograms[1]),g.gl.bindFramebuffer(g.gl.FRAMEBUFFER,g.render.framebuffers[0].framebuffer),g.render.drawFrame(),g.gl.useProgram(g.render.shaderPrograms[2]),g.gl.bindTexture(g.gl.TEXTURE_2D,g.render.framebuffers[0].texture),g.gl.bindFramebuffer(g.gl.FRAMEBUFFER,null),g.render.drawFrame(),d!==Site.appletProcessId){console.log("Terminated applet process");return}s||window.requestAnimationFrame(v)}}$("#download-button").addEventListener("click",()=>{g.downloadFrame("a-three-body-system.png")});let p=0,b=new Wilson($("#planet-drawer-canvas"),{renderer:"cpu",worldWidth:15,worldHeight:15,canvasWidth:2e3,canvasHeight:2e3,mousemoveCallback:E,touchmoveCallback:E,mousedownCallback:P,touchendCallback:P,useDraggables:!0,draggablesMousemoveCallback:A,draggablesTouchmoveCallback:A});b.draggables.add(0,1),b.draggables.add(-.866,-.5),b.draggables.add(.866,-.5);let h=0,x=0,w=0,F=0,y=0,S=0,z=0,T=-1;function E(e,r,t,a,n){s&&(0===p&&o&&(s=!0,b.canvas.style.opacity=.5,p=1),2!==p&&(h=e,x=-r,w=0,F=0,window.requestAnimationFrame(X)))}function P(e,r,t){1===p&&(S=h,z=x,w=0,F=0,y=0,o&&(b.canvas.style.opacity=1,p=2,window.requestAnimationFrame(X)))}function D(){o&&(s=!1,window.requestAnimationFrame(v),b.canvas.style.opacity=0,p=0)}function X(e){let o=e-T;if(T=e,0===o)return;y++,b.ctx.fillStyle="rgb(0, 0, 0)",b.ctx.fillRect(0,0,2e3,2e3);let s=h/15,d=x/15,c=w/15,u=F/15,f,g=function e(r,t,a){let n,l,i,o,s,d,c,u;switch(o=Math.floor(6*r),s=6*r-o,d=a*(1-t),c=a*(1-s*t),u=a*(1-(1-s)*t),o%6){case 0:n=a,l=u,i=d;break;case 1:n=c,l=a,i=d;break;case 2:n=d,l=a,i=u;break;case 3:n=d,l=c,i=a;break;case 4:n=u,l=d,i=a;break;case 5:n=a,l=d,i=c}return[Math.round(255*n),Math.round(255*l),Math.round(255*i)]}(Math.atan2(d,-s)/(2*Math.PI)+1,Math.min(Math.min((s*s+d*d)*50,(1-Math.max(Math.abs(s),Math.abs(d)))*5),1),Math.min(Math.pow(c*c+u*u,.5)+.9*((1-S/(2*Math.PI))*(1-S/(2*Math.PI))+(1-z/(2*Math.PI))*(1-z/(2*Math.PI)))*4,1));b.ctx.fillStyle=`rgb(${g[0]}, ${g[1]}, ${g[2]})`,b.ctx.beginPath(),b.ctx.arc(2e3*(s+.5),2e3*(d+.5),30,0,2*Math.PI,!1),b.ctx.fill(),2===p&&(function e(){let o=0,s=0,d=R(r,-t);if(o+=d[0],s+=d[1],d[2]<.1){h=r,x=-t,w=0,F=0;return}if(o+=(d=R(a,-n))[0],s+=d[1],d[2]<.1){h=a,x=-n,w=0,F=0;return}if(o+=(d=R(l,-i))[0],s+=d[1],d[2]<.1){h=l,x=-i,w=0,F=0;return}for(h+=.01*w,x+=.01*F,w+=.01*o,F+=.01*s;h<-7.5;)h+=15;for(;h>7.5;)h-=15;for(;x<-7.5;)x+=15;for(;x>7.5;)x-=15}(),window.requestAnimationFrame(X))}function R(e,r){let t=e-h,a=r-x,n=0;return Math.abs(t)>7.5&&(t<0?t+=15:t-=15),Math.abs(a)>7.5&&(a<0?a+=15:a-=15),n=Math.sqrt(t*t+a*a),[t/(n*n*n),a/(n*n*n),n]}function A(e,o,s,d){0===e?(r=o,t=s):1===e?(a=o,n=s):(l=o,i=s)}b.ctx.lineWidth=20,b.ctx.strokeStyle="rgb(127, 0, 255)",b.ctx.fillStyle="rgb(0, 0, 0)",Page.show(),b.draggables.container.addEventListener("mouseleave",()=>{(1===p||y<3)&&(b.canvas.style.opacity=0,p=0)})}();