import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{hsvToRgb}from"/scripts/applets/applet.min.js";import{siteSettings}from"/scripts/src/settings.min.js";import{WilsonCPU}from"/scripts/wilson.min.js";const LITERAL=0,LAMBDA=1,APPLICATION=2;class LambdaCalculus extends AnimationFrameApplet{outerExpressionSize;expressionContainsAnApplication=!1;resolution=2e3;lambdaIndex=0;numLambdas=0;constructor({canvas}){super(canvas);var s={canvasWidth:this.resolution,fullscreenOptions:{useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}};this.wilson=new WilsonCPU(this.canvas,s)}run({resolution=2e3,expression:expressionString}){this.resolution=resolution,expressionString=expressionString.replaceAll(/[\n\t\s.]/g,""),this.numLambdas=expressionString.split("λ").length-1,this.lambdaIndex=0,this.expressionContainsAnApplication=!1;var s=this.parseExpression(expressionString),s=(this.validateExpression(s),this.setupExpression(s),this.drawExpression(s),this.expressionToString(s));return s}parseExpression(expressionString){if(0===expressionString.length)throw new Error("Empty expression.");for(var i=[];0<expressionString.length;)if("λ"===expressionString[0]){if(expressionString.length<3)throw new Error("Expression too short.");var o=expressionString[1],s=expressionString.slice(2);i.push({type:LAMBDA,argument:o,body:this.parseExpression(s),literalColor:{h:this.lambdaIndex/this.numLambdas,s:.8,v:1}}),this.lambdaIndex++,expressionString=""}else if("("===expressionString[0]){let s=1,e=1;for(;0<e;)"("===expressionString[s]?e++:")"===expressionString[s]&&e--,s++;o=this.parseExpression(expressionString.slice(1,s-1));o.startText="("+(o.startText??""),o.endText=(o.endText??"")+")",i.push(o),expressionString=expressionString.slice(s)}else i.push({type:LITERAL,value:expressionString[0]}),expressionString=expressionString.slice(1);if(1===i.length)return i[0];let e=i[0];for(let n=1;n<i.length;n++)e={type:APPLICATION,function:e,input:i[n]},this.expressionContainsAnApplication=!0;return e}validateExpression(expression,scopedVariables=[]){if(expression.type!==LITERAL)return expression.type===LAMBDA?this.validateExpression(expression.body,[...scopedVariables,expression.argument]):this.validateExpression(expression.function,scopedVariables)&&this.validateExpression(expression.input,scopedVariables);if(scopedVariables.includes(expression.value))return!0;throw new Error(`Undefined variable ${expression.value}.`)}setupExpression(expression){this.addExpressionSize(expression),this.expressionContainsAnApplication&&expression.height--,this.outerExpressionSize=Math.max(expression.width,expression.height),expression.row=Math.max((this.outerExpressionSize-expression.height)/2,0),expression.col=Math.max((this.outerExpressionSize-expression.width)/2,0),this.addExpressionLocation(expression),this.addExpressionBindings(expression),this.addExpressionColors(expression),this.addExpressionRects(expression)}addExpressionSize(expression){expression.type===LAMBDA?(this.addExpressionSize(expression.body),expression.width=expression.body.width,expression.height=expression.body.height+2):expression.type===APPLICATION?(this.addExpressionSize(expression.function),this.addExpressionSize(expression.input),expression.width=expression.function.width+expression.input.width+1,expression.height=Math.max(expression.function.height,expression.input.height)+2):(expression.width=3,expression.height=0)}addExpressionLocation(expression){expression.type===LAMBDA?(expression.body.row=expression.row+2,expression.body.col=expression.col,this.addExpressionLocation(expression.body)):expression.type===APPLICATION&&(expression.function.row=expression.row,expression.function.col=expression.col,expression.input.row=expression.row,expression.input.col=expression.col+expression.function.width+1,this.addExpressionLocation(expression.function),this.addExpressionLocation(expression.input))}addExpressionBindings(expression,bindings={}){expression.type===LITERAL?expression.bindingLambda=bindings[expression.value]:expression.type===LAMBDA?this.addExpressionBindings(expression.body,{...bindings,[expression.argument]:expression}):(this.addExpressionBindings(expression.function,bindings),this.addExpressionBindings(expression.input,bindings))}addExpressionColors(expression){var s,e,i,o;expression.type===LITERAL?expression.color=expression.bindingLambda.literalColor:expression.type===LAMBDA?(this.addExpressionColors(expression.body),expression.color=expression.body.color):(this.addExpressionColors(expression.function),this.addExpressionColors(expression.input),s=expression.function.color.h,e=expression.input.color.h,i=expression.function.color.s,o=expression.input.color.s,expression.color={h:Math.abs(s-e)<=.5?(s+e)/2:(s+e+1)/2%1,s:Math.max((i+o)/2-.1,.1),v:1})}addExpressionRects(expression){var s,e,i;expression.type===LAMBDA?(s=hsvToRgb(expression.literalColor.h,expression.literalColor.s,expression.literalColor.v),expression.rects=[{color:`rgb(${s[0]}, ${s[1]}, ${s[2]})`,row:expression.row,col:expression.col,width:expression.width,height:1}],this.addExpressionRects(expression.body)):expression.type===APPLICATION?(s={color:`rgb(${(s=hsvToRgb(expression.function.color.h,expression.function.color.s,expression.function.color.v))[0]}, ${s[1]}, ${s[2]})`,col:expression.col+1,width:1},expression.function.type!==LAMBDA&&expression.function.type===LITERAL?s.row=expression.function.bindingLambda.row+1:s.row=expression.function.row+expression.function.height-1,s.height=expression.row+expression.height-3-s.row+1,e={color:`rgb(${(e=hsvToRgb(expression.input.color.h,expression.input.color.s,expression.input.color.v))[0]}, ${e[1]}, ${e[2]})`,col:expression.col+expression.function.width+2,width:1},expression.input.type!==LAMBDA&&expression.input.type===LITERAL?e.row=expression.input.bindingLambda.row+1:e.row=expression.input.row+expression.input.height-1,e.height=expression.row+expression.height-3-e.row+1,i=hsvToRgb(expression.color.h,expression.color.s,expression.color.v),expression.rects=[{color:`rgb(${i[0]}, ${i[1]}, ${i[2]})`,row:expression.row+expression.height-2,col:expression.col+1,width:expression.function.width+2,height:1},s,e],this.addExpressionRects(expression.function),this.addExpressionRects(expression.input)):(i=hsvToRgb(expression.color.h,expression.color.s,expression.color.v),expression.rects=[{color:`rgb(${i[0]}, ${i[1]}, ${i[2]})`,row:expression.bindingLambda.row+1,col:expression.col+1,width:1,height:expression.row-1-(expression.bindingLambda.row+1)+1}])}drawExpression(expression){this.outerExpressionSize=Math.max(expression.width,expression.height),this.resolution=Math.round(this.resolution/(this.outerExpressionSize+2))*(this.outerExpressionSize+2),this.wilson.resizeCanvas({width:this.resolution}),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.drawExpressionStep(expression)}drawExpressionStep(expression){for(const e of expression.rects){this.wilson.ctx.fillStyle=e.color;var s=this.resolution/(this.outerExpressionSize+2);this.wilson.ctx.fillRect(s*(e.col+1),s*(e.row+1),s*e.width,s*e.height)}expression.type===LAMBDA?this.drawExpressionStep(expression.body):expression.type===APPLICATION&&(this.drawExpressionStep(expression.function),this.drawExpressionStep(expression.input))}expressionToString(expression){var s=expression.startText??"",e=expression.endText??"",i=siteSettings.darkTheme?1:.7;if(expression.type===LITERAL){const r=expression.bindingLambda.literalColor,t=hsvToRgb(r.h,r.s,r.v*i),p=`rgb(${t[0]}, ${t[1]}, ${t[2]})`;return`<span style="color: ${p}">${s}${expression.value}${e}</span>`}if(expression.type===LAMBDA){var o=expression.literalColor,o=hsvToRgb(o.h,o.s,o.v*i),o=`rgb(${o[0]}, ${o[1]}, ${o[2]})`;const r=expression.color,t=hsvToRgb(r.h,r.s,r.v*i),p=`rgb(${t[0]}, ${t[1]}, ${t[2]})`;return`<span style="color: ${p}">${s}</span><span style="color: ${o}">λ${expression.argument}.</span>${this.expressionToString(expression.body)}<span style="color: ${p}">${e}</span>`}var o=this.expressionToString(expression.function),n=this.expressionToString(expression.input);const r=expression.color,t=hsvToRgb(r.h,r.s,r.v*i),p=`rgb(${t[0]}, ${t[1]}, ${t[2]})`;return`<span style="color: ${p}">${s}</span>${o}${n}<span style="color: ${p}">${e}</span>`}listAllBetaReductions(expression){var s,e,i,o,n;return expression.type===APPLICATION?(s=this.listAllBetaReductions(expression.function).map(reduction=>{var s=structuredClone(expression);return s.function=reduction,s}),e=this.listAllBetaReductions(expression.input).map(reduction=>{var s=structuredClone(expression);return s.input=reduction,s}),expression.function.type===LAMBDA?(n=(o=structuredClone(expression)).function.body,i=o.function,o=o.input,n=this.computeBetaReduction(n,i,o),[...s,...e,n]):[...s,...e]):expression.type===LAMBDA?this.listAllBetaReductions(expression.body).map(reduction=>{var s=structuredClone(expression);return s.body=reduction,s}):[]}computeBetaReduction(expression,bindingLambdaToReplace,replacementValue){if(expression.type===LITERAL){if(expression.bindingLambda===bindingLambdaToReplace)return structuredClone(replacementValue)}else expression.type===LAMBDA?expression.body=this.computeBetaReduction(expression.body,bindingLambdaToReplace,replacementValue):(expression.function=this.computeBetaReduction(expression.function,bindingLambdaToReplace,replacementValue),expression.input=this.computeBetaReduction(expression.input,bindingLambdaToReplace,replacementValue));return expression}}export{LambdaCalculus};