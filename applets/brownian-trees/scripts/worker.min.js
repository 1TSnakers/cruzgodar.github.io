onmessage=async function(c){gridSize=c.data[0];await drawBrownianTree()};let gridSize=null,margin=null,brownianTreeGraph=[],color=[],currentBrightness=255,progressThreshhold=5,currentRow=null,currentCol=null,spawnRadius=null;const directions=[[-1,0],[0,1],[1,0],[0,-1]];
function drawBrownianTree(){return new Promise(function(c,a){brownianTreeGraph=[];color=[];for(a=0;a<gridSize;a++){brownianTreeGraph[a]=[];color[a]=[];for(var b=0;b<gridSize;b++)brownianTreeGraph[a][b]=0,color[a][b]=[0,0,0]}brownianTreeGraph[Math.floor(gridSize/2)][Math.floor(gridSize/2)]=1;color[Math.floor(gridSize/2)][Math.floor(gridSize/2)]=[255,255,255];postMessage([2,Math.floor(gridSize/2),Math.floor(gridSize/2),"rgb(255, 255, 255)"]);margin=10;for(spawnRadius=5;gridSize-2*spawnRadius>2*margin;)for(a=
2*Math.random()*Math.PI,currentRow=Math.floor(spawnRadius*Math.cos(a)+gridSize/2),currentCol=Math.floor(spawnRadius*Math.sin(a)+gridSize/2);;){a=[];currentRow>gridSize/2-spawnRadius&&a.push(0);currentCol<gridSize/2+spawnRadius&&a.push(1);currentRow<gridSize/2+spawnRadius&&a.push(2);currentCol>gridSize/2-spawnRadius&&a.push(3);b=a[Math.floor(Math.random()*a.length)];a=currentRow+directions[b][0];b=currentCol+directions[b][1];if(1===brownianTreeGraph[a][b]){brownianTreeGraph[currentRow][currentCol]=
1;const d=HSVtoRGB((Math.atan2(currentCol-Math.floor(gridSize/2),Math.floor(gridSize/2)-currentRow)+Math.PI)/(2*Math.PI),1,1);color[currentRow][currentCol]=[.9925*color[a][b][0]+.0075*d[0],.9925*color[a][b][1]+.0075*d[1],.9925*color[a][b][2]+.0075*d[2]];postMessage([2,currentCol,currentRow,`rgb(${currentBrightness/255*color[currentRow][currentCol][0]}, ${currentBrightness/255*color[currentRow][currentCol][1]}, ${currentBrightness/255*color[currentRow][currentCol][2]})`]);5>=spawnRadius*spawnRadius-
(currentRow-gridSize/2)*(currentRow-gridSize/2)-(currentCol-gridSize/2)*(currentCol-gridSize/2)&&(spawnRadius++,currentBrightness=Math.floor(255*(gridSize/2-10-spawnRadius)/(gridSize/2-10)),100*Math.pow((255-currentBrightness)/255,2.71)>progressThreshhold&&(postMessage([0,progressThreshhold]),progressThreshhold+=5));break}currentRow=a;currentCol=b}postMessage([0,100]);setTimeout(()=>{postMessage([1])},500);c()})}
function HSVtoRGB(c,a,b){let d,e,f,h,k,g;h=Math.floor(6*c);k=6*c-h;c=b*(1-a);g=b*(1-k*a);a=b*(1-(1-k)*a);switch(h%6){case 0:d=b;e=a;f=c;break;case 1:d=g;e=b;f=c;break;case 2:d=c;e=b;f=a;break;case 3:d=c;e=g;f=b;break;case 4:d=a;e=c;f=b;break;case 5:d=b,e=c,f=g}return[Math.round(255*d),Math.round(255*e),Math.round(255*f)]};
