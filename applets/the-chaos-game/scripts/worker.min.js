"use strict";onmessage=async function(e){num_vertices=e.data[0],grid_size=e.data[1],await draw_chaos_game()};let num_vertices=null,grid_size=null,image=[],vertices=[],center_row=null,center_col=null,current_row=null,current_col=null,num_pixels_at_max=0;function draw_chaos_game(){return new Promise(function(e,r){image=[];for(let e=0;e<grid_size;e++){image.push([]);for(let r=0;r<grid_size;r++)image[e].push(0)}let t=2*Math.floor(num_vertices/2)*Math.PI/num_vertices,i=grid_size/2-grid_size/2.5,c=grid_size/2-grid_size/2.5*Math.cos(t),_=i+(grid_size-c);center_row=Math.floor(_/2+grid_size/2.5),center_col=Math.floor(grid_size/2),current_row=center_row,current_col=center_col,vertices=[];for(let e=0;e<num_vertices;e++){let r=e/num_vertices*2*Math.PI,t=Math.floor(-Math.cos(r)*grid_size/2.5+center_row),i=Math.floor(Math.sin(r)*grid_size/2.5+center_col);vertices.push([t,i])}let o=0;for(;;){o%(100*grid_size)==0&&postMessage([image]);let e=Math.floor(Math.random()*num_vertices);if(current_row=Math.floor((current_row+vertices[e][0])/2),current_col=Math.floor((current_col+vertices[e][1])/2),image[current_row][current_col]++,255===image[current_row][current_col]){if(++num_pixels_at_max/(grid_size*grid_size)>.004)break}else image[current_row][current_col]>255&&(image[current_row][current_col]=255);o++}postMessage([image]),e()})}