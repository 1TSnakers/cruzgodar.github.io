class Snowflake extends Applet{loadPromise=null;resolution=500;lastTimestamp=-1;computationsPerFrame=20;constructor(a){super(a);this.wilson=new Wilson(a,{renderer:"gpu",shader:"\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tuniform float rho;\n\t\t\tuniform float beta;\n\t\t\tuniform float alpha;\n\t\t\tuniform float theta;\n\t\t\tuniform float kappa;\n\t\t\tuniform float mu;\n\t\t\tuniform float gamma;\n\t\t\t\n\t\t\tuniform float resolution;\n\t\t\tuniform float step;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 center = (uv + vec2(1.0, 1.0)) / 2.0;\n\t\t\t\t\n\t\t\t\tif (length(center - vec2(.5, .5)) < step)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(1.0, 0.0, 1.0, 0.0);\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, rho);\n\t\t\t}\n\t\t",
canvasWidth:this.resolution,canvasHeight:this.resolution,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"});this.wilson.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tuniform float rho;\n\t\t\tuniform float beta;\n\t\t\tuniform float alpha;\n\t\t\tuniform float theta;\n\t\t\tuniform float kappa;\n\t\t\tuniform float mu;\n\t\t\tuniform float gamma;\n\t\t\t\n\t\t\tuniform float resolution;\n\t\t\tuniform float step;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 center = (uv + vec2(1.0, 1.0)) / 2.0;\n\t\t\t\tvec4 state = texture2D(uTexture, center);\n\t\t\t\tvec4 newState = state;\n\t\t\t\t\n\t\t\t\tif (center.x <= step || center.x >= 1.0 - step || center.y <= step || center.y >= 1.0 - step)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, newState.w);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvec4 state1 = texture2D(uTexture, center + vec2(step, 0.0));\n\t\t\t\tvec4 state2 = texture2D(uTexture, center + vec2(-step, 0.0));\n\t\t\t\tvec4 state3 = texture2D(uTexture, center + vec2(0.0, step));\n\t\t\t\tvec4 state4 = texture2D(uTexture, center + vec2(0.0, -step));\n\t\t\t\tvec4 state5;\n\t\t\t\tvec4 state6;\n\t\t\t\t\n\t\t\t\tif (mod(floor(center.x * resolution), 2.0) == 0.0)\n\t\t\t\t{\n\t\t\t\t\tstate5 = texture2D(uTexture, center + vec2(-step, -step));\n\t\t\t\t\tstate6 = texture2D(uTexture, center + vec2(step, -step));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate5 = texture2D(uTexture, center + vec2(-step, step));\n\t\t\t\t\tstate6 = texture2D(uTexture, center + vec2(step, step));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//The diffusion step: distribute the vapor mass. If it's on the boundary, only distribute mass from other cells not in the flake.\n\t\t\t\tif (state.x == 0.0)\n\t\t\t\t{\n\t\t\t\t\tfloat nearbyMass = state.w;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (state1.x == 0.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state1.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (state2.x == 0.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state2.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (state3.x == 0.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state3.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (state4.x == 0.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state4.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (state5.x == 0.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state5.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (state6.x == 0.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state6.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnearbyMass += state.w;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tnewState.w = nearbyMass / 7.0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = newState;\n\t\t\t}\n\t\t");
this.wilson.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tuniform float rho;\n\t\t\tuniform float beta;\n\t\t\tuniform float alpha;\n\t\t\tuniform float theta;\n\t\t\tuniform float kappa;\n\t\t\tuniform float mu;\n\t\t\tuniform float gamma;\n\t\t\t\n\t\t\tuniform float resolution;\n\t\t\tuniform float step;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 center = (uv + vec2(1.0, 1.0)) / 2.0;\n\t\t\t\tvec4 state = texture2D(uTexture, center);\n\t\t\t\tvec4 newState = state;\n\t\t\t\t\n\t\t\t\tif (center.x <= step || center.x >= 1.0 - step || center.y <= step || center.y >= 1.0 - step)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, newState.w);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvec4 state1 = texture2D(uTexture, center + vec2(step, 0.0));\n\t\t\t\tvec4 state2 = texture2D(uTexture, center + vec2(-step, 0.0));\n\t\t\t\tvec4 state3 = texture2D(uTexture, center + vec2(0.0, step));\n\t\t\t\tvec4 state4 = texture2D(uTexture, center + vec2(0.0, -step));\n\t\t\t\tvec4 state5;\n\t\t\t\tvec4 state6;\n\t\t\t\t\n\t\t\t\tif (mod(floor(center.x * resolution), 2.0) == 0.0)\n\t\t\t\t{\n\t\t\t\t\tstate5 = texture2D(uTexture, center + vec2(-step, -step));\n\t\t\t\t\tstate6 = texture2D(uTexture, center + vec2(step, -step));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate5 = texture2D(uTexture, center + vec2(-step, step));\n\t\t\t\t\tstate6 = texture2D(uTexture, center + vec2(step, step));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//Figure out if we're on the boundary: if we're not in the flake but a neighbor is.\n\t\t\t\tif (state.x == 0.0 && (state1.x == 1.0 || state2.x == 1.0 || state3.x == 1.0 || state4.x == 1.0 || state5.x == 1.0 || state6.x == 1.0))\n\t\t\t\t{\n\t\t\t\t\t//The freezing step: add mass on the boundary.\n\t\t\t\t\tnewState.y = state.y + (1.0 - kappa) * state.w;\n\t\t\t\t\tnewState.z = state.z + kappa * state.w;\n\t\t\t\t\tnewState.w = 0.0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = newState;\n\t\t\t}\n\t\t");
this.wilson.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tuniform float rho;\n\t\t\tuniform float beta;\n\t\t\tuniform float alpha;\n\t\t\tuniform float theta;\n\t\t\tuniform float kappa;\n\t\t\tuniform float mu;\n\t\t\tuniform float gamma;\n\t\t\t\n\t\t\tuniform float resolution;\n\t\t\tuniform float step;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 center = (uv + vec2(1.0, 1.0)) / 2.0;\n\t\t\t\tvec4 state = texture2D(uTexture, center);\n\t\t\t\tvec4 newState = state;\n\t\t\t\t\n\t\t\t\tif (center.x <= step || center.x >= 1.0 - step || center.y <= step || center.y >= 1.0 - step)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, newState.w);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvec4 state1 = texture2D(uTexture, center + vec2(step, 0.0));\n\t\t\t\tvec4 state2 = texture2D(uTexture, center + vec2(-step, 0.0));\n\t\t\t\tvec4 state3 = texture2D(uTexture, center + vec2(0.0, step));\n\t\t\t\tvec4 state4 = texture2D(uTexture, center + vec2(0.0, -step));\n\t\t\t\tvec4 state5;\n\t\t\t\tvec4 state6;\n\t\t\t\t\n\t\t\t\tif (mod(floor(center.x * resolution), 2.0) == 0.0)\n\t\t\t\t{\n\t\t\t\t\tstate5 = texture2D(uTexture, center + vec2(-step, -step));\n\t\t\t\t\tstate6 = texture2D(uTexture, center + vec2(step, -step));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate5 = texture2D(uTexture, center + vec2(-step, step));\n\t\t\t\t\tstate6 = texture2D(uTexture, center + vec2(step, step));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//Figure out if we're on the boundary: if we're not in the flake but a neighbor is.\n\t\t\t\tif (state.x == 0.0 && (state1.x == 1.0 || state2.x == 1.0 || state3.x == 1.0 || state4.x == 1.0 || state5.x == 1.0 || state6.x == 1.0))\n\t\t\t\t{\n\t\t\t\t\t//The attachment step: add cells to the flake.\n\t\t\t\t\tint numAttachedNeighbors = 0;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (state1.x == 1.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnumAttachedNeighbors += 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (state2.x == 1.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnumAttachedNeighbors += 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (state3.x == 1.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnumAttachedNeighbors += 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (state4.x == 1.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnumAttachedNeighbors += 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (state5.x == 1.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnumAttachedNeighbors += 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (state6.x == 1.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnumAttachedNeighbors += 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (numAttachedNeighbors == 1 || numAttachedNeighbors == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (state.y >= beta)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewState.x = 1.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse if (numAttachedNeighbors == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (state.y >= 1.0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewState.x = 1.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\telse if (state.y >= alpha)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfloat nearbyMass = state.w + state1.w + state2.w + state3.w + state4.w + state5.w + state6.w;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (nearbyMass < theta)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnewState.x = 1.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse if (numAttachedNeighbors >= 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewState.x = 1.0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (newState.x == 1.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewState.z = state.y + state.z;\n\t\t\t\t\t\tnewState.y = 0.0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = newState;\n\t\t\t}\n\t\t");
this.wilson.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tuniform float rho;\n\t\t\tuniform float beta;\n\t\t\tuniform float alpha;\n\t\t\tuniform float theta;\n\t\t\tuniform float kappa;\n\t\t\tuniform float mu;\n\t\t\tuniform float gamma;\n\t\t\t\n\t\t\tuniform float resolution;\n\t\t\tuniform float step;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 center = (uv + vec2(1.0, 1.0)) / 2.0;\n\t\t\t\tvec4 state = texture2D(uTexture, center);\n\t\t\t\tvec4 newState = state;\n\t\t\t\t\n\t\t\t\tif (center.x <= step || center.x >= 1.0 - step || center.y <= step || center.y >= 1.0 - step)\n\t\t\t\t{\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, newState.w);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvec4 state1 = texture2D(uTexture, center + vec2(step, 0.0));\n\t\t\t\tvec4 state2 = texture2D(uTexture, center + vec2(-step, 0.0));\n\t\t\t\tvec4 state3 = texture2D(uTexture, center + vec2(0.0, step));\n\t\t\t\tvec4 state4 = texture2D(uTexture, center + vec2(0.0, -step));\n\t\t\t\tvec4 state5;\n\t\t\t\tvec4 state6;\n\t\t\t\t\n\t\t\t\tif (mod(floor(center.x * resolution), 2.0) == 0.0)\n\t\t\t\t{\n\t\t\t\t\tstate5 = texture2D(uTexture, center + vec2(-step, -step));\n\t\t\t\t\tstate6 = texture2D(uTexture, center + vec2(step, -step));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate5 = texture2D(uTexture, center + vec2(-step, step));\n\t\t\t\t\tstate6 = texture2D(uTexture, center + vec2(step, step));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//Figure out if we're on the boundary: if we're not in the flake but a neighbor is.\n\t\t\t\tif (state.x == 0.0 && (state1.x == 1.0 || state2.x == 1.0 || state3.x == 1.0 || state4.x == 1.0 || state5.x == 1.0 || state6.x == 1.0))\n\t\t\t\t{\n\t\t\t\t\t//The melting step: move around mass on the boundary.\n\t\t\t\t\tnewState.y = (1.0 - mu) * state.y;\n\t\t\t\t\tnewState.z = (1.0 - gamma) * state.z;\n\t\t\t\t\tnewState.w = state.w + mu * state.y + gamma * state.z;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = newState;\n\t\t\t}\n\t\t");
this.wilson.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\t//We stretch the y-coordinate by 2/sqrt(3) to account for the squishing of the flake.\n\t\t\t\tvec3 v = texture2D(uTexture, vec2(uv.x + 1.0, uv.y / 1.15470053838 + 1.0) / 2.0).zzz;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(v * .8, 1.0);\n\t\t\t}\n\t\t");this.wilson.render.initUniforms("rho beta alpha theta kappa mu gamma resolution step".split(" "),
0);this.wilson.render.initUniforms("rho beta alpha theta kappa mu gamma resolution step".split(" "),1);this.wilson.render.initUniforms("rho beta alpha theta kappa mu gamma resolution step".split(" "),2);this.wilson.render.initUniforms("rho beta alpha theta kappa mu gamma resolution step".split(" "),3);this.wilson.render.initUniforms("rho beta alpha theta kappa mu gamma resolution step".split(" "),4);this.wilson.render.createFramebufferTexturePair();this.wilson.render.createFramebufferTexturePair();
this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[0].texture);this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,null)}run(a=500,b=25,c=.635,d=1.6,e=.4,f=.025,g=.0025,h=.015,k=5E-4){this.resume();this.resolution=a;this.computationsPerFrame=b;for(a=0;4>=a;a++)this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[a]),this.wilson.gl.uniform1f(this.wilson.uniforms.resolution[a],this.resolution),this.wilson.gl.uniform1f(this.wilson.uniforms.step[a],1/this.resolution),
this.wilson.gl.uniform1f(this.wilson.uniforms.rho[a],c),this.wilson.gl.uniform1f(this.wilson.uniforms.beta[a],d),this.wilson.gl.uniform1f(this.wilson.uniforms.alpha[a],e),this.wilson.gl.uniform1f(this.wilson.uniforms.theta[a],f),this.wilson.gl.uniform1f(this.wilson.uniforms.kappa[a],g),this.wilson.gl.uniform1f(this.wilson.uniforms.mu[a],h),this.wilson.gl.uniform1f(this.wilson.uniforms.gamma[a],k);this.wilson.changeCanvasSize(this.resolution,this.resolution);this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,
this.wilson.render.framebuffers[0].texture);this.wilson.gl.texImage2D(this.wilson.gl.TEXTURE_2D,0,this.wilson.gl.RGBA,this.wilson.canvasWidth,this.wilson.canvasHeight,0,this.wilson.gl.RGBA,this.wilson.gl.FLOAT,null);this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[1].texture);this.wilson.gl.texImage2D(this.wilson.gl.TEXTURE_2D,0,this.wilson.gl.RGBA,this.wilson.canvasWidth,this.wilson.canvasHeight,0,this.wilson.gl.RGBA,this.wilson.gl.FLOAT,null);this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[0]);
this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[0].texture);this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,this.wilson.render.framebuffers[0].framebuffer);this.wilson.render.drawFrame();window.requestAnimationFrame(this.drawFrame.bind(this))}drawFrame(a){var b=a-this.lastTimestamp;this.lastTimestamp=a;if(0!==b){for(a=0;a<this.computationsPerFrame;a++)this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[1]),this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,
this.wilson.render.framebuffers[1].framebuffer),this.wilson.render.drawFrame(),this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[2]),this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[1].texture),this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,this.wilson.render.framebuffers[0].framebuffer),this.wilson.render.drawFrame(),this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[3]),this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[0].texture),
this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,this.wilson.render.framebuffers[1].framebuffer),this.wilson.render.drawFrame(),this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[4]),this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[1].texture),this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,this.wilson.render.framebuffers[0].framebuffer),this.wilson.render.drawFrame(),this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[0].texture);
this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[5]);this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,null);this.wilson.render.drawFrame();a=this.wilson.render.getPixelData();b=Math.floor(this.resolution/10);for(let c=b;c<this.resolution-b;c++){const d=this.resolution*c+(this.resolution-b),e=this.resolution*b+c,f=this.resolution*(this.resolution-b)+c;(a[4*(this.resolution*c+b)]||a[4*d]||a[4*e]||a[4*f])&&this.pause()}this.animationPaused||window.requestAnimationFrame(this.drawFrame.bind(this))}}}
;
