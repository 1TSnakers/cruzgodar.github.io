!function(){"use strict";let e=`
  precision highp float;
  
  varying vec2 uv;
  
  uniform float juliaSetsPerSide;
  uniform float juliaSetSize;
  uniform float imageSize;
  uniform int numIterations;
  
  
  
  void main(void)
  {
   float a = (floor((uv.x + 1.0) / 2.0 * juliaSetsPerSide) / juliaSetsPerSide * 2.0 - 1.0) * 1.5 - .75;
   float b = (floor((uv.y + 1.0) / 2.0 * juliaSetsPerSide) / juliaSetsPerSide * 2.0 - 1.0) * 1.5;
   
   vec2 z = vec2((mod((uv.x + 1.0) / 2.0 * imageSize, juliaSetSize) / juliaSetSize * 2.0 - 1.0) * 1.5, (mod((uv.y + 1.0) / 2.0 * imageSize, juliaSetSize) / juliaSetSize * 2.0 - 1.0) * 1.5);
   float brightness = exp(-length(z));
   
   vec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));
   
   
   
   for (int iteration = 0; iteration < 100; iteration++)
   {
    if (iteration == numIterations)
    {
     gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
     return;
    }
    
    if (length(z) >= 2.0)
    {
     break;
    }
    
    z = vec2(z.x * z.x - z.y * z.y + a, 2.0 * z.x * z.y + b);
    
    brightness += exp(-length(z));
   }
   
   
   
   gl_FragColor = vec4(brightness / 10.0 * color, 1.0);
  }
 `,i=new Wilson(Page.element.querySelector("#output-canvas"),{renderer:"gpu",shader:e,canvasWidth:2e3,canvasHeight:2e3,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"});i.render.initUniforms(["juliaSetsPerSide","juliaSetSize","imageSize","numIterations"]);let n=2e3;Page.element.querySelector("#generate-button").addEventListener("click",a);let t=Page.element.querySelector("#num-julias-input"),r=Page.element.querySelector("#julia-size-input");t.addEventListener("keydown",function(e){13===e.keyCode&&a()}),r.addEventListener("keydown",function(e){13===e.keyCode&&a()});function a(){let e=parseInt(t.value||100),a=parseInt(r.value||20);n=e*a,i.changeCanvasSize(n,n),i.gl.uniform1f(i.uniforms.juliaSetsPerSide,e),i.gl.uniform1f(i.uniforms.juliaSetSize,a),i.gl.uniform1f(i.uniforms.imageSize,n),i.gl.uniform1i(i.uniforms.numIterations,50),i.render.drawFrame()}Page.element.querySelector("#download-button").addEventListener("click",()=>{i.downloadFrame("a-julia-set-mosaic.png")}),Page.show()}();