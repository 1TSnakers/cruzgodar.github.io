class JuliaSetMosaic extends Applet{wilsonHidden=null;aspectRatio=1;numIterations=100;exposure=1;zoomLevel=0;pastBrightnessScales=[];a=0;b=0;resolution=500;resolutionHidden=50;lastTimestamp=-1;constructor(a){super(a);const c=this.createHiddenCanvas();this.pan.minX=-2.75;this.pan.maxX=1.25;this.pan.minY=-2;this.pan.maxY=2;const b={renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",canvasWidth:this.resolution,canvasHeight:this.resolution,
worldCenterX:-.75,worldCenterY:0,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:()=>this.changeAspectRatio(!0),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),
touchendCallback:this.onReleaseCanvas.bind(this),wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this)};this.wilson=new Wilson(a,b);this.wilsonHidden=new Wilson(c,{renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",canvasWidth:this.resolutionHidden,canvasHeight:this.resolutionHidden});this.zoom.init();a=()=>this.changeAspectRatio(!0);window.addEventListener("resize",a);this.handlers.push([window,
"resize",a])}run(a=1E3,c=10,b=1,d=100){this.resolution=a;this.wilson.changeCanvasSize(this.resolution,this.resolution);this.setDensity=c;this.exposure=b;this.numIterations=d;this.wilson.render.shaderPrograms=[];this.wilson.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform float setDensity;\n\t\t\t\n\t\t\tuniform float aspectRatio;\n\t\t\t\n\t\t\tuniform float worldCenterX;\n\t\t\tuniform float worldCenterY;\n\t\t\tuniform float worldSize;\n\t\t\t\n\t\t\tuniform float a;\n\t\t\tuniform float b;\n\t\t\tuniform float exposure;\n\t\t\tuniform int numIterations;\n\t\t\tuniform float brightnessScale;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 z;\n\t\t\t\t\n\t\t\t\tif (aspectRatio >= 1.0)\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));\n\t\t\t\tfloat brightness = exp(-length(z));\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tvec2 c = floor(z * setDensity) / setDensity;\n\t\t\t\tz = (mod(z, 1.0 / setDensity) * setDensity - vec2(.5, .5)) * 3.0;\n\t\t\t\t\n\t\t\t\tfor (int iteration = 0; iteration < 3001; iteration++)\n\t\t\t\t{\n\t\t\t\t\tif (iteration == numIterations)\n\t\t\t\t\t{\n\t\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (length(z) >= 1000.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tz = vec2(z.x * z.x - z.y * z.y + c.x, 2.0 * z.x * z.y + c.y);\n\t\t\t\t\t\n\t\t\t\t\tbrightness += exp(-length(z));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(brightness / brightnessScale * exposure * color, 1.0);\n\t\t\t}\n\t\t");
this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[0]);this.wilson.render.initUniforms("setDensity aspectRatio worldCenterX worldCenterY worldSize a b exposure numIterations brightnessScale".split(" "));this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,1);this.wilsonHidden.render.shaderPrograms=[];this.wilsonHidden.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform float setDensity;\n\t\t\t\n\t\t\tuniform float aspectRatio;\n\t\t\t\n\t\t\tuniform float worldCenterX;\n\t\t\tuniform float worldCenterY;\n\t\t\tuniform float worldSize;\n\t\t\t\n\t\t\tuniform float a;\n\t\t\tuniform float b;\n\t\t\tuniform float exposure;\n\t\t\tuniform int numIterations;\n\t\t\tuniform float brightnessScale;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 z;\n\t\t\t\t\n\t\t\t\tif (aspectRatio >= 1.0)\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));\n\t\t\t\tfloat brightness = exp(-length(z));\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tvec2 c = floor(z * setDensity) / setDensity;\n\t\t\t\tz = (mod(z, 1.0 / setDensity) * setDensity - vec2(.5, .5)) * 3.0;\n\t\t\t\t\n\t\t\t\tfor (int iteration = 0; iteration < 3001; iteration++)\n\t\t\t\t{\n\t\t\t\t\tif (iteration == numIterations)\n\t\t\t\t\t{\n\t\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (length(z) >= 1000.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tz = vec2(z.x * z.x - z.y * z.y + c.x, 2.0 * z.x * z.y + c.y);\n\t\t\t\t\t\n\t\t\t\t\tbrightness += exp(-length(z));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(brightness / brightnessScale * exposure * color, 1.0);\n\t\t\t}\n\t\t");
this.wilsonHidden.gl.useProgram(this.wilsonHidden.render.shaderPrograms[0]);this.wilsonHidden.render.initUniforms("setDensity aspectRatio worldCenterX worldCenterY worldSize a b exposure numIterations brightnessScale".split(" "));this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,1);this.wilson.worldWidth=4;this.wilson.worldHeight=4;this.wilson.worldCenterX=-.75;this.juliaMode=this.wilson.worldCenterY=0;this.zoom.level=0;this.pastBrightnessScales=[];this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,
1);window.requestAnimationFrame(this.drawFrame.bind(this))}drawFrame(a){var c=a-this.lastTimestamp;this.lastTimestamp=a;if(0!==c){this.pan.update();this.zoom.update();this.numIterations=30*-this.zoomLevel+200;this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.setDensity,this.setDensity);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterX,this.wilson.worldCenterX);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterY,this.wilson.worldCenterY);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldSize,
Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2);this.wilsonHidden.gl.uniform1i(this.wilsonHidden.uniforms.numIterations,this.numIterations);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.exposure,1);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.a,this.a);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.b,this.b);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.brightnessScale,20*(Math.abs(this.zoomLevel)+1));this.wilsonHidden.render.drawFrame();
a=this.wilsonHidden.render.getPixelData();c=Array(this.resolutionHidden*this.resolutionHidden);for(let b=0;b<this.resolutionHidden*this.resolutionHidden;b++)c[b]=a[4*b]+a[4*b+1]+a[4*b+2];c.sort((b,d)=>b-d);a=(c[Math.floor(this.resolutionHidden*this.resolutionHidden*.96)]+c[Math.floor(this.resolutionHidden*this.resolutionHidden*.98)])/255*15*(Math.abs(this.zoomLevel/2)+1);this.pastBrightnessScales.push(a);a=this.pastBrightnessScales.length;10<a&&this.pastBrightnessScales.shift();a=Math.max(this.pastBrightnessScales.reduce((b,
d)=>b+d)/a,.5);this.wilson.gl.uniform1f(this.wilson.uniforms.setDensity,this.setDensity);this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,this.aspectRatio);this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterX,this.wilson.worldCenterX);this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterY,this.wilson.worldCenterY);this.wilson.gl.uniform1f(this.wilson.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2);this.wilson.gl.uniform1i(this.wilson.uniforms.numIterations,
this.numIterations);this.wilson.gl.uniform1f(this.wilson.uniforms.exposure,this.exposure);this.wilson.gl.uniform1f(this.wilson.uniforms.a,this.a);this.wilson.gl.uniform1f(this.wilson.uniforms.b,this.b);this.wilson.gl.uniform1f(this.wilson.uniforms.brightnessScale,a);this.wilson.render.drawFrame();this.animationPaused||window.requestAnimationFrame(this.drawFrame.bind(this))}}};
