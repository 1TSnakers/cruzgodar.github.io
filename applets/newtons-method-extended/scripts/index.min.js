import{showPage}from"../../../scripts/src/loadPage.min.js";import{NewtonsMethodExtended}from"./class.min.js";import{Applet}from"/scripts/src/applets.min.js";import{Button,DownloadButton,GenerateButton}from"/scripts/src/buttons.min.js";import{Dropdown}from"/scripts/src/dropdowns.min.js";import{$}from"/scripts/src/main.min.js";import{TextBox}from"/scripts/src/textBoxes.min.js";function load(){const t=new NewtonsMethodExtended({canvas:$("#output-canvas")}),e=(t.loadPromise.then(()=>a()),new GenerateButton({element:$("#generate-button"),onClick:a}),new Button({element:$("#randomize-palette-button"),name:"Regenerate Palette",onClick:()=>t.animatePaletteChange()}),new DownloadButton({element:$("#download-button"),wilson:t.wilson,filename:"newtons-method-extended.png"}),new TextBox({element:$("#resolution-input"),name:"Resolution",value:500,maxValue:2e3,onInput:function(){t.resolution=e.value,t.changeAspectRatio(!0)}})),n=$("#code-textarea");n.value="cmul(csin(z), sin(cmul(z, i)))",Applet.listenToInputElements([n],a);var o=$("#derivative-precision-slider");const i=$("#derivative-precision-slider-value"),s=(o.addEventListener("input",()=>{t.derivativePrecision=parseFloat(i.textContent),t.wilson.gl.uniform1f(t.wilson.uniforms.derivativePrecision,t.derivativePrecision),t.wilsonHidden.gl.uniform1f(t.wilsonHidden.uniforms.derivativePrecision,t.derivativePrecision)}),{none:"",trig:"csin(z)",crosshatch:"cmul(csin(z), csinh(z))",palette:"cmul(sin(z), csinh(z))",butterflies:"cmul(sin(z), tan(z))",swatches:"cmul(csin(vec2(z.x, sign(z.y) * min(abs(z.y), mod(abs(z.y), 2.0*PI) + 2.0*PI))), sin(cmul(vec2(z.x, sign(z.y) * min(abs(z.y), mod(abs(z.y), 2.0*PI) + 2.0*PI)), i)))"}),r=new Dropdown({element:$("#examples-dropdown"),name:"Examples",options:{trig:"Trig Function",crosshatch:"Crosshatch",palette:"Palette Demonstration",butterflies:"Butterflies",swatches:"Color Swatches"},onInput:function(){n.value=s[r.value],a()}});function a(){var e=n.value;t.run({generatingCode:e})}showPage()}export{load};