!async function(){"use strict";await Site.loadGLSL();let e=null,o=null,r=[1,0],t=[0,0],n=1,i=1,l=[],a=500,s=20,c=0,d=0,u=0,$=0,f=0,m=0,h=0,v=0,g=-1,w=!1,_=0,p=null,C=Array(12),b=Array(12),z=$("#code-textarea");z.value="cmul(csin(z), csin(cmul(z, i)))",z.addEventListener("keydown",e=>{13===e.keyCode&&(e.preventDefault(),k())});$("#randomize-palette-button").addEventListener("click",function e(){if(!w){w=!0,_=0;let o=L();b=[...p];for(let r=0;r<12;r++)C[r]=o[r]-p[r];window.requestAnimationFrame(Z)}});$("#generate-button").addEventListener("click",k);let S=$("#resolution-input");S.addEventListener("input",()=>{a=parseInt(S.value||500),e.changeCanvasSize(a,a),window.requestAnimationFrame(Z)});let y=$("#derivative-precision-input");y.addEventListener("input",()=>{s=parseFloat(y.value||20),e.gl.uniform1f(e.uniforms.derivativePrecision,s),o.gl.uniform1f(o.uniforms.derivativePrecision,s),window.requestAnimationFrame(Z)});$("#download-button").addEventListener("click",()=>{e.downloadFrame("newtons-method.png")});let R=$("#canvas-location"),q={none:"",polynomial:"csub(cpow(z, 6.0), 1.0)",trig:"csin(z)",crosshatch:"cmul(csin(z), csin(cmul(z, i)))",palette:"cmul(sin(z), csin(cmul(z, i)))",butterflies:"cmul(sin(z), tan(z))"},F=$("#example-selector-dropdown");function k(){let n=z.value||"cmul(csin(z), csin(cmul(z, i)))",a=`
   precision highp float;
   
   varying vec2 uv;
   
   uniform float aspectRatio;
   
   uniform float worldCenterX;
   uniform float worldCenterY;
   uniform float worldSize;
   
   uniform float derivativePrecision;
   
   
   uniform vec3 colors[4];
   
   uniform vec2 a;
   uniform vec2 c;
   
   uniform float brightnessScale;
   
   const float threshhold = .01;
   
   
   
   ${Site.getGLSLBundle(n)}
   
   
   
   //Returns f(z) for a polynomial f with given roots.
   vec2 f(vec2 z)
   {
    return ${n};
   }
   
   
   
   //Approximates f'(z) for a polynomial f with given roots.
   vec2 cderiv(vec2 z)
   {
    return derivativePrecision * (f(z + vec2(1.0 / (2.0*derivativePrecision), 0.0)) - f(z - vec2(1.0 / (2.0*derivativePrecision), 0.0)));
   }
   
   
   
   void main(void)
   {
    vec2 z;
    vec2 lastZ = vec2(0.0, 0.0);
    vec2 oldZ = vec2(0.0, 0.0);
    
    if (aspectRatio >= 1.0)
    {
     z = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);
    }
    
    else
    {
     z = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);
    }
    
    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
    
    
    
    for (int iteration = 0; iteration < 200; iteration++)
    {
     vec2 temp = cmul(cmul(f(z), cinv(cderiv(z))), a) + c;
     
     oldZ = lastZ;
     
     lastZ = z;
     
     z -= temp;
     
     
     
     //If we're slowing down, it's reasonably safe to assume that we're near a root.
     
     float d0 = length(lastZ - z);
     
     if (d0 < threshhold)
     {
      float d1 = length(oldZ - lastZ);
      
      float brightnessAdjust = (log(threshhold) - log(d0)) / (log(d1) - log(d0));
      
      float brightness = 1.0 - (float(iteration) - brightnessAdjust) / brightnessScale;
      
      //Round to a square grid so that basin colors are consistent.
      vec2 theoreticalRoot = floor(z / (threshhold / 3.0)) * threshhold / 3.0;
      
      float c0 = sin(theoreticalRoot.x * 7.239846) + cos(theoreticalRoot.x * 2.945387) + 2.0;
      
      float c1 = sin(theoreticalRoot.y * 5.918445) + cos(theoreticalRoot.y * .987235) + 2.0;
      
      float c2 = sin((theoreticalRoot.x + theoreticalRoot.y) * 1.023974) + cos((theoreticalRoot.x + theoreticalRoot.y) * 9.130874) + 2.0;
      
      float c3 = sin((theoreticalRoot.x - theoreticalRoot.y) * 3.258342) + cos((theoreticalRoot.x - theoreticalRoot.y) * 4.20957) + 2.0;
      
      //Pick an interpolated color between the 4 that we chose earlier.
      gl_FragColor = vec4((c0 * colors[0] + c1 * colors[1] + c2 * colors[2] + c3 * colors[3]) / (c0 + c1 + c2 + c3) * brightness, 1.0);
      
      return;
     }
    }
   }
  `;try{e.outputCanvasContainer.parentNode.remove(),o.outputCanvasContainer.parentNode.remove(),R.insertAdjacentHTML("beforebegin",`
    <div>
     <canvas id="output-canvas" class="output-canvas"></canvas>
     <canvas id="hidden-canvas" class="hidden-canvas"></canvas>
    </div>
   `)}catch(c){}(e=new Wilson($("#output-canvas"),{renderer:"gpu",shader:a,canvasWidth:500,canvasHeight:500,worldWidth:12,worldHeight:12,worldCenterX:0,worldCenterY:0,useDraggables:!0,draggablesMousemoveCallback:Y,draggablesTouchmoveCallback:Y,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:E,mousedownCallback:x,touchstartCallback:x,mousedragCallback:H,touchmoveCallback:H,mouseupCallback:W,touchendCallback:W,wheelCallback:P,pinchCallback:A})).render.initUniforms(["aspectRatio","derivativePrecision","worldCenterX","worldCenterY","worldSize","colors","a","c","brightnessScale"]),(o=new Wilson($("#hidden-canvas"),{renderer:"gpu",shader:a,canvasWidth:100,canvasHeight:100})).render.initUniforms(["aspectRatio","derivativePrecision","worldCenterX","worldCenterY","worldSize","colors","a","c","brightnessScale"]),l=[],i=2,u=0,$=0,f=0,m=0,h=0,v=0;let d=e.draggables.add(1,0);d.classList.add("a-marker"),(d=e.draggables.add(0,0)).classList.add("c-marker"),r=[1,0],t=[0,0],p=L(),e.gl.uniform1f(e.uniforms.aspectRatio,1),o.gl.uniform1f(o.uniforms.aspectRatio,1),e.gl.uniform1f(e.uniforms.derivativePrecision,s),o.gl.uniform1f(o.uniforms.derivativePrecision,s),e.gl.uniform3fv(e.uniforms.colors,p),o.gl.uniform3fv(o.uniforms.colors,p),window.requestAnimationFrame(Z)}function L(){let o=Array(12),r=0,t=[];for(let n=0;n<4;n++){r=Math.random()*(1-2*n*.1);for(let i=0;i<n;i++)r>t[i]&&(r+=.2);t[n]=r-.1,t.sort();let l=e.utils.hsvToRgb(r,.25*Math.random()+.75,.25*Math.random()+.75);o[3*n]=l[0]/255,o[3*n+1]=l[1]/255,o[3*n+2]=l[2]/255}return o}function x(e,o,r){m=0,h=0,v=0,u=0,$=0,f=0}function H(o,r,t,n,i){e.worldCenterX-=t,e.worldCenterY-=n,u=-t/e.worldWidth,$=-n/e.worldHeight,window.requestAnimationFrame(Z),e.draggables.recalculateLocations()}function W(e,o,r){Math.sqrt(u*u+$*$)>=.0025&&(m=u,h=$),Math.abs(f)>=.01&&(v=f),window.requestAnimationFrame(Z)}function P(e,o,r,t){c=e,d=o,.3>Math.abs(r/100)?i+=r/100:v+=.05*Math.sign(r),X()}function A(o,r,t,l){n>=1?(i-=t/e.worldWidth*10,f=-t/e.worldWidth*10):(i-=t/e.worldHeight*10,f=-t/e.worldHeight*10),c=o,d=r,X()}function X(){if(n>=1){let o=e.input.getZoomedWorldCenter(c,d,3*Math.pow(2,i)*n,3*Math.pow(2,i));e.worldWidth=3*Math.pow(2,i)*n,e.worldHeight=3*Math.pow(2,i),e.worldCenterX=o[0],e.worldCenterY=o[1]}else{let r=e.input.getZoomedWorldCenter(c,d,3*Math.pow(2,i),3*Math.pow(2,i)/n);e.worldWidth=3*Math.pow(2,i),e.worldHeight=3*Math.pow(2,i)/n,e.worldCenterX=r[0],e.worldCenterY=r[1]}window.requestAnimationFrame(Z),e.draggables.recalculateLocations()}function Y(e,o,n,i){0===e?r=[o,n]:t=[o,n],window.requestAnimationFrame(Z)}function Z(a){let s=a-g;if(g=a,0===s)return;o.gl.uniform1f(o.uniforms.aspectRatio,n),o.gl.uniform1f(o.uniforms.worldCenterX,e.worldCenterX),o.gl.uniform1f(o.uniforms.worldCenterY,e.worldCenterY),o.gl.uniform1f(o.uniforms.worldSize,Math.min(e.worldHeight,e.worldWidth)/2),o.gl.uniform2fv(o.uniforms.a,r),o.gl.uniform2f(o.uniforms.c,t[0]/10,t[1]/10),o.gl.uniform1f(o.uniforms.brightnessScale,30),o.render.drawFrame();let z=o.render.getPixelData(),S=Array(1e4);for(let y=0;y<1e4;y++)S[y]=Math.max(Math.max(z[4*y],z[4*y+1]),z[4*y+2]);S.sort((e,o)=>e-o);let R=Math.min(1e4/(S[Math.floor(9600)]+S[Math.floor(9800)]),200);l.push(R);let q=l.length;q>10&&l.shift(),R=Math.max(l.reduce((e,o)=>e+o)/q,.5),e.gl.uniform1f(e.uniforms.aspectRatio,n),e.gl.uniform1f(e.uniforms.worldCenterX,e.worldCenterX),e.gl.uniform1f(e.uniforms.worldCenterY,e.worldCenterY),e.gl.uniform1f(e.uniforms.worldSize,Math.min(e.worldHeight,e.worldWidth)/2),e.gl.uniform2fv(e.uniforms.a,r),e.gl.uniform2f(e.uniforms.c,t[0]/10,t[1]/10),e.gl.uniform1f(e.uniforms.brightnessScale,R),e.render.drawFrame();let F=!1;w&&(function r(){let t=.5*Math.sin(Math.PI*_/30-Math.PI/2)+.5;for(let n=0;n<12;n++)p[n]=b[n]+C[n]*t;e.gl.uniform3fv(e.uniforms.colors,p),o.gl.uniform3fv(o.uniforms.colors,p),31==++_&&(w=!1)}(),F=!0),s>=50&&(m=0,h=0,v=0,u=0,$=0,f=0),(0!==m||0!==h||0!==v)&&(e.worldCenterX+=m*e.worldWidth,e.worldCenterY+=h*e.worldHeight,25e-5>Math.sqrt((m*=.96)*m+(h*=.96)*h)&&(m=0,h=0),i+=v,X(c,d),.001>Math.abs(v*=.93)&&(v=0),F=!0,e.draggables.recalculateLocations()),F&&window.requestAnimationFrame(Z)}function E(){e.fullscreen.currentlyFullscreen?(n=window.innerWidth/window.innerHeight)>=1?(e.changeCanvasSize(a,Math.floor(a/n)),e.worldWidth=3*Math.pow(2,i)*n,e.worldHeight=3*Math.pow(2,i)):(e.changeCanvasSize(Math.floor(a*n),a),e.worldWidth=3*Math.pow(2,i),e.worldHeight=3*Math.pow(2,i)/n):(n=1,e.changeCanvasSize(a,a),e.worldWidth=3*Math.pow(2,i),e.worldHeight=3*Math.pow(2,i)),window.requestAnimationFrame(Z)}F.addEventListener("input",()=>{"none"!==F.value&&(z.value=q[F.value],k())}),k(),Page.show(),window.addEventListener("resize",E),Page.temporaryHandlers.resize.push(E)}();