import{NewtonsMethodExtended}from"./class.min.js";import{Button,DownloadHighResButton,GenerateButton}from"/scripts/src/buttons.min.js";import{Dropdown}from"/scripts/src/dropdowns.min.js";import{$}from"/scripts/src/main.min.js";import{siteSettings}from"/scripts/src/settings.min.js";import{TextBox}from"/scripts/src/textBoxes.min.js";import{Textarea}from"/scripts/src/textareas.min.js";export default function(){const e=new NewtonsMethodExtended({canvas:$("#output-canvas")}),t=(e.loadPromise.then(()=>a()),new GenerateButton({element:$("#generate-button"),onClick:a}),new Button({element:$("#randomize-palette-button"),name:"Regenerate Palette",onClick:()=>e.animatePaletteChange()}),new DownloadHighResButton({element:$("#download-dropdown"),applet:e,filename:()=>"newtons-method-extended.png"}),new TextBox({element:$("#resolution-input"),name:"Resolution",value:500,minValue:100,maxValue:2e3,onInput:function(){e.wilson.resizeCanvas({width:t.value*siteSettings.resolutionMultiplier})}})),n={none:"",trig:"csin(z)",crosshatch:"cmul(csin(z), csinh(z))",palette:"cmul(sin(z), csinh(z))",butterflies:"cmul(sin(z), tan(z))",swatches:"cmul(csin(vec2(z.x, sign(z.y) * min(abs(z.y), mod(abs(z.y), 2.0*PI) + 2.0*PI))), sin(cmul(vec2(z.x, sign(z.y) * min(abs(z.y), mod(abs(z.y), 2.0*PI) + 2.0*PI)), i)))"},s=new Dropdown({element:$("#examples-dropdown"),name:"Examples",options:{trig:"Trig Function",crosshatch:"Crosshatch",palette:"Palette Demonstration",butterflies:"Butterflies",swatches:"Color Swatches"},onInput:function(){o.setValue(n[s.value]),a()}}),o=new Textarea({element:$("#glsl-textarea"),name:"Generating Code",value:"cmul(csin(z), sin(cmul(z, i)))",onInput:()=>{s.value&&s.setValue({newValue:"default"})},onEnter:a});function a(){e.run({generatingCode:o.value})}}