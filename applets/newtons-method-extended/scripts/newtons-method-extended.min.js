!async function(){"use strict";await Site.load_glsl();let t=null,e=null,n=[1,0],r=[0,0],o=1,a=1,i=[],l=500,c=100,s=20,_=0,d=0,u=0,f=0,h=0,w=0,m=0,g=0;const v=.96,p=.0025,b=25e-5,y=.93,z=.01,M=.001;let x=-1,q=!1,k=0,A=null,P=new Array(12),F=new Array(12),S=Page.element.querySelector("#code-textarea");S.value="cmul(csin(z), csin(cmul(z, i)))",S.addEventListener("keydown",t=>{13===t.keyCode&&(t.preventDefault(),j())}),Page.element.querySelector("#randomize-palette-button").addEventListener("click",function(){if(!q){q=!0,k=0;let t=C();F=[...A];for(let e=0;e<12;e++)P[e]=t[e]-A[e];window.requestAnimationFrame(B)}}),Page.element.querySelector("#generate-button").addEventListener("click",j);let L=Page.element.querySelector("#resolution-input");L.addEventListener("input",()=>{l=parseInt(L.value||500),t.change_canvas_size(l,l),window.requestAnimationFrame(B)});let E=Page.element.querySelector("#derivative-precision-input");E.addEventListener("input",()=>{s=parseFloat(E.value||20),t.gl.uniform1f(t.uniforms.derivative_precision,s),e.gl.uniform1f(e.uniforms.derivative_precision,s),window.requestAnimationFrame(B)}),Page.element.querySelector("#download-button").addEventListener("click",()=>{t.download_frame("newtons-method.png")});let I=Page.element.querySelector("#canvas-location");function j(){let o=S.value||"cmul(csin(z), csin(cmul(z, i)))",l=`\n\t\t\tprecision highp float;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform float aspect_ratio;\n\t\t\t\n\t\t\tuniform float world_center_x;\n\t\t\tuniform float world_center_y;\n\t\t\tuniform float world_size;\n\t\t\t\n\t\t\tuniform float derivative_precision;\n\t\t\t\n\t\t\t\n\t\t\tuniform vec3 colors[4];\n\t\t\t\n\t\t\tuniform vec2 a;\n\t\t\tuniform vec2 c;\n\t\t\t\n\t\t\tuniform float brightness_scale;\n\t\t\t\n\t\t\tconst float threshhold = .01;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t${Site.get_glsl_bundle(o)}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Returns f(z) for a polynomial f with given roots.\n\t\t\tvec2 f(vec2 z)\n\t\t\t{\n\t\t\t\treturn ${o};\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Approximates f'(z) for a polynomial f with given roots.\n\t\t\tvec2 cderiv(vec2 z)\n\t\t\t{\n\t\t\t\treturn derivative_precision * (f(z + vec2(1.0 / (2.0*derivative_precision), 0.0)) - f(z - vec2(1.0 / (2.0*derivative_precision), 0.0)));\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 z;\n\t\t\t\tvec2 last_z = vec2(0.0, 0.0);\n\t\t\t\tvec2 old_z = vec2(0.0, 0.0);\n\t\t\t\t\n\t\t\t\tif (aspect_ratio >= 1.0)\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * aspect_ratio * world_size + world_center_x, uv.y * world_size + world_center_y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * world_size + world_center_x, uv.y / aspect_ratio * world_size + world_center_y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor (int iteration = 0; iteration < 200; iteration++)\n\t\t\t\t{\n\t\t\t\t\tvec2 temp = cmul(cmul(f(z), cinv(cderiv(z))), a) + c;\n\t\t\t\t\t\n\t\t\t\t\told_z = last_z;\n\t\t\t\t\t\n\t\t\t\t\tlast_z = z;\n\t\t\t\t\t\n\t\t\t\t\tz -= temp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t//If we're slowing down, it's reasonably safe to assume that we're near a root.\n\t\t\t\t\t\n\t\t\t\t\tfloat d_0 = length(last_z - z);\n\t\t\t\t\t\n\t\t\t\t\tif (d_0 < threshhold)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat d_1 = length(old_z - last_z);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness_adjust = (log(threshhold) - log(d_0)) / (log(d_1) - log(d_0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightness_adjust) / brightness_scale;\n\t\t\t\t\t\t\n\t\t\t\t\t\t//Round to a square grid so that basin colors are consistent.\n\t\t\t\t\t\tvec2 theoretical_root = floor(z / (threshhold / 3.0)) * threshhold / 3.0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat c0 = sin(theoretical_root.x * 7.239846) + cos(theoretical_root.x * 2.945387) + 2.0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat c1 = sin(theoretical_root.y * 5.918445) + cos(theoretical_root.y * .987235) + 2.0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat c2 = sin((theoretical_root.x + theoretical_root.y) * 1.023974) + cos((theoretical_root.x + theoretical_root.y) * 9.130874) + 2.0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat c3 = sin((theoretical_root.x - theoretical_root.y) * 3.258342) + cos((theoretical_root.x - theoretical_root.y) * 4.20957) + 2.0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t//Pick an interpolated color between the 4 that we chose earlier.\n\t\t\t\t\t\tgl_FragColor = vec4((c0 * colors[0] + c1 * colors[1] + c2 * colors[2] + c3 * colors[3]) / (c0 + c1 + c2 + c3) * brightness, 1.0);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`,c={renderer:"gpu",shader:l,canvas_width:500,canvas_height:500,world_width:12,world_height:12,world_center_x:0,world_center_y:0,use_draggables:!0,draggables_mousemove_callback:T,draggables_touchmove_callback:T,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:G,mousedown_callback:W,touchstart_callback:W,mousedrag_callback:H,touchmove_callback:H,mouseup_callback:N,touchend_callback:N,wheel_callback:R,pinch_callback:$},_={renderer:"gpu",shader:l,canvas_width:100,canvas_height:100};try{t.output_canvas_container.parentNode.remove(),e.output_canvas_container.parentNode.remove(),I.insertAdjacentHTML("beforebegin",'\n\t\t\t\t<div>\n\t\t\t\t\t<canvas id="output-canvas" class="output-canvas"></canvas>\n\t\t\t\t\t<canvas id="hidden-canvas" class="hidden-canvas"></canvas>\n\t\t\t\t</div>\n\t\t\t')}catch(t){}(t=new Wilson(Page.element.querySelector("#output-canvas"),c)).render.init_uniforms(["aspect_ratio","derivative_precision","world_center_x","world_center_y","world_size","colors","a","c","brightness_scale"]),(e=new Wilson(Page.element.querySelector("#hidden-canvas"),_)).render.init_uniforms(["aspect_ratio","derivative_precision","world_center_x","world_center_y","world_size","colors","a","c","brightness_scale"]),i=[],a=2,u=0,f=0,h=0,w=0,m=0,g=0;let d=t.draggables.add(1,0);d.classList.add("a-marker"),(d=t.draggables.add(0,0)).classList.add("c-marker"),n=[1,0],r=[0,0],A=C(),t.gl.uniform1f(t.uniforms.aspect_ratio,1),e.gl.uniform1f(e.uniforms.aspect_ratio,1),t.gl.uniform1f(t.uniforms.derivative_precision,s),e.gl.uniform1f(e.uniforms.derivative_precision,s),t.gl.uniform3fv(t.uniforms.colors,A),e.gl.uniform3fv(e.uniforms.colors,A),window.requestAnimationFrame(B)}function C(){let e=new Array(12),n=0,r=[];for(let o=0;o<4;o++){n=Math.random()*(1-2*o*.1);for(let t=0;t<o;t++)n>r[t]&&(n+=.2);r[o]=n-.1,r.sort();let a=t.utils.hsv_to_rgb(n,.25*Math.random()+.75,.25*Math.random()+.75);e[3*o]=a[0]/255,e[3*o+1]=a[1]/255,e[3*o+2]=a[2]/255}return e}function W(t,e,n){w=0,m=0,g=0,u=0,f=0,h=0}function H(e,n,r,o,a){t.world_center_x-=r,t.world_center_y-=o,u=-r/t.world_width,f=-o/t.world_height,window.requestAnimationFrame(B),t.draggables.recalculate_locations()}function N(t,e,n){Math.sqrt(u*u+f*f)>=p&&(w=u,m=f),Math.abs(h)>=z&&(g=h),window.requestAnimationFrame(B)}function R(t,e,n,r){_=t,d=e,Math.abs(n/100)<.3?a+=n/100:g+=.05*Math.sign(n),D()}function $(e,n,r,i){o>=1?(a-=r/t.world_width*10,h=-r/t.world_width*10):(a-=r/t.world_height*10,h=-r/t.world_height*10),_=e,d=n,D()}function D(){if(o>=1){let e=t.input.get_zoomed_world_center(_,d,3*Math.pow(2,a)*o,3*Math.pow(2,a));t.world_width=3*Math.pow(2,a)*o,t.world_height=3*Math.pow(2,a),t.world_center_x=e[0],t.world_center_y=e[1]}else{let e=t.input.get_zoomed_world_center(_,d,3*Math.pow(2,a),3*Math.pow(2,a)/o);t.world_width=3*Math.pow(2,a),t.world_height=3*Math.pow(2,a)/o,t.world_center_x=e[0],t.world_center_y=e[1]}window.requestAnimationFrame(B),t.draggables.recalculate_locations()}function T(t,e,o,a){0===t?n=[e,o]:r=[e,o],window.requestAnimationFrame(B)}function B(l){let s=l-x;if(x=l,0===s)return;e.gl.uniform1f(e.uniforms.aspect_ratio,o),e.gl.uniform1f(e.uniforms.world_center_x,t.world_center_x),e.gl.uniform1f(e.uniforms.world_center_y,t.world_center_y),e.gl.uniform1f(e.uniforms.world_size,Math.min(t.world_height,t.world_width)/2),e.gl.uniform2fv(e.uniforms.a,n),e.gl.uniform2f(e.uniforms.c,r[0]/10,r[1]/10),e.gl.uniform1f(e.uniforms.brightness_scale,30),e.render.draw_frame();let _=e.render.get_pixel_data(),d=new Array(c*c);for(let t=0;t<c*c;t++)d[t]=Math.max(Math.max(_[4*t],_[4*t+1]),_[4*t+2]);d.sort((t,e)=>t-e);let p=Math.min(1e4/(d[Math.floor(c*c*.96)]+d[Math.floor(c*c*.98)]),200);i.push(p);let z=i.length;z>10&&i.shift(),p=Math.max(i.reduce((t,e)=>t+e)/z,.5),t.gl.uniform1f(t.uniforms.aspect_ratio,o),t.gl.uniform1f(t.uniforms.world_center_x,t.world_center_x),t.gl.uniform1f(t.uniforms.world_center_y,t.world_center_y),t.gl.uniform1f(t.uniforms.world_size,Math.min(t.world_height,t.world_width)/2),t.gl.uniform2fv(t.uniforms.a,n),t.gl.uniform2f(t.uniforms.c,r[0]/10,r[1]/10),t.gl.uniform1f(t.uniforms.brightness_scale,p),t.render.draw_frame();let S=!1;q&&(!function(){let n=.5*Math.sin(Math.PI*k/30-Math.PI/2)+.5;for(let t=0;t<12;t++)A[t]=F[t]+P[t]*n;t.gl.uniform3fv(t.uniforms.colors,A),e.gl.uniform3fv(e.uniforms.colors,A),31==++k&&(q=!1)}(),S=!0),s>=50&&(w=0,m=0,g=0,u=0,f=0,h=0),0===w&&0===m&&0===g||(t.world_center_x+=w*t.world_width,t.world_center_y+=m*t.world_height,w*=v,m*=v,Math.sqrt(w*w+m*m)<b&&(w=0,m=0),a+=g,D(),g*=y,Math.abs(g)<M&&(g=0),S=!0,t.draggables.recalculate_locations()),S&&window.requestAnimationFrame(B)}function G(){t.fullscreen.currently_fullscreen?(o=window.innerWidth/window.innerHeight)>=1?(t.change_canvas_size(l,Math.floor(l/o)),t.world_width=3*Math.pow(2,a)*o,t.world_height=3*Math.pow(2,a)):(t.change_canvas_size(Math.floor(l*o),l),t.world_width=3*Math.pow(2,a),t.world_height=3*Math.pow(2,a)/o):(o=1,t.change_canvas_size(l,l),t.world_width=3*Math.pow(2,a),t.world_height=3*Math.pow(2,a)),window.requestAnimationFrame(B)}j(),Page.show(),window.addEventListener("resize",G),Page.temporary_handlers.resize.push(G)}();