import{Applet}from"../../../scripts/applets/applet.min.js";import{addTemporaryWorker}from"/scripts/src/main.min.js";import{Wilson}from"/scripts/wilson.min.js";class KickedRotator extends Applet{webWorker=null;hues=[];values=[];numWrites=[];constructor({canvas}){super(canvas);this.wilson=new Wilson(canvas,{renderer:"cpu",canvasWidth:1e3,canvasHeight:1e3,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"})}run({resolution,K,orbitSeparation}){const i=new Array(resolution*resolution);for(let o=0;o<resolution;o++)for(let e=0;e<resolution;e++)i[resolution*o+e]=0;this.wilson.changeCanvasSize(resolution,resolution),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,resolution,resolution),this.webWorker=addTemporaryWorker("/applets/kicked-rotator/scripts/worker.js"),this.webWorker.onmessage=e=>{var o,s=e.data[0],t=e.data[1];for(let r=0;r<resolution;r++)for(let e=0;e<resolution;e++)s[resolution*r+e]>i[resolution*r+e]&&(o=this.wilson.utils.hsvToRgb(t,1,s[resolution*r+e]/255),this.wilson.ctx.fillStyle=`rgb(${o[0]}, ${o[1]}, ${o[2]})`,this.wilson.ctx.fillRect(e,r,1,1),i[resolution*r+e]=s[resolution*r+e])},this.webWorker.postMessage([resolution,K,orbitSeparation])}}export{KickedRotator};