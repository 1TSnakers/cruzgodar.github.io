import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{aspectRatio}from"/scripts/src/layout.min.js";import{addTemporaryWorker,loadScript}from"/scripts/src/main.min.js";import{WilsonGPU}from"/scripts/wilson.min.js";class QuasiFuchsianGroups extends AnimationFrameApplet{wilsonHidden;resolutionSmall=400;resolutionLarge=1200;boxSize=4;webWorker;t=[[2,0],[2,0]];coefficients=[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[],[]];drawAnotherFrame=!1;needToRestart=!0;maxDepth=200;maxPixelBrightness=50;x=0;y=0;brightness;image;Complex;constructor({canvas}){super(canvas);var i={shaders:{trim:`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;
			
			uniform vec2 stepSize;
			
			
			
			void main(void)
			{
				//remove isolated pixels.
				vec2 center = (uv + vec2(1.0, 1.0)) / 2.0;
				
				float brightness =
					texture2D(uTexture, center + vec2(stepSize.x, 0.0)).z +
					texture2D(uTexture, center - vec2(stepSize.x, 0.0)).z +
					texture2D(uTexture, center + vec2(0.0, stepSize.y)).z +
					texture2D(uTexture, center - vec2(0.0, stepSize.y)).z +
					texture2D(uTexture, center + vec2(stepSize.x, stepSize.y)).z +
					texture2D(uTexture, center + vec2(stepSize.x, -stepSize.y)).z +
					texture2D(uTexture, center + vec2(-stepSize.x, stepSize.y)).z +
					texture2D(uTexture, center + vec2(-stepSize.x, -stepSize.y)).z;
				
				if (brightness < 0.1)
				{
					gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
					
					return;
				}
				
				
				gl_FragColor = vec4(0.0, 0.0, texture2D(uTexture, center).z, 1.0);
			}
		`,dilate:`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;
			
			uniform vec2 stepSize;
			
			
			
			void main(void)
			{
				//Dilate the pixels to make a thicker line.
				vec2 center = (uv + vec2(1.0, 1.0)) / 2.0;
				
				float brightness =
					max(max(max(texture2D(uTexture, center + vec2(stepSize.x, 0.0)).z,
					texture2D(uTexture, center - vec2(stepSize.x, 0.0)).z),
					max(texture2D(uTexture, center + vec2(0.0, stepSize.y)).z,
					texture2D(uTexture, center - vec2(0.0, stepSize.y)).z)),
					
					max(max(texture2D(uTexture, center + vec2(stepSize.x, stepSize.y)).z,
					texture2D(uTexture, center + vec2(stepSize.x, -stepSize.y)).z),
					max(texture2D(uTexture, center + vec2(-stepSize.x, stepSize.y)).z,
					texture2D(uTexture, center + vec2(-stepSize.x, -stepSize.y)).z)));
					
				brightness = max(brightness, texture2D(uTexture, center).z);
				
				gl_FragColor = vec4(0.0, 0.0, brightness, 1.0);
			}
		`,color:`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;

			uniform vec2 aspectRatio;
			
			void main(void)
			{
				//Dilate the pixels to make a thicker line.
				vec2 center = (uv + vec2(1.0, 1.0)) / 2.0;
				
				vec2 z = 3.0 * uv * aspectRatio;
				vec3 color = 1.5 * normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));
				
				gl_FragColor = vec4(color * texture2D(uTexture, center).z, 1.0);
			}
		`},uniforms:{trim:{stepSize:[1/this.resolutionSmall,1/this.resolutionSmall]},dilate:{stepSize:[1/this.resolutionSmall,1/this.resolutionSmall]},color:{aspectRatio:[1,1]}},canvasWidth:this.resolutionSmall,worldWidth:1,worldHeight:4,worldCenterX:2,worldCenterY:0,onResizeCanvas:this.onResizeCanvas.bind(this),draggableOptions:{draggables:{ta:[2,0],tb:[2,0],tab:[2,-2]},callbacks:{grab:this.onGrabDraggable.bind(this),drag:this.onDragDraggable.bind(this),release:this.onReleaseDraggable.bind(this)}},fullscreenOptions:{fillScreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}};this.wilson=new WilsonGPU(canvas,i),loadScript("/scripts/complex.min.js").then(()=>{this.Complex=Complex,this.resume(),this.onResizeCanvas(),this.changeRecipe("grandma")})}grandmaCoefficients(p1=this.wilson.draggables.ta.location,p2=this.wilson.draggables.tb.location){var i=new this.Complex(p1[0],p1[1]),e=new this.Complex(p2[0],p2[1]),t=i.mul(e),s=i.mul(i).add(e.mul(e)),s=t.mul(t).sub(s.mul(4)),t=(0<s.arg()?t.sub(s.sqrt()):t.add(s.sqrt())).div(2),s=t.sub(2).mul(e).div(e.mul(t).sub(i.mul(2)).add(t.mul(new this.Complex([0,2])))),a=i.div(2),n=i.mul(t).sub(e.mul(2)).add(new this.Complex([0,4])).div(t.mul(2).add(4).mul(s)),i=i.mul(t).sub(e.mul(2)).sub(new this.Complex([0,4])).mul(s).div(t.mul(2).sub(4)),s=e.sub(new this.Complex([0,2])).div(2),t=e.div(2),e=e.add(new this.Complex([0,2])).div(2);this.coefficients[0][0][0]=a.re,this.coefficients[0][0][1]=a.im,this.coefficients[0][1][0]=n.re,this.coefficients[0][1][1]=n.im,this.coefficients[0][2][0]=i.re,this.coefficients[0][2][1]=i.im,this.coefficients[0][3][0]=a.re,this.coefficients[0][3][1]=a.im,this.coefficients[1][0][0]=s.re,this.coefficients[1][0][1]=s.im,this.coefficients[1][1][0]=t.re,this.coefficients[1][1][1]=t.im,this.coefficients[1][2][0]=t.re,this.coefficients[1][2][1]=t.im,this.coefficients[1][3][0]=e.re,this.coefficients[1][3][1]=e.im;for(let d=0;d<2;d++){var h=this.coefficients[d][0][0],o=this.coefficients[d][0][1],r=this.coefficients[d][1][0],c=this.coefficients[d][1][1],l=this.coefficients[d][2][0],f=this.coefficients[d][2][1],m=this.coefficients[d][3][0],u=this.coefficients[d][3][1];this.coefficients[d+2]=[[m,u],[-r,-c],[-l,-f],[h,o]]}}rileyCoefficients(p=this.wilson.draggables.ta.location){this.coefficients[0][0][0]=1,this.coefficients[0][0][1]=0,this.coefficients[0][1][0]=0,this.coefficients[0][1][1]=0,this.coefficients[0][2][0]=p[0],this.coefficients[0][2][1]=p[1],this.coefficients[0][3][0]=1,this.coefficients[0][3][1]=0,this.coefficients[1][0][0]=1,this.coefficients[1][0][1]=0,this.coefficients[1][1][0]=2,this.coefficients[1][1][1]=0,this.coefficients[1][2][0]=0,this.coefficients[1][2][1]=0,this.coefficients[1][3][0]=1;for(let r=this.coefficients[1][3][1]=0;r<2;r++){var i=this.coefficients[r][0][0],e=this.coefficients[r][0][1],t=this.coefficients[r][1][0],s=this.coefficients[r][1][1],a=this.coefficients[r][2][0],n=this.coefficients[r][2][1],h=this.coefficients[r][3][0],o=this.coefficients[r][3][1];this.coefficients[r+2]=[[h,o],[-t,-s],[-a,-n],[i,e]]}}grandmaSpecialCoefficients(p1=this.wilson.draggables.ta.location,p2=this.wilson.draggables.tb.location,p3=this.wilson.draggables.tc.location){var i=new this.Complex(p1[0],p1[1]),e=new this.Complex(p2[0],p2[1]),t=new this.Complex(p3[0],p3[1]),s=new this.Complex(0,1),a=new this.Complex(2,0),n=i.mul(i).add(e.mul(e)).add(t.mul(t)).sub(i.mul(e).mul(t)).sub(2),a=a.sub(n).sqrt(),h=n.add(s.mul(a).mul(n.add(2).sqrt())).abs(),n=n.add(2).sqrt().mul(2<=h?1:-1),h=t.sub(2).mul(e.add(n)).div(e.mul(t).sub(i.mul(2)).add(s.mul(a).mul(t))),n=i.div(2),o=i.mul(t).sub(e.mul(2)).add(s.mul(a).mul(2)).div(h.mul(t.mul(2).add(4))),r=h.mul(i.mul(t).sub(e.mul(2)).sub(s.mul(2).mul(a))).div(t.mul(2).sub(4)),c=e.sub(s.mul(a)).div(2),l=e.mul(t).sub(i.mul(2)).add(s.mul(a).mul(t)).div(h.mul(t.mul(2).add(4))),i=e.mul(t).sub(i.mul(2)).sub(s.mul(a).mul(t)).mul(h).div(t.mul(2).sub(4)),h=e.add(s.mul(a)).div(2);this.coefficients[0][0][0]=n.re,this.coefficients[0][0][1]=n.im,this.coefficients[0][1][0]=o.re,this.coefficients[0][1][1]=o.im,this.coefficients[0][2][0]=r.re,this.coefficients[0][2][1]=r.im,this.coefficients[0][3][0]=n.re,this.coefficients[0][3][1]=n.im,this.coefficients[1][0][0]=c.re,this.coefficients[1][0][1]=c.im,this.coefficients[1][1][0]=l.re,this.coefficients[1][1][1]=l.im,this.coefficients[1][2][0]=i.re,this.coefficients[1][2][1]=i.im,this.coefficients[1][3][0]=h.re,this.coefficients[1][3][1]=h.im;for(let w=0;w<2;w++){var f=this.coefficients[w][0][0],m=this.coefficients[w][0][1],u=this.coefficients[w][1][0],d=this.coefficients[w][1][1],g=this.coefficients[w][2][0],p=this.coefficients[w][2][1],x=this.coefficients[w][3][0],v=this.coefficients[w][3][1];this.coefficients[w+2]=[[x,v],[-u,-d],[-g,-p],[f,m]]}}bakeCoefficients=this.grandmaCoefficients;changeRecipe(recipe){"grandma"===recipe?(this.bakeCoefficients=this.grandmaCoefficients,this.wilson.draggables.tb.element.style.display="block",this.wilson.draggables.tab.element.style.display="none"):"riley"===recipe?(this.bakeCoefficients=this.rileyCoefficients,this.wilson.draggables.tb.element.style.display="none",this.wilson.draggables.tab.element.style.display="none"):"grandmaSpecial"===recipe&&(this.bakeCoefficients=this.grandmaSpecialCoefficients,this.wilson.draggables.tb.element.style.display="block",this.wilson.draggables.tab.element.style.display="block")}drawFrame(){this.bakeCoefficients();for(let e=0;e<4;e++)this.searchStep(0,0,e,1);let i=0;for(let t=0;t<this.brightness.length;t++)i=Math.max(i,this.brightness[t]);for(let s=0;s<this.wilson.canvasHeight*this.wilson.canvasWidth;s++)this.image[4*s]=0,this.image[4*s+1]=1,this.image[4*s+2]=Math.pow(this.brightness[s]/i,.15),this.image[4*s+3]=1;this.renderShaderStack()}renderShaderStack(){this.wilson.useShader("trim"),this.wilson.useFramebuffer(null),this.wilson.useTexture("image"),this.wilson.setTexture({id:"image",data:this.image}),this.wilson.drawFrame(),this.wilson.useShader("dilate"),this.wilson.useTexture("dilated");var i=1e6<=this.wilson.canvasWidth*this.wilson.canvasHeight?1:0;for(let t=0;t<i;t++){const e=this.wilson.readPixels();this.wilson.setTexture({id:"dilated",data:e}),this.wilson.drawFrame()}this.wilson.useShader("color");const e=this.wilson.readPixels();this.wilson.setTexture({id:"dilated",data:e}),this.wilson.drawFrame()}searchStep(startX,startY,lastTransformationIndex,depth){if(depth!==this.maxDepth)for(let i=3;i<6;i++){this.x=startX,this.y=startY;var e=(lastTransformationIndex+i)%4,t=(this.applyTransformation(e),this.wilson.canvasWidth>=this.wilson.canvasHeight?Math.floor((-this.y+this.boxSize/2)/this.boxSize*this.wilson.canvasHeight):Math.floor((-this.y*(this.wilson.canvasWidth/this.wilson.canvasHeight)+this.boxSize/2)/this.boxSize*this.wilson.canvasHeight)),s=this.wilson.canvasWidth>=this.wilson.canvasHeight?Math.floor((this.x/(this.wilson.canvasWidth/this.wilson.canvasHeight)+this.boxSize/2)/this.boxSize*this.wilson.canvasWidth):Math.floor((this.x+this.boxSize/2)/this.boxSize*this.wilson.canvasWidth);if(0<=t&&t<this.wilson.canvasHeight&&0<=s&&s<this.wilson.canvasWidth){if(this.brightness[this.wilson.canvasWidth*t+s]===this.maxPixelBrightness)continue;(10<depth||this.imageSize!==this.resolutionSmall)&&this.brightness[this.wilson.canvasWidth*t+s]++}this.searchStep(this.x,this.y,e,depth+1)}}applyTransformation(index){var i=this.coefficients[index][0][0],e=this.coefficients[index][0][1],t=this.coefficients[index][1][0],s=this.coefficients[index][1][1],a=this.coefficients[index][2][0],n=this.coefficients[index][2][1],h=this.coefficients[index][3][0],o=this.coefficients[index][3][1],t=i*this.x-e*this.y+t,i=i*this.y+e*this.x+s,e=a*this.x-n*this.y+h,s=a*this.y+n*this.x+o,h=i*e-t*s,a=e*e+s*s;this.x=(t*e+i*s)/a,this.y=h/a}onGrabDraggable(){this.wilson.resizeCanvas({width:this.resolutionSmall}),this.maxDepth=200,this.maxPixelBrightness=50,this.needNewFrame=!0}onReleaseDraggable(){this.wilson.resizeCanvas({width:this.resolutionLarge}),this.maxDepth=100,this.maxPixelBrightness=200,this.needNewFrame=!0}onDragDraggable(){for(let i=0;i<this.wilson.canvasHeight*this.wilson.canvasWidth;i++)this.brightness[i]=0;this.needNewFrame=!0}async requestHighResFrame(imageSize,maxDepth,maxPixelBrightness,boxSize=this.boxSize){this.imageSize=imageSize,this.maxDepth=maxDepth,this.maxPixelBrightness=maxPixelBrightness,this.boxSize=boxSize,this.wilson.fullscreen.currentlyFullscreen?1<=aspectRatio?(this.imageWidth=Math.floor(this.imageSize*aspectRatio),this.imageHeight=this.imageSize):(this.imageWidth=this.imageSize,this.imageHeight=Math.floor(this.imageSize/aspectRatio)):(this.imageWidth=this.imageSize,this.imageHeight=this.imageSize),this.regenerateHueAndBrightness(),this.webWorker=addTemporaryWorker("/applets/quasi-fuchsian-groups/scripts/worker.js");var i=new Promise(resolve=>{this.webWorker.onmessage=e=>{this.brightness=e.data[0],this.wilson.changeCanvasSize(this.imageWidth,this.imageHeight);for(let s=0;s<this.imageHeight;s++)for(let i=0;i<this.imageWidth;i++){var t=s*this.imageWidth+i;this.image[4*t]=0,this.image[4*t+1]=0,this.image[4*t+2]=this.brightness[t],this.image[4*t+3]=0}this.renderShaderStack(),resolve()}});this.webWorker.postMessage([this.imageWidth,this.imageHeight,this.maxDepth,this.maxPixelBrightness,this.boxSize,this.coefficients]),await i}onResizeCanvas(){this.wilson.createFramebufferTexturePair({id:"image",textureType:"float"}),this.wilson.createFramebufferTexturePair({id:"dilated",textureType:"unsignedByte"}),this.image=new Float32Array(this.wilson.canvasWidth*this.wilson.canvasHeight*4),this.brightness=new Float32Array(this.wilson.canvasWidth*this.wilson.canvasHeight),this.wilson.setUniforms({stepSize:[1/this.wilson.canvasWidth,1/this.wilson.canvasHeight]},"trim"),this.wilson.setUniforms({stepSize:[1/this.wilson.canvasWidth,1/this.wilson.canvasHeight]},"dilate"),this.wilson.setUniforms({aspectRatio:[Math.max(this.wilson.canvasWidth/this.wilson.canvasHeight,1),Math.max(this.wilson.canvasHeight/this.wilson.canvasWidth,1)]},"color");for(let i=0;i<this.wilson.canvasWidth*this.wilson.canvasHeight;i++)this.brightness[i]=0;this.needNewFrame=!0}}export{QuasiFuchsianGroups};