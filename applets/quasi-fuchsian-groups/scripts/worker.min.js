"use strict";onmessage=async function(s){canvas_width=s.data[0],canvas_height=s.data[1],max_depth=s.data[2],max_pixel_brightness=s.data[3],box_size=s.data[4],coefficients=s.data[5],await draw_quasi_fuchsian_group()};let canvas_width=null,canvas_height=null,max_depth=null,max_pixel_brightness=null,box_size=null,coefficients=[],brightness=[],x=0,y=0;function draw_quasi_fuchsian_group(){return new Promise(async function(s,t){brightness=[];for(let s=0;s<canvas_height;s++){brightness[s]=[];for(let t=0;t<canvas_width;t++)brightness[s][t]=0}for(let s=0;s<4;s++)search_step(0,0,s,-1,-1,1);let e=brightness.flat().sort(function(s,t){return s-t}),i=e[Math.round(.999*e.length)-1];for(let s=0;s<canvas_height;s++)for(let t=0;t<canvas_width;t++)brightness[s][t]=Math.min(Math.sqrt(brightness[s][t]/i),1);for(let s=1;s<canvas_height-1;s++)for(let t=1;t<canvas_width-1;t++)0!==brightness[s][t]&&0===brightness[s-1][t]&&0===brightness[s-1][t+1]&&0===brightness[s][t+1]&&0===brightness[s+1][t+1]&&0===brightness[s+1][t]&&0===brightness[s+1][t-1]&&0===brightness[s][t-1]&&0===brightness[s-1][t-1]&&(brightness[s][t]=0);postMessage([brightness]),s()})}function search_step(s,t,e,i,a,n){if(n!==max_depth)for(let i=3;i<6;i++){x=s,y=t;let a=(e+i)%4;apply_transformation(a);let h=0,c=0;if(canvas_width>=canvas_height?(h=Math.floor((box_size/2-y)/box_size*canvas_height),c=Math.floor((x/(canvas_width/canvas_height)+box_size/2)/box_size*canvas_width)):(h=Math.floor((canvas_width/canvas_height*-y+box_size/2)/box_size*canvas_height),c=Math.floor((x+box_size/2)/box_size*canvas_width)),h>=0&&h<canvas_height&&c>=0&&c<canvas_width){if(brightness[h][c]===max_pixel_brightness)continue;brightness[h][c]++}search_step(x,y,a,h,c,n+1)}}function apply_transformation(s){let t=coefficients[s][0][0],e=coefficients[s][0][1],i=coefficients[s][1][0],a=coefficients[s][1][1],n=coefficients[s][2][0],h=coefficients[s][2][1],c=coefficients[s][3][0],r=coefficients[s][3][1],o=t*x-e*y+i,_=t*y+e*x+a,f=n*x-h*y+c,g=n*y+h*x+r,l=f*f+g*g;x=(o*f+_*g)/l,y=(_*f-o*g)/l}