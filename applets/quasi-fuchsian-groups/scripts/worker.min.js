"use strict";onmessage=async function(s){canvas_size=s.data[0],max_depth=s.data[1],max_pixel_brightness=s.data[2],box_size=s.data[3],coefficients=s.data[4],await draw_quasi_fuchsian_group()};let canvas_size=null,max_depth=null,max_pixel_brightness=null,box_size=null,coefficients=[],brightness=[],x=0,y=0;function draw_quasi_fuchsian_group(){return new Promise(async function(s,e){brightness=[];for(let s=0;s<canvas_size;s++){brightness[s]=[];for(let e=0;e<canvas_size;e++)brightness[s][e]=0}for(let s=0;s<4;s++)search_step(0,0,s,-1,-1,1);let i=brightness.flat().sort(function(s,e){return s-e}),t=i[Math.round(.999*i.length)-1];for(let s=0;s<canvas_size;s++)for(let e=0;e<canvas_size;e++)brightness[s][e]=Math.min(Math.sqrt(brightness[s][e]/t),1);postMessage([brightness]),s()})}function search_step(s,e,i,t,n,a){if(a!==max_depth)for(let t=3;t<6;t++){x=s,y=e;let n=(i+t)%4;apply_transformation(n);let c=Math.floor((box_size/2-y)/box_size*canvas_size),o=Math.floor((x+box_size/2)/box_size*canvas_size);if(c>=0&&c<canvas_size&&o>=0&&o<canvas_size){if(brightness[c][o]===max_pixel_brightness)continue;brightness[c][o]++,search_step(x,y,n,c,o,a+1)}}}function apply_transformation(s){let e=coefficients[s][0][0],i=coefficients[s][0][1],t=coefficients[s][1][0],n=coefficients[s][1][1],a=coefficients[s][2][0],c=coefficients[s][2][1],o=coefficients[s][3][0],f=coefficients[s][3][1],r=e*x-i*y+t,_=e*y+i*x+n,l=a*x-c*y+o,h=a*y+c*x+f,u=l*l+h*h;x=(r*l+_*h)/u,y=(_*l-r*h)/u}