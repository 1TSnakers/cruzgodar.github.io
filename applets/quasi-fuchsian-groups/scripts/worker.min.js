"use strict";onmessage=async function(s){canvas_width=s.data[0],canvas_height=s.data[1],max_depth=s.data[2],max_pixel_brightness=s.data[3],box_size=s.data[4],coefficients=s.data[5],await draw_quasi_fuchsian_group()};let canvas_width=null,canvas_height=null,max_depth=null,max_pixel_brightness=null,box_size=null,coefficients=[],brightness=[],x=0,y=0;function draw_quasi_fuchsian_group(){return new Promise(async function(s,i){brightness=Array(canvas_width*canvas_height);for(let t=0;t<brightness.length;t++)brightness[t]=0;for(let e=0;e<4;e++)search_step(0,0,e,-1,-1,1);let a=0;for(let n=0;n<brightness.length;n++)a=Math.max(a,brightness[n]);for(let h=0;h<brightness.length;h++)brightness[h]=Math.pow(brightness[h]/a,.15);postMessage([brightness]),s()})}function search_step(s,i,t,e,a,n){if(n!==max_depth)for(let h=3;h<6;h++){x=s,y=i;let c=(t+h)%4;apply_transformation(c);let o=0,f=0;if(canvas_width>=canvas_height?(o=Math.floor((-y+box_size/2)/box_size*canvas_height),f=Math.floor((x/(canvas_width/canvas_height)+box_size/2)/box_size*canvas_width)):(o=Math.floor((-y*(canvas_width/canvas_height)+box_size/2)/box_size*canvas_height),f=Math.floor((x+box_size/2)/box_size*canvas_width)),o>=0&&o<canvas_height&&f>=0&&f<canvas_width){if(brightness[canvas_width*o+f]===max_pixel_brightness)continue;brightness[canvas_width*o+f]++}search_step(x,y,c,o,f,n+1)}}function apply_transformation(s){let i=coefficients[s][0][0],t=coefficients[s][0][1],e=coefficients[s][1][0],a=coefficients[s][1][1],n=coefficients[s][2][0],h=coefficients[s][2][1],c=coefficients[s][3][0],o=coefficients[s][3][1],f=i*x-t*y+e,r=i*y+t*x+a,l=n*x-h*y+c,g=n*y+h*x+o,b=l*l+g*g;x=(f*l+r*g)/b,y=(r*l-f*g)/b}