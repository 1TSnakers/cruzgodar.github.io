!function(){"use strict";let t={renderer:"gpu",shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio_x;\n\t\tuniform float aspect_ratio_y;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 2.0;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 1000.0;\n\t\tconst int max_marches = 32;\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .2;\n\t\tconst int max_iterations = 24;\n\t\t\n\t\t\n\t\tvec3 color;\n\t\t\n\t\tconst vec3 color_1 = vec3(1.0, 0.0, 0.0);\n\t\tconst vec3 color_2 = vec3(0.0, 1.0, 0.0);\n\t\tconst vec3 color_3 = vec3(0.0, 0.0, 1.0);\n\t\tconst vec3 color_4 = vec3(1.0, 1.0, 0.0);\n\t\t\n\t\t\n\t\t\n\t\tuniform vec3 scale_center;\n\t\t\n\t\tuniform int num_ns;\n\t\t\n\t\tuniform vec3 n1;\n\t\tuniform vec3 n2;\n\t\tuniform vec3 n3;\n\t\tuniform vec3 n4;\n\t\t\n\t\t\n\t\t\n\t\tconst float scale = 2.0;\n\t\t\n\t\t\n\t\t\n\t\tuniform mat3 rotation_matrix_1;\n\t\tuniform mat3 rotation_matrix_2;\n\t\t\n\t\t\n\t\t\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec3 mutable_pos = pos;\n\t\t\t\n\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//We'll find the closest vertex, scale everything by a factor of 2 centered on that vertex (so that we don't need to recalculate the vertices), and repeat.\n\t\t\tfor (int iteration = 0; iteration < max_iterations; iteration++)\n\t\t\t{\n\t\t\t\t//Fold space over on itself so that we can reference only the top vertex.\n\t\t\t\tfloat t1 = dot(mutable_pos, n1);\n\t\t\t\t\n\t\t\t\tif (t1 < 0.0)\n\t\t\t\t{\n\t\t\t\t\tmutable_pos -= 2.0 * t1 * n1;\n\t\t\t\t\t\n\t\t\t\t\tcolor = mix(color, color_1, color_scale);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat t2 = dot(mutable_pos, n2);\n\t\t\t\t\n\t\t\t\tif (t2 < 0.0)\n\t\t\t\t{\n\t\t\t\t\tmutable_pos -= 2.0 * t2 * n2;\n\t\t\t\t\t\n\t\t\t\t\tcolor = mix(color, color_2, color_scale);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat t3 = dot(mutable_pos, n3);\n\t\t\t\t\n\t\t\t\tif (t3 < 0.0)\n\t\t\t\t{\n\t\t\t\t\tmutable_pos -= 2.0 * t3 * n3;\n\t\t\t\t\t\n\t\t\t\t\tcolor = mix(color, color_3, color_scale);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (num_ns >= 4)\n\t\t\t\t{\n\t\t\t\t\tfloat t4 = dot(mutable_pos, n4);\n\t\t\t\t\t\n\t\t\t\t\tif (t4 < 0.0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmutable_pos -= 2.0 * t4 * n4;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcolor = mix(color, color_4, color_scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tmutable_pos = rotation_matrix_1 * mutable_pos;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//Scale the system -- this one takes me a fair bit of thinking to get. What's happening here is that we're stretching from a vertex, but since we never scale the vertices, the four new ones are the four closest to the vertex we scaled from. Now (x, y, z) will get farther and farther away from the origin, but that makes sense -- we're really just zooming in on the tetrahedron.\n\t\t\t\tmutable_pos = scale * mutable_pos - (scale - 1.0) * scale_center;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tmutable_pos = rotation_matrix_2 * mutable_pos;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn length(mutable_pos) * pow(1.0/scale, float(max_iterations));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat base = distance_estimator(pos);\n\t\t\t\n\t\t\tfloat x_step = distance_estimator(pos + vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step = distance_estimator(pos + vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step = distance_estimator(pos + vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step - base, y_step - base, z_step - base));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat dot_product = dot(surface_normal, light_direction);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot_product, -.25 * dot_product);\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tcolor = color * light_intensity * max((1.0 - float(iteration) / float(max_marches)), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\treturn mix(color, fog_color, 1.0 - exp(-distance(pos, camera_pos) * fog_scaling));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 raymarch(vec3 start_pos)\n\t\t{\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = .0000001;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < max_marches; iteration++)\n\t\t\t{\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\tfloat distance = distance_estimator(pos);\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tif (distance / float(image_size) * 3.0 > epsilon)\n\t\t\t\t{\n\t\t\t\t\tepsilon = distance / float(image_size) * 3.0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn final_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\t//Uncomment to use 2x antialiasing.\n\t\t\t//vec3 final_color = (raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size)))) / 4.0;\n\t\t\t\t\n\t\t\tvec3 final_color = raymarch(image_plane_center_pos + right_vec * uv.x * aspect_ratio_x + up_vec * uv.y / aspect_ratio_y);\n\t\t\t\n\t\t\tgl_FragColor = vec4(final_color.xyz, 1.0);\n\t\t}\n\t",canvas_width:500,canvas_height:500,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:Ft,mousedown_callback:qt,touchstart_callback:qt,mousedrag_callback:zt,touchmove_callback:zt,mouseup_callback:Pt,touchend_callback:Pt},n=new Wilson(document.querySelector("#output-canvas"),t);n.render.init_uniforms(["aspect_ratio_x","aspect_ratio_y","image_size","camera_pos","image_plane_center_pos","forward_vec","right_vec","up_vec","focal_length","light_pos","scale_center","n1","n2","n3","n4","num_ns","rotation_matrix_1","rotation_matrix_2"]);let e=!1,o=!1,a=!1,i=!1,r=!1,s=!1,c=!1,l=!1,u=0,m=[0,0,0],f=[0,0,0];const _=.94,h=5e-4;let p=1,d=-1,v=3.2954,g=1.9657,M=0,y=0,x=0,w=0;const b=.94,k=.005,q=5e-4;let z=500,P=500,I=500,C=24;const F=2;let L=[],S=[],E=[],A=[],T=[2.1089,.41345,.95325],N=0,U=2,W=[[0,0,5],[5,5,5],[0,0,5]],j=[[-.57735,0,.816496],[1,0,0],[.707107,0,.707107]],B=[[.288675,-.5,.816496],[0,1,0],[0,.707107,.707107]],D=[[.288675,.5,.816496],[0,0,1],[-.707107,0,.707107]],G=[[],[],[0,-.707107,.707107]],H=[3,3,4],J=[[0,0,1],[.57735,.57735,.57735],[0,0,1]],K=0,O=0,Q=0,R=0,V=0,X=0,Y=0,Z=0,$=0,tt=0,nt=0,et=0,ot=0,at=0,it=0,rt=0,st=0,ct=0,lt=0,ut=document.querySelector("#resolution-input");ut.addEventListener("input",Ft),document.querySelector("#download-button").addEventListener("click",()=>{n.download_frame("a-kaleidoscopic-ifs-fractal.png")});let mt=document.querySelector("#tetrahedron-radio-button"),ft=document.querySelector("#cube-radio-button"),_t=document.querySelector("#octahedron-radio-button");mt.checked=!0,mt.addEventListener("input",()=>{0!==N&&Et(0)}),ft.addEventListener("input",()=>{1!==N&&Et(1)}),_t.addEventListener("input",()=>{2!==N&&Et(2)});let ht=document.querySelector("#rotation-angle-x-1-input"),pt=document.querySelector("#rotation-angle-y-1-input"),dt=document.querySelector("#rotation-angle-z-1-input"),vt=document.querySelector("#rotation-angle-x-2-input"),gt=document.querySelector("#rotation-angle-y-2-input"),Mt=document.querySelector("#rotation-angle-z-2-input"),yt=[ht,pt,dt,vt,gt,Mt];for(let t=0;t<6;t++)yt[t].addEventListener("input",Lt);function xt(t){let l=t-d;if(d=t,0===l)return;n.render.draw_frame();let M=!1;e&&(!function(){let t=.5*Math.sin(Math.PI*lt/120-Math.PI/2)+.5;K=Y+ot*t,O=Z+at*t,Q=$+it*t,R=tt+rt*t,V=nt+st*t,X=et+ct*t;let o=[[Math.cos(Q),-Math.sin(Q),0],[Math.sin(Q),Math.cos(Q),0],[0,0,1]],a=[[Math.cos(O),0,-Math.sin(O)],[0,1,0],[Math.sin(O),0,Math.cos(O)]],i=[[1,0,0],[0,Math.cos(K),-Math.sin(K)],[0,Math.sin(K),Math.cos(K)]],r=kt(kt(o,a),i);n.gl.uniformMatrix3fv(n.uniforms.rotation_matrix_1,!1,[r[0][0],r[1][0],r[2][0],r[0][1],r[1][1],r[2][1],r[0][2],r[1][2],r[2][2]]),o=[[Math.cos(X),-Math.sin(X),0],[Math.sin(X),Math.cos(X),0],[0,0,1]],a=[[Math.cos(V),0,-Math.sin(V)],[0,1,0],[Math.sin(V),0,Math.cos(V)]],i=[[1,0,0],[0,Math.cos(R),-Math.sin(R)],[0,Math.sin(R),Math.cos(R)]],r=kt(kt(o,a),i),n.gl.uniformMatrix3fv(n.uniforms.rotation_matrix_2,!1,[r[0][0],r[1][0],r[2][0],r[0][1],r[1][1],r[2][1],r[0][2],r[1][2],r[2][2]]),121==++lt&&(e=!1)}(),M=!0),(o||a||i||r||s||c)&&(!function(){u=Math.min(Math.max(1e-6,p/20),.02);let t=[...T];o||s?(T[0]+=u*S[0],T[1]+=u*S[1],T[2]+=u*S[2]):(a||c)&&(T[0]-=u*S[0],T[1]-=u*S[1],T[2]-=u*S[2]);i?(T[0]+=u*E[0]/U,T[1]+=u*E[1]/U,T[2]+=u*E[2]/U):r&&(T[0]-=u*E[0]/U,T[1]-=u*E[1]/U,T[2]-=u*E[2]/U);m[0]=T[0]-t[0],m[1]=T[1]-t[1],m[2]=T[2]-t[2],wt()}(),M=!0),0===x&&0===w||(g+=w,(v+=x)>=2*Math.PI?v-=2*Math.PI:v<0&&(v+=2*Math.PI),g>Math.PI-.01?g=Math.PI-.01:g<.01&&(g=.01),x*=b,w*=b,Math.sqrt(x*x+w*w)<q&&(x=0,w=0),wt(),M=!0),0===f[0]&&0===f[1]&&0===f[2]||(T[0]+=f[0],T[1]+=f[1],T[2]+=f[2],f[0]*=_,f[1]*=_,f[2]*=_,Math.sqrt(f[0]*f[0]+f[1]*f[1]+f[2]*f[2])<h*u&&(f[0]=0,f[1]=0,f[2]=0),wt(),M=!0),M&&window.requestAnimationFrame(xt)}function wt(){var t,e;S=[Math.cos(v)*Math.sin(g),Math.sin(v)*Math.sin(g),Math.cos(g)],E=function(t){let n=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/n,t[1]/n,t[2]/n]}([S[1],-S[0],0]),e=S,A=[(t=E)[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]],p=function(t,n,e){for(let o=0;o<C;o++){let o=bt([t,n,e],j[N]);o<0&&(t-=2*o*j[N][0],n-=2*o*j[N][1],e-=2*o*j[N][2]);let a=bt([t,n,e],B[N]);a<0&&(t-=2*a*B[N][0],n-=2*a*B[N][1],e-=2*a*B[N][2]);let i=bt([t,n,e],D[N]);if(i<0&&(t-=2*i*D[N][0],n-=2*i*D[N][1],e-=2*i*D[N][2]),H[N]>=4){let o=bt([t,n,e],G[N]);o<0&&(t-=2*o*G[N][0],n-=2*o*G[N][1],e-=2*o*G[N][2])}let r=t,s=n,c=e,l=[[Math.cos(Q),-Math.sin(Q),0],[Math.sin(Q),Math.cos(Q),0],[0,0,1]],u=[[Math.cos(O),0,-Math.sin(O)],[0,1,0],[Math.sin(O),0,Math.cos(O)]],m=[[1,0,0],[0,Math.cos(K),-Math.sin(K)],[0,Math.sin(K),Math.cos(K)]],f=kt(kt(l,u),m);t=f[0][0]*r+f[0][1]*s+f[0][2]*c,n=f[1][0]*r+f[1][1]*s+f[1][2]*c,e=f[2][0]*r+f[2][1]*s+f[2][2]*c,t=F*t-(F-1)*J[N][0],n=F*n-(F-1)*J[N][1],e=F*e-(F-1)*J[N][2],r=t,s=n,c=e,l=[[Math.cos(X),-Math.sin(X),0],[Math.sin(X),Math.cos(X),0],[0,0,1]],u=[[Math.cos(V),0,-Math.sin(V)],[0,1,0],[Math.sin(V),0,Math.cos(V)]],m=[[1,0,0],[0,Math.cos(R),-Math.sin(R)],[0,Math.sin(R),Math.cos(R)]],f=kt(kt(l,u),m),t=f[0][0]*r+f[0][1]*s+f[0][2]*c,n=f[1][0]*r+f[1][1]*s+f[1][2]*c,e=f[2][0]*r+f[2][1]*s+f[2][2]*c}return Math.sqrt(t*t+n*n+e*e)*Math.pow(F,-C)}(T[0],T[1],T[2]),U=p/2,E[0]*=U/2,E[1]*=U/2,A[0]*=U/2,A[1]*=U/2,A[2]*=U/2,L=[T[0]+U*S[0],T[1]+U*S[1],T[2]+U*S[2]],n.gl.uniform3fv(n.uniforms.camera_pos,T),n.gl.uniform3fv(n.uniforms.image_plane_center_pos,L),n.gl.uniform3fv(n.uniforms.forward_vec,S),n.gl.uniform3fv(n.uniforms.right_vec,E),n.gl.uniform3fv(n.uniforms.up_vec,A),n.gl.uniform1f(n.uniforms.focal_length,U)}function bt(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function kt(t,n){return[[t[0][0]*n[0][0]+t[0][1]*n[1][0]+t[0][2]*n[2][0],t[0][0]*n[0][1]+t[0][1]*n[1][1]+t[0][2]*n[2][1],t[0][0]*n[0][2]+t[0][1]*n[1][2]+t[0][2]*n[2][2]],[t[1][0]*n[0][0]+t[1][1]*n[1][0]+t[1][2]*n[2][0],t[1][0]*n[0][1]+t[1][1]*n[1][1]+t[1][2]*n[2][1],t[1][0]*n[0][2]+t[1][1]*n[1][2]+t[1][2]*n[2][2]],[t[2][0]*n[0][0]+t[2][1]*n[1][0]+t[2][2]*n[2][0],t[2][0]*n[0][1]+t[2][1]*n[1][1]+t[2][2]*n[2][1],t[2][0]*n[0][2]+t[2][1]*n[1][2]+t[2][2]*n[2][2]]]}function qt(t,n,e){M=0,y=0,x=0,w=0,"touchstart"===e.type&&(2===e.touches.length?(s=!0,c=!1,f[0]=0,f[1]=0,f[2]=0,m[0]=0,m[1]=0,m[2]=0,window.requestAnimationFrame(xt)):3===e.touches.length?(s=!1,c=!0,f[0]=0,f[1]=0,f[2]=0,m[0]=0,m[1]=0,m[2]=0,window.requestAnimationFrame(xt)):(s=!1,c=!1),l=!1)}function zt(t,n,e,o,a){"touchmove"===a.type&&l?l=!1:(v+=e*Math.PI/2,M=e*Math.PI/2,v>=2*Math.PI?v-=2*Math.PI:v<0&&(v+=2*Math.PI),g+=o*Math.PI/2,y=o*Math.PI/2,g>Math.PI-.01?g=Math.PI-.01:g<.01&&(g=.01),wt(),window.requestAnimationFrame(xt))}function Pt(t,n,e){"touchend"===e.type&&(s=!1,c=!1,l=!0,0===f[0]&&0===f[1]&&0===f[2]&&(f[0]=m[0],f[1]=m[1],f[2]=m[2],m[0]=0,m[1]=0,m[2]=0)),"touchend"===e.type&&e.touches,(0===length||"mouseup"===e.type)&&Math.sqrt(M*M+y*y)>=k&&(x=M,w=y)}function It(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode||(m=[0,0,0],f=[0,0,0],87===t.keyCode?o=!0:83===t.keyCode&&(a=!0),68===t.keyCode?i=!0:65===t.keyCode&&(r=!0),window.requestAnimationFrame(xt))}function Ct(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode||(0===f[0]&&0===f[1]&&0===f[2]&&(f[0]=m[0],f[1]=m[1],f[2]=m[2],m[0]=0,m[1]=0,m[2]=0),87===t.keyCode?o=!1:83===t.keyCode&&(a=!1),68===t.keyCode?i=!1:65===t.keyCode&&(r=!1))}function Ft(){z=Math.max(100,parseInt(ut.value||500)),n.fullscreen.currently_fullscreen?Page.Layout.aspect_ratio>=1?(P=z,I=Math.floor(z/Page.Layout.aspect_ratio)):(P=Math.floor(z*Page.Layout.aspect_ratio),I=z):(P=z,I=z),n.change_canvas_size(P,I),P>=I?(n.gl.uniform1f(n.uniforms.aspect_ratio_x,P/I),n.gl.uniform1f(n.uniforms.aspect_ratio_y,1)):(n.gl.uniform1f(n.uniforms.aspect_ratio_x,1),n.gl.uniform1f(n.uniforms.aspect_ratio_y,P/I)),n.gl.uniform1i(n.uniforms.image_size,z),window.requestAnimationFrame(xt)}function Lt(){Y=K,Z=O,$=Q,tt=R,nt=V,et=X,ot=(parseFloat(ht.value||0)||0)-Y,at=(parseFloat(pt.value||0)||0)-Z,it=(parseFloat(dt.value||0)||0)-$,rt=(parseFloat(vt.value||0)||0)-tt,st=(parseFloat(gt.value||0)||0)-nt,ct=(parseFloat(Mt.value||0)||0)-et,St()}function St(){e||(e=!0,lt=0,window.requestAnimationFrame(xt))}function Et(t){n.canvas.classList.add("animated-opacity"),n.canvas.style.opacity=0,setTimeout(()=>{N=t,n.gl.uniform3fv(n.uniforms.light_pos,W[N]),n.gl.uniform3fv(n.uniforms.scale_center,J[N]),n.gl.uniform3fv(n.uniforms.n1,j[N]),n.gl.uniform3fv(n.uniforms.n2,B[N]),n.gl.uniform3fv(n.uniforms.n3,D[N]),n.gl.uniform3fv(n.uniforms.n4,G[N]),n.gl.uniform1i(n.uniforms.num_ns,H[N]),window.requestAnimationFrame(xt),n.canvas.style.opacity=1,setTimeout(()=>{n.canvas.classList.remove("animated-opacity")})},300)}document.querySelector("#randomize-parameters-button").addEventListener("click",function(t=!0){if(e)return;Y=K,Z=O,$=Q,tt=R,nt=V,et=X,ot=.375*Math.random()-.1875-Y,at=.375*Math.random()-.1875-Z,it=.75*Math.random()-.375-$,rt=.375*Math.random()-.1875-tt,st=.375*Math.random()-.1875-nt,ct=.75*Math.random()-.375-et,ht.value=Math.round(1e6*(Y+ot))/1e6,pt.value=Math.round(1e6*(Z+at))/1e6,dt.value=Math.round(1e6*($+it))/1e6,vt.value=Math.round(1e6*(tt+rt))/1e6,gt.value=Math.round(1e6*(nt+st))/1e6,Mt.value=Math.round(1e6*(et+ct))/1e6,t?St():(K=Y+ot,O=Z+at,Q=$+it,R=tt+rt,V=nt+st,X=et+ct)}),wt(),P>=I?(n.gl.uniform1f(n.uniforms.aspect_ratio_x,P/I),n.gl.uniform1f(n.uniforms.aspect_ratio_y,1)):(n.gl.uniform1f(n.uniforms.aspect_ratio_x,1),n.gl.uniform1f(n.uniforms.aspect_ratio_y,P/I)),n.gl.uniform1i(n.uniforms.image_size,z),n.gl.uniform3fv(n.uniforms.camera_pos,T),n.gl.uniform3fv(n.uniforms.image_plane_center_pos,L),n.gl.uniform3fv(n.uniforms.light_pos,W[N]),n.gl.uniform3fv(n.uniforms.scale_center,J[N]),n.gl.uniform3fv(n.uniforms.forward_vec,S),n.gl.uniform3fv(n.uniforms.right_vec,E),n.gl.uniform3fv(n.uniforms.up_vec,A),n.gl.uniform1f(n.uniforms.focal_length,U),n.gl.uniform3fv(n.uniforms.n1,j[N]),n.gl.uniform3fv(n.uniforms.n2,B[N]),n.gl.uniform3fv(n.uniforms.n3,D[N]),n.gl.uniform3fv(n.uniforms.n4,G[N]),n.gl.uniform1i(n.uniforms.num_ns,H[N]),n.gl.uniformMatrix3fv(n.uniforms.rotation_matrix_1,!1,[1,0,0,0,1,0,0,0,1]),n.gl.uniformMatrix3fv(n.uniforms.rotation_matrix_2,!1,[1,0,0,0,1,0,0,0,1]),window.requestAnimationFrame(xt),document.documentElement.addEventListener("keydown",It),Page.temporary_handlers.keydown.push(It),document.documentElement.addEventListener("keyup",Ct),Page.temporary_handlers.keydown.push(Ct)}();