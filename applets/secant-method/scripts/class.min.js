"use strict";class SecantMethod extends Applet{wilsonHidden=null;rootSetterElement=null;rootAInputElement=null;rootBInputElement=null;colorSetterElement=null;a=[1,0];c=[0,0];colors=[];currentRoots=[];lastActiveRoot=0;numRoots=0;aspectRatio=1;numIterations=100;pastBrightnessScales=[];resolution=500;resolutionHidden=100;lastTimestamp=-1;constructor(t,s,i,o,e){super(t),this.rootSetterElement=s,this.rootAInputElement=i,this.rootBInputElement=o,this.colorSetterElement=e;let n=this.createHiddenCanvas(),r=`
   precision highp float;
   
   varying vec2 uv;
   
   uniform float aspectRatio;
   
   uniform float worldCenterX;
   uniform float worldCenterY;
   uniform float worldSize;
   
   uniform int numRoots;
   
   uniform vec2 roots[11];
   
   uniform vec3 colors[11];
   
   uniform vec2 a;
   uniform vec2 c;
   
   uniform float brightnessScale;
   
   const float threshhold = .05;
   
   
   
   //Returns z1 * z2.
   vec2 cmul(vec2 z1, vec2 z2)
   {
    return vec2(z1.x * z2.x - z1.y * z2.y, z1.x * z2.y + z1.y * z2.x);
   }
   
   
   
   //Returns 1/z.
   vec2 cinv(vec2 z)
   {
    float magnitude = z.x*z.x + z.y*z.y;
    
    return vec2(z.x / magnitude, -z.y / magnitude);
   }
   
   
   
   //Returns f(z) for a polynomial f with given roots.
   vec2 cpoly(vec2 z)
   {
    vec2 result = vec2(1.0, 0.0);
    
    for (int i = 0; i <= 11; i++)
    {
     if (i == numRoots)
     {
      return result;
     }
     
     result = cmul(result, z - roots[i]);
    }
   }
   
   
   
   //Approximates f'(z) for a polynomial f with given roots.
   vec2 cderiv(vec2 z)
   {
    return 20.0 * (cpoly(z + vec2(.025, 0.0)) - cpoly(z - vec2(.025, 0.0)));
   }
   
   
   
   void main(void)
   {
    vec2 z;
    vec2 lastZ = vec2(0.0, 0.0);
    
    if (aspectRatio >= 1.0)
    {
     z = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);
    }
    
    else
    {
     z = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);
    }
    
    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
    
    
    
    for (int iteration = 0; iteration < 100; iteration++)
    {
     vec2 temp = cmul(cmul(cpoly(z), cmul(z - lastZ, cinv(cpoly(z) - cpoly(lastZ)))), a) + c;
     
     lastZ = z;
     
     z -= temp;
     
     
     
     for (int i = 0; i <= 11; i++)
     {
      if (i == numRoots)
      {
       break;
      }
      
      float d0 = length(z - roots[i]);
      
      if (d0 < threshhold)
      {
       float d1 = length(lastZ - roots[i]);
       
       float brightnessAdjust = (log(threshhold) - log(d0)) / (log(d1) - log(d0));
       
       float brightness = 1.0 - (float(iteration) - brightnessAdjust) / brightnessScale;
       
       gl_FragColor = vec4(colors[i] * brightness, 1.0);
       
       return;
      }
     }
    }
   }
  `,l={renderer:"gpu",shader:r,canvasWidth:500,canvasHeight:500,worldWidth:10,worldHeight:10,worldCenterX:0,worldCenterY:0,useDraggables:!0,draggablesMousemoveCallback:this.onDragDraggable.bind(this),draggablesTouchmoveCallback:this.onDragDraggable.bind(this),draggablesMouseupCallback:this.onReleaseDraggable.bind(this),draggablesTouchendCallback:this.onReleaseDraggable.bind(this),useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:this.changeAspectRatio.bind(this,!0),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),touchendCallback:this.onReleaseCanvas.bind(this),wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this)},a={renderer:"gpu",shader:r,canvasWidth:this.resolutionHidden,canvasHeight:this.resolutionHidden};this.wilson=new Wilson(t,l),this.wilson.render.initUniforms(["aspectRatio","worldCenterX","worldCenterY","worldSize","numRoots","roots","colors","a","c","brightnessScale"]),this.wilsonHidden=new Wilson(n,a),this.wilsonHidden.render.initUniforms(["aspectRatio","worldCenterX","worldCenterY","worldSize","numRoots","roots","colors","a","c","brightnessScale"]);let h=this.changeAspectRatio.bind(this,!0,[this.wilson]);window.addEventListener("resize",h),Page.temporaryHandlers.resize.push(h);let d=this.wilson.draggables.add(1,0);d.classList.add("a-marker"),(d=this.wilson.draggables.add(0,0)).classList.add("c-marker"),this.addRoot(),this.addRoot(),this.addRoot(),this.spreadRoots(!0),this.zoom.init(),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,1),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,1),this.colors=[216/255,1/255,42/255,1,139/255,56/255,249/255,239/255,20/255,27/255,181/255,61/255,0,86/255,195/255,154/255,82/255,164/255,32/255,32/255,32/255,155/255,92/255,15/255,182/255,228/255,254/255,250/255,195/255,218/255,1,1,1],this.wilson.gl.uniform3fv(this.wilson.uniforms.colors,this.colors),this.wilsonHidden.gl.uniform3fv(this.wilsonHidden.uniforms.colors,this.colors),window.requestAnimationFrame(this.drawFrame.bind(this))}addRoot(){if(11===this.numRoots)return;let t=3*Math.random()-1.5,s=3*Math.random()-1.5;this.wilson.draggables.add(t,s),this.currentRoots.push(t),this.currentRoots.push(s),this.numRoots++}removeRoot(){1!==this.numRoots&&(this.numRoots--,this.currentRoots.pop(),this.currentRoots.pop(),this.wilson.draggables.draggables[this.numRoots+2].remove(),this.wilson.draggables.draggables.pop(),this.wilson.draggables.worldCoordinates.pop(),this.wilson.draggables.numDraggables--)}spreadRoots(t=!1,s=!1){let i=[...this.currentRoots],o=Array(2*this.numRoots);for(let e=0;e<this.numRoots;e++){let n=1+.75*s*Math.random();o[2*e]=n*Math.cos(2*Math.PI*e/this.numRoots),o[2*e+1]=n*Math.sin(2*Math.PI*e/this.numRoots)}let r={t:0};anime({targets:r,t:1,duration:1e3*!t,easing:"easeInOutQuad",update:()=>{for(let t=0;t<this.numRoots;t++)this.currentRoots[2*t]=(1-r.t)*i[2*t]+r.t*o[2*t],this.currentRoots[2*t+1]=(1-r.t)*i[2*t+1]+r.t*o[2*t+1],this.wilson.draggables.worldCoordinates[t+2]=[this.currentRoots[2*t],this.currentRoots[2*t+1]]},complete:()=>{for(let t=0;t<this.numRoots;t++)this.currentRoots[2*t]=o[2*t],this.currentRoots[2*t+1]=o[2*t+1],this.wilson.draggables.worldCoordinates[t+2]=[this.currentRoots[2*t],this.currentRoots[2*t+1]]}})}setRoot(t,s){0===this.lastActiveRoot?(this.a[0]=t,this.a[1]=s,this.wilson.draggables.worldCoordinates[0]=[this.a[0],this.a[1]]):1===this.lastActiveRoot?(this.c[0]=t,this.c[1]=s,this.wilson.draggables.worldCoordinates[1]=[this.c[0],this.c[1]]):(this.currentRoots[2*(this.lastActiveRoot-2)]=t,this.currentRoots[2*(this.lastActiveRoot-2)+1]=s,this.wilson.draggables.worldCoordinates[this.lastActiveRoot-2]=[this.currentRoots[2*(this.lastActiveRoot-2)],this.currentRoots[2*(this.lastActiveRoot-2)+1]]),this.wilson.draggables.recalculateLocations()}setColor(t){if(this.lastActiveRoot<2)return;let s=this.lastActiveRoot-2,i=this.hexToRgb(t),o=i.r/255,e=i.g/255,n=i.b/255;i.r=this.colors[3*s],i.g=this.colors[3*s+1],i.b=this.colors[3*s+2],anime({targets:i,r:o,g:e,b:n,easing:"easeInOutQuad",duration:250,update:()=>{this.colors[3*s]=i.r,this.colors[3*s+1]=i.g,this.colors[3*s+2]=i.b,this.wilson.gl.uniform3fv(this.wilson.uniforms.colors,this.colors),this.wilsonHidden.gl.uniform3fv(this.wilsonHidden.uniforms.colors,this.colors)}})}onDragDraggable(t,s,i,o){0===t?this.a=[s,i]:1===t?this.c=[s,i]:(this.currentRoots[2*(t-2)]=s,this.currentRoots[2*(t-2)+1]=i)}async onReleaseDraggable(t,s,i,o){this.lastActiveRoot=t;try{if(Page.Animate.changeOpacity(this.rootSetterElement,0,Site.opacityAnimationTime),await Page.Animate.changeOpacity(this.colorSetterElement,0,Site.opacityAnimationTime),0===this.lastActiveRoot)this.rootAInputElement.value=Math.round(1e3*this.a[0])/1e3,this.rootBInputElement.value=Math.round(1e3*this.a[1])/1e3;else if(1===this.lastActiveRoot)this.rootAInputElement.value=Math.round(1e3*this.c[0])/1e4,this.rootBInputElement.value=Math.round(1e3*this.c[1])/1e4;else{let e=this.lastActiveRoot-2;this.rootAInputElement.value=Math.round(1e3*this.currentRoots[2*e])/1e3,this.rootBInputElement.value=Math.round(1e3*this.currentRoots[2*e+1])/1e3,this.colorSetterElement.value=this.rgbToHex(255*this.colors[3*e],255*this.colors[3*e+1],255*this.colors[3*e+2])}Page.Animate.changeOpacity(this.rootSetterElement,1,Site.opacityAnimationTime),Page.Animate.changeOpacity(this.colorSetterElement,1,Site.opacityAnimationTime)}catch(n){}}drawFrame(t){let s=t-this.lastTimestamp;if(this.lastTimestamp=t,0===s)return;this.wilson.draggables.recalculateLocations(),this.pan.update(),this.zoom.update(),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,this.aspectRatio),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterX,this.wilson.worldCenterX),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterY,this.wilson.worldCenterY),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2),this.wilsonHidden.gl.uniform1i(this.wilsonHidden.uniforms.numRoots,this.numRoots),this.wilsonHidden.gl.uniform2fv(this.wilsonHidden.uniforms.roots,this.currentRoots),this.wilsonHidden.gl.uniform2fv(this.wilsonHidden.uniforms.a,this.a),this.wilsonHidden.gl.uniform2f(this.wilsonHidden.uniforms.c,this.c[0]/10,this.c[1]/10),this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.brightnessScale,30),this.wilsonHidden.render.drawFrame();let i=this.wilsonHidden.render.getPixelData(),o=Array(this.resolutionHidden*this.resolutionHidden);for(let e=0;e<this.resolutionHidden*this.resolutionHidden;e++)o[e]=Math.max(Math.max(i[4*e],i[4*e+1]),i[4*e+2]);o.sort((t,s)=>t-s);let n=Math.min(1e4/(o[Math.floor(this.resolutionHidden*this.resolutionHidden*.96)]+o[Math.floor(this.resolutionHidden*this.resolutionHidden*.98)]),200);this.pastBrightnessScales.push(n);let r=this.pastBrightnessScales.length;r>10&&this.pastBrightnessScales.shift(),n=Math.max(this.pastBrightnessScales.reduce((t,s)=>t+s)/r,.5),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,this.aspectRatio),this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterX,this.wilson.worldCenterX),this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterY,this.wilson.worldCenterY),this.wilson.gl.uniform1f(this.wilson.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2),this.wilson.gl.uniform1i(this.wilson.uniforms.numRoots,this.numRoots),this.wilson.gl.uniform2fv(this.wilson.uniforms.roots,this.currentRoots),this.wilson.gl.uniform2fv(this.wilson.uniforms.a,this.a),this.wilson.gl.uniform2f(this.wilson.uniforms.c,this.c[0]/10,this.c[1]/10),this.wilson.gl.uniform1f(this.wilson.uniforms.brightnessScale,n),this.wilson.render.drawFrame(),this.animationPaused||window.requestAnimationFrame(this.drawFrame.bind(this))}hexToRgb(t){let s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return s?{r:parseInt(s[1],16),g:parseInt(s[2],16),b:parseInt(s[3],16)}:null}componentToHex(t){let s=Math.floor(t).toString(16);return 1==s.length?"0"+s:s}rgbToHex(t,s,i){return"#"+this.componentToHex(t)+this.componentToHex(s)+this.componentToHex(i)}}