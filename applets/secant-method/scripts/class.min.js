class SecantMethod extends Applet{wilsonHidden=null;rootSetterElement=null;rootAInputElement=null;rootBInputElement=null;colorSetterElement=null;a=[1,0];c=[0,0];colors=[];currentRoots=[];lastActiveRoot=0;numRoots=0;aspectRatio=1;numIterations=100;pastBrightnessScales=[];resolution=500;resolutionHidden=100;lastTimestamp=-1;constructor(a,c,b,e,f){super(a);this.rootSetterElement=c;this.rootAInputElement=b;this.rootBInputElement=e;this.colorSetterElement=f;c=this.createHiddenCanvas();b={renderer:"gpu",
shader:"\n\t\t\tprecision highp float;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform float aspectRatio;\n\t\t\t\n\t\t\tuniform float worldCenterX;\n\t\t\tuniform float worldCenterY;\n\t\t\tuniform float worldSize;\n\t\t\t\n\t\t\tuniform int numRoots;\n\t\t\t\n\t\t\tuniform vec2 roots[11];\n\t\t\t\n\t\t\tuniform vec3 colors[11];\n\t\t\t\n\t\t\tuniform vec2 a;\n\t\t\tuniform vec2 c;\n\t\t\t\n\t\t\tuniform float brightnessScale;\n\t\t\t\n\t\t\tconst float threshhold = .05;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Returns z1 * z2.\n\t\t\tvec2 cmul(vec2 z1, vec2 z2)\n\t\t\t{\n\t\t\t\treturn vec2(z1.x * z2.x - z1.y * z2.y, z1.x * z2.y + z1.y * z2.x);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Returns 1/z.\n\t\t\tvec2 cinv(vec2 z)\n\t\t\t{\n\t\t\t\tfloat magnitude = z.x*z.x + z.y*z.y;\n\t\t\t\t\n\t\t\t\treturn vec2(z.x / magnitude, -z.y / magnitude);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Returns f(z) for a polynomial f with given roots.\n\t\t\tvec2 cpoly(vec2 z)\n\t\t\t{\n\t\t\t\tvec2 result = vec2(1.0, 0.0);\n\t\t\t\t\n\t\t\t\tfor (int i = 0; i <= 11; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i == numRoots)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult = cmul(result, z - roots[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 z;\n\t\t\t\tvec2 lastZ = vec2(0.0, 0.0);\n\t\t\t\t\n\t\t\t\tif (aspectRatio >= 1.0)\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t\t{\n\t\t\t\t\tvec2 temp = cmul(cmul(cpoly(z), cmul(z - lastZ, cinv(cpoly(z) - cpoly(lastZ)))), a) + c;\n\t\t\t\t\t\n\t\t\t\t\tlastZ = z;\n\t\t\t\t\t\n\t\t\t\t\tz -= temp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tfor (int i = 0; i <= 11; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (i == numRoots)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat d0 = length(z - roots[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (d0 < threshhold)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfloat d1 = length(lastZ - roots[i]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfloat brightnessAdjust = (log(threshhold) - log(d0)) / (log(d1) - log(d0));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightnessAdjust) / brightnessScale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgl_FragColor = vec4(colors[i] * brightness, 1.0);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t",
canvasWidth:500,canvasHeight:500,worldWidth:10,worldHeight:10,worldCenterX:0,worldCenterY:0,useDraggables:!0,draggablesMousemoveCallback:this.onDragDraggable.bind(this),draggablesTouchmoveCallback:this.onDragDraggable.bind(this),draggablesMouseupCallback:this.onReleaseDraggable.bind(this),draggablesTouchendCallback:this.onReleaseDraggable.bind(this),useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",
switchFullscreenCallback:()=>this.changeAspectRatio(!0),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),touchendCallback:this.onReleaseCanvas.bind(this),wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this)};e={renderer:"gpu",shader:"\n\t\t\tprecision highp float;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform float aspectRatio;\n\t\t\t\n\t\t\tuniform float worldCenterX;\n\t\t\tuniform float worldCenterY;\n\t\t\tuniform float worldSize;\n\t\t\t\n\t\t\tuniform int numRoots;\n\t\t\t\n\t\t\tuniform vec2 roots[11];\n\t\t\t\n\t\t\tuniform vec3 colors[11];\n\t\t\t\n\t\t\tuniform vec2 a;\n\t\t\tuniform vec2 c;\n\t\t\t\n\t\t\tuniform float brightnessScale;\n\t\t\t\n\t\t\tconst float threshhold = .05;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Returns z1 * z2.\n\t\t\tvec2 cmul(vec2 z1, vec2 z2)\n\t\t\t{\n\t\t\t\treturn vec2(z1.x * z2.x - z1.y * z2.y, z1.x * z2.y + z1.y * z2.x);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Returns 1/z.\n\t\t\tvec2 cinv(vec2 z)\n\t\t\t{\n\t\t\t\tfloat magnitude = z.x*z.x + z.y*z.y;\n\t\t\t\t\n\t\t\t\treturn vec2(z.x / magnitude, -z.y / magnitude);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Returns f(z) for a polynomial f with given roots.\n\t\t\tvec2 cpoly(vec2 z)\n\t\t\t{\n\t\t\t\tvec2 result = vec2(1.0, 0.0);\n\t\t\t\t\n\t\t\t\tfor (int i = 0; i <= 11; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i == numRoots)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult = cmul(result, z - roots[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 z;\n\t\t\t\tvec2 lastZ = vec2(0.0, 0.0);\n\t\t\t\t\n\t\t\t\tif (aspectRatio >= 1.0)\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tz = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t\t{\n\t\t\t\t\tvec2 temp = cmul(cmul(cpoly(z), cmul(z - lastZ, cinv(cpoly(z) - cpoly(lastZ)))), a) + c;\n\t\t\t\t\t\n\t\t\t\t\tlastZ = z;\n\t\t\t\t\t\n\t\t\t\t\tz -= temp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tfor (int i = 0; i <= 11; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (i == numRoots)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfloat d0 = length(z - roots[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (d0 < threshhold)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfloat d1 = length(lastZ - roots[i]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfloat brightnessAdjust = (log(threshhold) - log(d0)) / (log(d1) - log(d0));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfloat brightness = 1.0 - (float(iteration) - brightnessAdjust) / brightnessScale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgl_FragColor = vec4(colors[i] * brightness, 1.0);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t",
canvasWidth:this.resolutionHidden,canvasHeight:this.resolutionHidden};this.wilson=new Wilson(a,b);this.wilson.render.initUniforms("aspectRatio worldCenterX worldCenterY worldSize numRoots roots colors a c brightnessScale".split(" "));this.wilsonHidden=new Wilson(c,e);this.wilsonHidden.render.initUniforms("aspectRatio worldCenterX worldCenterY worldSize numRoots roots colors a c brightnessScale".split(" "));a=()=>this.changeAspectRatio();window.addEventListener("resize",a);this.handlers.push(window,
"resize",a);a=this.wilson.draggables.add(1,0);a.classList.add("a-marker");a=this.wilson.draggables.add(0,0);a.classList.add("c-marker");this.addRoot();this.addRoot();this.addRoot();this.spreadRoots(!0);this.zoom.init();this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,1);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,1);this.colors=[216/255,1/255,42/255,1,139/255,56/255,249/255,239/255,20/255,27/255,181/255,61/255,0,86/255,195/255,154/255,82/255,164/255,32/255,32/255,
32/255,155/255,92/255,15/255,182/255,228/255,254/255,250/255,195/255,218/255,1,1,1];this.wilson.gl.uniform3fv(this.wilson.uniforms.colors,this.colors);this.wilsonHidden.gl.uniform3fv(this.wilsonHidden.uniforms.colors,this.colors);window.requestAnimationFrame(this.drawFrame.bind(this))}addRoot(){if(11!==this.numRoots){var a=3*Math.random()-1.5,c=3*Math.random()-1.5;this.wilson.draggables.add(a,c);this.currentRoots.push(a);this.currentRoots.push(c);this.numRoots++}}removeRoot(){1!==this.numRoots&&(this.numRoots--,
this.currentRoots.pop(),this.currentRoots.pop(),this.wilson.draggables.draggables[this.numRoots+2].remove(),this.wilson.draggables.draggables.pop(),this.wilson.draggables.worldCoordinates.pop(),this.wilson.draggables.numDraggables--)}spreadRoots(a=!1,c=!1){const b=[...this.currentRoots];let e=Array(2*this.numRoots);for(let d=0;d<this.numRoots;d++){const g=1+.75*c*Math.random();e[2*d]=g*Math.cos(2*Math.PI*d/this.numRoots);e[2*d+1]=g*Math.sin(2*Math.PI*d/this.numRoots)}let f={t:0};anime({targets:f,
t:1,duration:1E3*!a,easing:"easeInOutQuad",update:()=>{for(let d=0;d<this.numRoots;d++)this.currentRoots[2*d]=(1-f.t)*b[2*d]+f.t*e[2*d],this.currentRoots[2*d+1]=(1-f.t)*b[2*d+1]+f.t*e[2*d+1],this.wilson.draggables.worldCoordinates[d+2]=[this.currentRoots[2*d],this.currentRoots[2*d+1]]},complete:()=>{for(let d=0;d<this.numRoots;d++)this.currentRoots[2*d]=e[2*d],this.currentRoots[2*d+1]=e[2*d+1],this.wilson.draggables.worldCoordinates[d+2]=[this.currentRoots[2*d],this.currentRoots[2*d+1]]}})}setRoot(a,
c){0===this.lastActiveRoot?(this.a[0]=a,this.a[1]=c,this.wilson.draggables.worldCoordinates[0]=[this.a[0],this.a[1]]):1===this.lastActiveRoot?(this.c[0]=a,this.c[1]=c,this.wilson.draggables.worldCoordinates[1]=[this.c[0],this.c[1]]):(this.currentRoots[2*(this.lastActiveRoot-2)]=a,this.currentRoots[2*(this.lastActiveRoot-2)+1]=c,this.wilson.draggables.worldCoordinates[this.lastActiveRoot-2]=[this.currentRoots[2*(this.lastActiveRoot-2)],this.currentRoots[2*(this.lastActiveRoot-2)+1]]);this.wilson.draggables.recalculateLocations()}setColor(a){if(!(2>
this.lastActiveRoot)){var c=this.lastActiveRoot-2,b=this.hexToRgb(a);a=b.r/255;var e=b.g/255,f=b.b/255;b.r=this.colors[3*c];b.g=this.colors[3*c+1];b.b=this.colors[3*c+2];anime({targets:b,r:a,g:e,b:f,easing:"easeInOutQuad",duration:250,update:()=>{this.colors[3*c]=b.r;this.colors[3*c+1]=b.g;this.colors[3*c+2]=b.b;this.wilson.gl.uniform3fv(this.wilson.uniforms.colors,this.colors);this.wilsonHidden.gl.uniform3fv(this.wilsonHidden.uniforms.colors,this.colors)}})}}onDragDraggable(a,c,b,e){0===a?this.a=
[c,b]:1===a?this.c=[c,b]:(this.currentRoots[2*(a-2)]=c,this.currentRoots[2*(a-2)+1]=b)}async onReleaseDraggable(a,c,b,e){this.lastActiveRoot=a;try{Page.Animate.changeOpacity(this.rootSetterElement,0,Site.opacityAnimationTime);await Page.Animate.changeOpacity(this.colorSetterElement,0,Site.opacityAnimationTime);if(0===this.lastActiveRoot)this.rootAInputElement.value=Math.round(1E3*this.a[0])/1E3,this.rootBInputElement.value=Math.round(1E3*this.a[1])/1E3;else if(1===this.lastActiveRoot)this.rootAInputElement.value=
Math.round(1E3*this.c[0])/1E4,this.rootBInputElement.value=Math.round(1E3*this.c[1])/1E4;else{const f=this.lastActiveRoot-2;this.rootAInputElement.value=Math.round(1E3*this.currentRoots[2*f])/1E3;this.rootBInputElement.value=Math.round(1E3*this.currentRoots[2*f+1])/1E3;this.colorSetterElement.value=this.rgbToHex(255*this.colors[3*f],255*this.colors[3*f+1],255*this.colors[3*f+2])}Page.Animate.changeOpacity(this.rootSetterElement,1,Site.opacityAnimationTime);Page.Animate.changeOpacity(this.colorSetterElement,
1,Site.opacityAnimationTime)}catch(f){}}drawFrame(a){var c=a-this.lastTimestamp;this.lastTimestamp=a;if(0!==c){this.wilson.draggables.recalculateLocations();this.pan.update();this.zoom.update();this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.aspectRatio,this.aspectRatio);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterX,this.wilson.worldCenterX);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldCenterY,this.wilson.worldCenterY);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.worldSize,
Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2);this.wilsonHidden.gl.uniform1i(this.wilsonHidden.uniforms.numRoots,this.numRoots);this.wilsonHidden.gl.uniform2fv(this.wilsonHidden.uniforms.roots,this.currentRoots);this.wilsonHidden.gl.uniform2fv(this.wilsonHidden.uniforms.a,this.a);this.wilsonHidden.gl.uniform2f(this.wilsonHidden.uniforms.c,this.c[0]/10,this.c[1]/10);this.wilsonHidden.gl.uniform1f(this.wilsonHidden.uniforms.brightnessScale,30);this.wilsonHidden.render.drawFrame();a=this.wilsonHidden.render.getPixelData();
c=Array(this.resolutionHidden*this.resolutionHidden);for(let b=0;b<this.resolutionHidden*this.resolutionHidden;b++)c[b]=Math.max(Math.max(a[4*b],a[4*b+1]),a[4*b+2]);c.sort((b,e)=>b-e);a=Math.min(1E4/(c[Math.floor(this.resolutionHidden*this.resolutionHidden*.96)]+c[Math.floor(this.resolutionHidden*this.resolutionHidden*.98)]),200);this.pastBrightnessScales.push(a);a=this.pastBrightnessScales.length;10<a&&this.pastBrightnessScales.shift();a=Math.max(this.pastBrightnessScales.reduce((b,e)=>b+e)/a,.5);
this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,this.aspectRatio);this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterX,this.wilson.worldCenterX);this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterY,this.wilson.worldCenterY);this.wilson.gl.uniform1f(this.wilson.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2);this.wilson.gl.uniform1i(this.wilson.uniforms.numRoots,this.numRoots);this.wilson.gl.uniform2fv(this.wilson.uniforms.roots,this.currentRoots);
this.wilson.gl.uniform2fv(this.wilson.uniforms.a,this.a);this.wilson.gl.uniform2f(this.wilson.uniforms.c,this.c[0]/10,this.c[1]/10);this.wilson.gl.uniform1f(this.wilson.uniforms.brightnessScale,a);this.wilson.render.drawFrame();this.animationPaused||window.requestAnimationFrame(this.drawFrame.bind(this))}}hexToRgb(a){return(a=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a))?{r:parseInt(a[1],16),g:parseInt(a[2],16),b:parseInt(a[3],16)}:null}componentToHex(a){a=Math.floor(a).toString(16);return 1==
a.length?"0"+a:a}rgbToHex(a,c,b){return"#"+this.componentToHex(a)+this.componentToHex(c)+this.componentToHex(b)}};
