"use strict";onmessage=function(e){grid_size=e.data[0],max_cage_size=e.data[1],generate_magic_carpet()};let grid_size=null,max_cage_size=null,cages=[],cages_by_location=[],num_solutions_found=0;function generate_magic_carpet(){cages=[],cages_by_location=[],initialize_grid();let e=JSON.parse(JSON.stringify(cages)),s=JSON.parse(JSON.stringify(cages_by_location));for(;;){let i=!1,g=shuffle_array([...Array(cages.length).keys()]);g.sort((e,s)=>cages[e][2]*cages[e][3]-cages[s][2]*cages[s][3]);for(let a=0;a<g.length;a++){let t=g[a];if(expand_cage(t)){for(let r=0;r<g.length;r++)g[r]>=cages.length&&g[r]--;1!==(num_solutions_found=solve_puzzle())?(cages=JSON.parse(JSON.stringify(e)),cages_by_location=JSON.parse(JSON.stringify(s)),num_solutions_found=1):(i=!0,e=JSON.parse(JSON.stringify(cages)),s=JSON.parse(JSON.stringify(cages_by_location)))}}if(!i||cages.length<=grid_size){postMessage([cages.sort((e,s)=>s[3]*grid_size+s[2]-(e[3]*grid_size+e[2]))]);return}}}function print_grid(){let e="",s=Array(grid_size);for(let i=0;i<grid_size;i++){s[i]=Array(grid_size);for(let g=0;g<grid_size;g++)s[i][g]=0}for(let a=0;a<cages.length;a++){let t=cages[a][0]+cages[a][4],r=cages[a][1]+cages[a][5];s[t][r]=cages[a][2]*cages[a][3]}for(let l=0;l<grid_size;l++){for(let c=0;c<grid_size;c++)e+=`${0!==s[l][c]?s[l][c]:" "} `;e+="\n"}postMessage(e)}function initialize_grid(){cages=Array(grid_size*grid_size),cages_by_location=Array(grid_size);let e=0;for(let s=0;s<grid_size;s++){cages_by_location[s]=Array(grid_size);for(let i=0;i<grid_size;i++)cages[e]=[s,i,1,1,0,0],cages_by_location[s][i]=e,e++}}function shuffle_array(e){let s=e.length;for(;0!==s;){let i=Math.floor(Math.random()*s);s--;let g=e[s];e[s]=e[i],e[i]=g}return e}function expand_cage(e){let s=cages[e],i=s[0],g=s[1],a=s[2],t=s[3],r=s[4],l=s[5],c=[];if(0!==i){let o=cages[cages_by_location[i-1][g]];o[1]===g&&o[3]===t&&o[2]*o[3]+t*a<=max_cage_size&&c.push([1,0])}if(0!==g){let n=cages[cages_by_location[i][g-1]];n[0]===i&&n[2]===a&&n[2]*n[3]+t*a<=max_cage_size&&c.push([0,1])}if(0===c.length)return!1;let f=c[Math.floor(Math.random()*c.length)],$=cages_by_location[i-f[0]][g-f[1]];.5>Math.random()&&(cages[$][4]=cages[$][2]*f[0]+r,cages[$][5]=cages[$][3]*f[1]+l),cages[$][2]+=a*f[0],cages[$][3]+=t*f[1],cages.splice(e,1);for(let z=0;z<grid_size;z++)for(let d=0;d<grid_size;d++)cages_by_location[z][d]===e&&(cages_by_location[z][d]=$),cages_by_location[z][d]>e&&cages_by_location[z][d]--;return!0}function solve_puzzle(){let e=Array(grid_size);for(let s=0;s<grid_size;s++){e[s]=Array(grid_size);for(let i=0;i<grid_size;i++)e[s][i]=!1}for(let g=0;g<cages.length;g++){let a=cages[g][0]+cages[g][4],t=cages[g][1]+cages[g][5];e[a][t]=!0}return solve_puzzle_step(0,e)}function solve_puzzle_step(e,s){if(e===cages.length)return 1;let i=cages[e][0]+cages[e][4],g=cages[e][1]+cages[e][5],a=cages[e][2]*cages[e][3];if(1===a)return solve_puzzle_step(e+1,s);let t=0,r=[];for(let l=1;l<=Math.sqrt(a);l++)a%l==0&&!(l>grid_size)&&!(a/l>grid_size)&&(r.push(l),a/l!==l&&r.push(a/l));return r.forEach(r=>{let l=a/r,c=Math.max(i-r+1,0),o=Math.min(i,grid_size-r),n=Math.max(g-l+1,0),f=Math.min(g,grid_size-l);for(let $=c;$<=o;$++)for(let z=n;z<=f;z++){let d=!1;for(let u=0;u<r;u++){for(let _=0;_<l;_++)if(s[$+u][z+_]&&!($+u===i&&z+_===g)){d=!0;break}if(d)break}if(!d){let p=Array(grid_size);for(let y=0;y<grid_size;y++){p[y]=Array(grid_size);for(let h=0;h<grid_size;h++)p[y][h]=s[y][h]}for(let b=0;b<r;b++)for(let m=0;m<l;m++)p[$+b][z+m]=!0;t+=solve_puzzle_step(e+1,p)}}}),t}