"use strict";onmessage=function(e){gridSize=e.data[0],maxCageSize=e.data[1],uniqueSolution=e.data[2],generateMagicCarpet()};let gridSize=null,maxCageSize=null,uniqueSolution=null,cages=[],cagesByLocation=[],numSolutionsFound=0;function generateMagicCarpet(){cages=[],cagesByLocation=[],initializeGrid();let i=JSON.parse(JSON.stringify(cages)),r=JSON.parse(JSON.stringify(cagesByLocation));for(;;){let a=!1;var t=shuffleArray([...Array(cages.length).keys()]);t.sort((e,a)=>cages[e][2]*cages[e][3]-cages[a][2]*cages[a][3]);for(let e=0;e<t.length;e++)if(expandCage(t[e])){for(let e=0;e<t.length;e++)t[e]>=cages.length&&t[e]--;uniqueSolution?1!==(numSolutionsFound=solvePuzzle())?(cages=JSON.parse(JSON.stringify(i)),cagesByLocation=JSON.parse(JSON.stringify(r)),numSolutionsFound=1):(a=!0,i=JSON.parse(JSON.stringify(cages)),r=JSON.parse(JSON.stringify(cagesByLocation))):a=!0}if(!a||cages.length<=gridSize)return void postMessage([cages.sort((e,a)=>a[3]*gridSize+a[2]-(e[3]*gridSize+e[2]))])}}function initializeGrid(){cages=new Array(gridSize*gridSize),cagesByLocation=new Array(gridSize);let i=0;for(let a=0;a<gridSize;a++){cagesByLocation[a]=new Array(gridSize);for(let e=0;e<gridSize;e++)cages[i]=[a,e,1,1,0,0],cagesByLocation[a][e]=i,i++}}function shuffleArray(e){let a=e.length;for(;0!==a;){var i=Math.floor(Math.random()*a),r=e[--a];e[a]=e[i],e[i]=r}return e}function expandCage(i){var e=cages[i],a=e[0],r=e[1],t=e[2],g=e[3],o=e[4],e=e[5],s=[];if(0!==a&&(n=cages[cagesByLocation[a-1][r]])[1]===r&&n[3]===g&&n[2]*n[3]+g*t<=maxCageSize&&s.push([1,0]),0!==r&&(n=cages[cagesByLocation[a][r-1]])[0]===a&&n[2]===t&&n[2]*n[3]+g*t<=maxCageSize&&s.push([0,1]),0===s.length)return!1;var n=s[Math.floor(Math.random()*s.length)],c=cagesByLocation[a-n[0]][r-n[1]];Math.random()<.5&&(cages[c][4]=cages[c][2]*n[0]+o,cages[c][5]=cages[c][3]*n[1]+e),cages[c][2]+=t*n[0],cages[c][3]+=g*n[1],cages.splice(i,1);for(let a=0;a<gridSize;a++)for(let e=0;e<gridSize;e++)cagesByLocation[a][e]===i&&(cagesByLocation[a][e]=c),cagesByLocation[a][e]>i&&cagesByLocation[a][e]--;return!0}function solvePuzzle(){var i=new Array(gridSize);for(let a=0;a<gridSize;a++){i[a]=new Array(gridSize);for(let e=0;e<gridSize;e++)i[a][e]=!1}for(let e=0;e<cages.length;e++){var a=cages[e][0]+cages[e][4],r=cages[e][1]+cages[e][5];i[a][r]=!0}return solvePuzzleStep(0,i)}function solvePuzzleStep(c,l){if(c===cages.length)return 1;const S=cages[c][0]+cages[c][4],u=cages[c][1]+cages[c][5],r=cages[c][2]*cages[c][3];if(1==r)return solvePuzzleStep(c+1,l);let f=0;var a=[];for(let e=1;e<=Math.sqrt(r);e++)r%e!=0||e>gridSize||r/e>gridSize||(a.push(e),r/e!==e&&a.push(r/e));return a.forEach(e=>{var g=r/e,a=Math.max(S-e+1,0),i=Math.min(S,gridSize-e),o=Math.max(u-g+1,0),s=Math.min(u,gridSize-g);for(let t=a;t<=i;t++)for(let r=o;r<=s;r++){let i=!1;for(let a=0;a<e;a++){for(let e=0;e<g;e++)if(l[t+a][r+e]&&(t+a!==S||r+e!==u)){i=!0;break}if(i)break}if(!i){var n=new Array(gridSize);for(let a=0;a<gridSize;a++){n[a]=new Array(gridSize);for(let e=0;e<gridSize;e++)n[a][e]=l[a][e]}for(let a=0;a<e;a++)for(let e=0;e<g;e++)n[t+a][r+e]=!0;f+=solvePuzzleStep(c+1,n)}}}),f}