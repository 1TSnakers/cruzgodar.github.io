"use strict";class MagicCarpet extends Applet{grid_size=null;cages=[];cages_by_location=[];animate_next_draw=!1;web_worker=null;constructor(t){super(t);let i={renderer:"cpu",canvas_width:500,canvas_height:500};this.wilson=new Wilson(t,i)}async run(t){1==this.canvas.style.opacity&&await Page.Animate.change_opacity(this.canvas,0,Site.opacity_animation_time),this.grid_size=t;for(let i=0;i<this.grid_size;i++){this.cages_by_location.push([]);for(let s=0;s<this.grid_size;s++)this.cages_by_location[i].push(0)}let e=setTimeout(()=>{let t=200*this.grid_size+9;this.wilson.change_canvas_size(t,t),this.wilson.ctx.clearRect(0,0,t,t)},Site.opacity_animation_time);this.timeout_ids.push(e);try{this.web_worker.terminate()}catch(a){}this.web_worker=new Worker(`/applets/magic-carpets/scripts/worker.${DEBUG?"":"min."}js`),this.workers.push(this.web_worker),this.animate_next_draw=!0,this.web_worker.onmessage=t=>{console.log(t.data)};let r=setTimeout(()=>{this.web_worker.postMessage([this.grid_size])},Site.opacity_animation_time);this.timeout_ids.push(r)}draw_grid(t){let i=200*this.grid_size+9;t?(this.wilson.ctx.fillStyle="rgb(255, 255, 255)",this.wilson.ctx.fillRect(0,0,i,i),this.wilson.ctx.fillStyle="rgb(0, 0, 0)"):(this.wilson.ctx.clearRect(0,0,i,i),1===Site.Settings.url_vars.theme?this.wilson.ctx.fillStyle="rgb(192, 192, 192)":this.wilson.ctx.fillStyle="rgb(64, 64, 64)");for(let s=0;s<=this.grid_size;s++)this.wilson.ctx.fillRect(200*s+4,0,2,i+9),this.wilson.ctx.fillRect(0,200*s+4,i+9,2)}}