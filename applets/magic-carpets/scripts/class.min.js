"use strict";class MagicCarpet extends Applet{gridSize=null;maxCageSize=null;uniqueSolution=null;cages=[];currentlyDrawing=!1;cellSize=200;webWorker=null;constructor(i){super(i);let t={renderer:"cpu",canvasWidth:500,canvasHeight:500};this.wilson=new Wilson(i,t),this.run()}async run(i=8,t=16,s=!0){if(this.currentlyDrawing)return;this.gridSize=i,this.maxCageSize=t,this.cellSize=Math.min(200,Math.floor(4e3/this.gridSize));let e=this.gridSize*this.cellSize+9;this.wilson.changeCanvasSize(e,e),this.wilson.ctx.clearRect(0,0,e,e);try{this.webWorker.terminate()}catch(l){}this.webWorker=new Worker(`/applets/magic-carpets/scripts/worker.${DEBUG?"":"min."}js`),this.workers.push(this.webWorker),this.webWorker.onmessage=i=>{this.cages=i.data[0],this.drawGrid()},this.webWorker.postMessage([this.gridSize,this.maxCageSize,s])}drawGrid(i=!1){let t=this.gridSize*this.cellSize+9;if(i?this.wilson.ctx.clearRect(0,0,t,t):(this.wilson.ctx.fillStyle="rgb(255, 255, 255)",this.wilson.ctx.fillRect(0,0,t,t)),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",!i)for(let s=0;s<=this.gridSize;s++)this.wilson.ctx.fillRect(this.cellSize*s+3,0,4,t+9),this.wilson.ctx.fillRect(0,this.cellSize*s+3,t+9,4);if(this.wilson.ctx.fillRect(0,0,this.cellSize*this.gridSize+10,10),this.wilson.ctx.fillRect(0,this.cellSize*this.gridSize,this.cellSize*this.gridSize+10,10),this.wilson.ctx.fillRect(0,0,10,this.cellSize*this.gridSize+10),this.wilson.ctx.fillRect(this.cellSize*this.gridSize,0,10,this.cellSize*this.gridSize+10),!i){this.wilson.ctx.font=`${.6*this.cellSize}px sans-serif`;for(let e=0;e<this.cages.length;e++)this.drawNumber(e)}this.currentlyDrawing=!1}drawNumber(i){let t=this.cages[i][0]+this.cages[i][4],s=this.cages[i][1]+this.cages[i][5],e=`${this.cages[i][2]*this.cages[i][3]}`,l=this.wilson.ctx.measureText(e);this.wilson.ctx.fillText(e,this.cellSize*s+(this.cellSize-l.width)/2+5,this.cellSize*(t+1)-(this.cellSize-l.actualBoundingBoxAscent-l.actualBoundingBoxDescent)/2+4)}drawSolution(i=!1){if(this.currentlyDrawing)return;this.currentlyDrawing=!0;let t=this.gridSize*this.cellSize+9;i?this.wilson.ctx.clearRect(0,0,t,t):(this.wilson.ctx.fillStyle="rgb(255, 255, 255)",this.wilson.ctx.fillRect(0,0,t,t)),this.drawGrid(i);let s=500/this.cages.length;this.drawCage(0,s,i)}drawCage(i,t,s){if(i===this.cages.length){this.currentlyDrawing=!1;return}let e=this.wilson.utils.hsvToRgb(i/this.cages.length*6/7,1,1);this.wilson.ctx.fillStyle=`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${s?.5:.2})`;let l=this.cages[i][0]*this.cellSize,h=this.cages[i][1]*this.cellSize,c=this.cages[i][2]*this.cellSize,r=this.cages[i][3]*this.cellSize;this.wilson.ctx.fillRect(h+10,l+10,r-10,c-10),e=this.wilson.utils.hsvToRgb(i/this.cages.length*6/7,1,.9),this.wilson.ctx.fillStyle=`rgba(${e[0]}, ${e[1]}, ${e[2]}, 1)`;let a=0===this.cages[i][0]?0:5,$=0===this.cages[i][1]?0:5,g=this.cages[i][0]+this.cages[i][2]===this.gridSize||0===this.cages[i][0]?0:5,n=this.cages[i][1]+this.cages[i][3]===this.gridSize||0===this.cages[i][1]?0:5,o=this.cages[i][0]+this.cages[i][2]===this.gridSize&&0===this.cages[i][0]?5:0,w=this.cages[i][1]+this.cages[i][3]===this.gridSize&&0===this.cages[i][1]?5:0;this.wilson.ctx.fillRect(h+10-$,l+10-a,r-5+n-w,10),this.wilson.ctx.fillRect(h+10-$,l+10-a,10,c-5+g-o),this.wilson.ctx.fillRect(h+r-5-$+n-w,l+10-a,10,c-5+g-o),this.wilson.ctx.fillRect(h+10-$+n,l+c-5-a+g-o,r-5-w,10),setTimeout(()=>this.drawCage(i+1,t,s),t)}}