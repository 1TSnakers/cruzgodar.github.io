class MagicCarpet extends Applet{gridSize=null;maxCageSize=null;uniqueSolution=null;cages=[];currentlyDrawing=!1;cellSize=200;webWorker=null;constructor(a){super(a);this.wilson=new Wilson(a,{renderer:"cpu",canvasWidth:500,canvasHeight:500});this.run()}async run(a=8,c=16,d=!0){if(!this.currentlyDrawing){this.gridSize=a;this.maxCageSize=c;this.cellSize=Math.min(200,Math.floor(4E3/this.gridSize));a=this.gridSize*this.cellSize+9;this.wilson.changeCanvasSize(a,a);this.wilson.ctx.clearRect(0,0,a,a);try{this.webWorker.terminate()}catch(b){}this.webWorker=
new Worker(`/applets/magic-carpets/scripts/worker.${DEBUG?"":"min."}js`);this.workers.push(this.webWorker);this.webWorker.onmessage=b=>{this.cages=b.data[0];this.drawGrid()};this.webWorker.postMessage([this.gridSize,this.maxCageSize,d])}}drawGrid(a=!1){const c=this.gridSize*this.cellSize+9;a?this.wilson.ctx.clearRect(0,0,c,c):(this.wilson.ctx.fillStyle="rgb(255, 255, 255)",this.wilson.ctx.fillRect(0,0,c,c));this.wilson.ctx.fillStyle="rgb(0, 0, 0)";if(!a)for(let d=0;d<=this.gridSize;d++)this.wilson.ctx.fillRect(this.cellSize*
d+3,0,4,c+9),this.wilson.ctx.fillRect(0,this.cellSize*d+3,c+9,4);this.wilson.ctx.fillRect(0,0,this.cellSize*this.gridSize+10,10);this.wilson.ctx.fillRect(0,this.cellSize*this.gridSize,this.cellSize*this.gridSize+10,10);this.wilson.ctx.fillRect(0,0,10,this.cellSize*this.gridSize+10);this.wilson.ctx.fillRect(this.cellSize*this.gridSize,0,10,this.cellSize*this.gridSize+10);if(!a)for(this.wilson.ctx.font=`${.6*this.cellSize}px sans-serif`,a=0;a<this.cages.length;a++)this.drawNumber(a);this.currentlyDrawing=
!1}drawNumber(a){const c=this.cages[a][0]+this.cages[a][4],d=this.cages[a][1]+this.cages[a][5];a=`${this.cages[a][2]*this.cages[a][3]}`;const b=this.wilson.ctx.measureText(a);this.wilson.ctx.fillText(a,this.cellSize*d+(this.cellSize-b.width)/2+5,this.cellSize*(c+1)-(this.cellSize-b.actualBoundingBoxAscent-b.actualBoundingBoxDescent)/2+4)}drawSolution(a=!1){if(!this.currentlyDrawing){this.currentlyDrawing=!0;var c=this.gridSize*this.cellSize+9;a?this.wilson.ctx.clearRect(0,0,c,c):(this.wilson.ctx.fillStyle=
"rgb(255, 255, 255)",this.wilson.ctx.fillRect(0,0,c,c));this.drawGrid(a);this.drawCage(0,500/this.cages.length,a)}}drawCage(a,c,d){if(a===this.cages.length)this.currentlyDrawing=!1;else{var b=this.wilson.utils.hsvToRgb(a/this.cages.length*6/7,1,1);this.wilson.ctx.fillStyle=`rgba(${b[0]}, ${b[1]}, ${b[2]}, ${d?.5:.2})`;var e=this.cages[a][0]*this.cellSize,f=this.cages[a][1]*this.cellSize,g=this.cages[a][2]*this.cellSize,h=this.cages[a][3]*this.cellSize;this.wilson.ctx.fillRect(f+10,e+10,h-10,g-10);
b=this.wilson.utils.hsvToRgb(a/this.cages.length*6/7,1,.9);this.wilson.ctx.fillStyle=`rgba(${b[0]}, ${b[1]}, ${b[2]}, 1)`;b=0===this.cages[a][0]?0:5;var k=0===this.cages[a][1]?0:5,l=this.cages[a][0]+this.cages[a][2]===this.gridSize||0===this.cages[a][0]?0:5,m=this.cages[a][1]+this.cages[a][3]===this.gridSize||0===this.cages[a][1]?0:5,n=this.cages[a][0]+this.cages[a][2]===this.gridSize&&0===this.cages[a][0]?5:0,p=this.cages[a][1]+this.cages[a][3]===this.gridSize&&0===this.cages[a][1]?5:0;this.wilson.ctx.fillRect(f+
10-k,e+10-b,h-5+m-p,10);this.wilson.ctx.fillRect(f+10-k,e+10-b,10,g-5+l-n);this.wilson.ctx.fillRect(f+h-5-k+m-p,e+10-b,10,g-5+l-n);this.wilson.ctx.fillRect(f+10-k+m,e+g-5-b+l-n,h-5-p,10);setTimeout(()=>this.drawCage(a+1,c,d),c)}}};
