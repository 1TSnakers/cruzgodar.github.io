"use strict";let numVertices=null,gridSize=null,image=[],vertices=[],centerRow=null,centerCol=null,currentRow=null,currentCol=null,numPixelsAtMax=0;function drawChaosGame(){image=new Uint8ClampedArray(gridSize*gridSize*4);for(let i=0;i<gridSize;i++)for(let j=0;j<gridSize;j++)image[4*(gridSize*i+j)]=0,image[4*(gridSize*i+j)+1]=0,image[4*(gridSize*i+j)+2]=0,image[4*(gridSize*i+j)+3]=255;var middleAngle=2*Math.floor(numVertices/2)*Math.PI/numVertices,topRow=gridSize/2-gridSize/2.5,middleAngle=gridSize/2-gridSize/2.5*Math.cos(middleAngle),topRow=topRow+(gridSize-middleAngle);centerRow=Math.floor(topRow/2+gridSize/2.5),centerCol=Math.floor(gridSize/2),currentRow=centerRow,currentCol=centerCol,vertices=[];for(let i=0;i<numVertices;i++){var angle=i/numVertices*2*Math.PI,row=Math.floor(-Math.cos(angle)*gridSize/2.5+centerRow),angle=Math.floor(Math.sin(angle)*gridSize/2.5+centerCol);vertices.push([row,angle])}let step=0;for(;;){step%(100*gridSize)==0&&postMessage([image]);var attractorVertex=Math.floor(Math.random()*numVertices),attractorVertex=(currentRow=Math.floor((currentRow+vertices[attractorVertex][0])/2),currentCol=Math.floor((currentCol+vertices[attractorVertex][1])/2),(Math.atan2(currentCol-gridSize/2,currentRow-gridSize/2)+Math.PI)/(2*Math.PI)),currentColor=HSVtoRGB(attractorVertex,((currentRow-gridSize/2)*(currentRow-gridSize/2)+(currentCol-gridSize/2)*(currentCol-gridSize/2))/(gridSize*gridSize/13),1);currentColor[0]/=255,currentColor[1]/=255,currentColor[2]/=255;for(let i=0;i<3;i++)if(image[4*(gridSize*currentRow+currentCol)+i]+=8*currentColor[i],255<=image[4*(gridSize*currentRow+currentCol)+i]&&(numPixelsAtMax++,image[4*(gridSize*currentRow+currentCol)+i]=255,.004<numPixelsAtMax/(gridSize*gridSize)))return void postMessage([image]);step++}}function HSVtoRGB(h,s,v){let r,g,b;var i=Math.floor(6*h),h=6*h-i,p=v*(1-s),q=v*(1-h*s),t=v*(1-(1-h)*s);switch(i%6){case 0:r=v,g=t,b=p;break;case 1:r=q,g=v,b=p;break;case 2:r=p,g=v,b=t;break;case 3:r=p,g=q,b=v;break;case 4:r=t,g=p,b=v;break;case 5:r=v,g=p,b=q}return[Math.round(255*r),Math.round(255*g),Math.round(255*b)]}onmessage=e=>{numVertices=e.data[0],gridSize=e.data[1],drawChaosGame()};