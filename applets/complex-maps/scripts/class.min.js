"use strict";class ComplexMap extends Applet{loadPromise=null;generatingCode="";uniformCode="";aspectRatio=1;pastBrightnessScales=[];resolution=500;blackPoint=1;whitePoint=1;draggableCallback=null;lastTimestamp=-1;addIndicatorDraggable=!1;useSelectorMode=!1;totalBenchmarkTime=0;benchmarksLeft=0;benchmarkCycles=10;benchmarkResolution=4e3;constructor(i,s,e="",t=0,o=0,a=-.585,n=!1,l=null,r=!1){super(i),this.pan.minX=-10,this.pan.maxX=10,this.pan.minY=-10,this.pan.maxY=10;let h={renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",canvasWidth:this.resolution,canvasHeight:this.resolution,useDraggables:!0,draggablesMousemoveCallback:this.onDragDraggable.bind(this),draggablesTouchmoveCallback:this.onDragDraggable.bind(this),useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:this.changeAspectRatio.bind(this),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),touchendCallback:this.onReleaseCanvas.bind(this),wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this)};this.wilson=new Wilson(i,h);let g=this.changeAspectRatio.bind(this);window.addEventListener("resize",g),this.handlers.push([window,"resize",g]),this.loadPromise=new Promise(async(i,h)=>{await Site.loadGLSL(),this.run(s,e,t,o,a,n,l,r),i()})}run(i,s="",e=0,t=0,o=-.585,a=!1,n=null,l=!1){this.generatingCode=i,this.uniformCode=s,this.zoom.level=o,this.wilson.worldWidth=3*Math.pow(2,this.zoom.level),this.wilson.worldHeight=this.wilson.worldWidth,this.wilson.worldCenterX=e,this.wilson.worldCenterY=t,this.addIndicatorDraggable=a,this.draggableCallback=n;let r="";l&&(r=`
    imageZ.x += 127.0;
    imageZ.y += 127.0;
    
    float whole1 = floor(imageZ.x);
    float whole2 = floor(imageZ.y);
    
    float fract1 = (imageZ.x - whole1);
    float fract2 = (imageZ.y - whole2);
    
    gl_FragColor = vec4(whole1 / 256.0, fract1, whole2 / 256.0, fract2);
    
    return;
   `);let h=`
   precision highp float;
   
   varying vec2 uv;
   
   uniform float aspectRatio;
   
   uniform float worldCenterX;
   uniform float worldCenterY;
   uniform float worldSize;
   
   uniform float blackPoint;
   uniform float whitePoint;
   
   uniform vec2 draggableArg;
   
   ${s}
   
   
   
   ${Site.getGLSLBundle(i)}
   
   
   
   vec3 hsv2rgb(vec3 c)
   {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
   }
   
   
   
   //Returns f(z) for a polynomial f with given roots.
   vec2 f(vec2 z)
   {
    return ${i};
   }
   
   
   
   void main(void)
   {
    vec2 z;
    
    if (aspectRatio >= 1.0)
    {
     z = vec2(uv.x * aspectRatio * worldSize + worldCenterX, uv.y * worldSize + worldCenterY);
    }
    
    else
    {
     z = vec2(uv.x * worldSize + worldCenterX, uv.y / aspectRatio * worldSize + worldCenterY);
    }
    
    
    
    vec2 imageZ = f(z);
    
    
    
    ${r}
    
    
    
    float modulus = length(imageZ);
    
    float h = atan(imageZ.y, imageZ.x) / 6.283;
    float s = clamp(1.0 / (1.0 + .01 * (modulus / whitePoint / whitePoint)), 0.0, 1.0);
    float v = clamp(1.0 / (1.0 + .01 / (modulus * blackPoint * blackPoint)), 0.0, 1.0);
    
    gl_FragColor = vec4(hsv2rgb(vec3(h, s, v)), 1.0);
   }
  `;this.wilson.render.shaderPrograms=[],this.wilson.render.loadNewShader(h),this.wilson.gl.useProgram(this.wilson.render.shaderPrograms[0]),this.wilson.render.initUniforms(["aspectRatio","worldCenterX","worldCenterY","worldSize","blackPoint","whitePoint","draggableArg"]),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,1);let g=a||-1!==i.indexOf("draggableArg");g&&0===this.wilson.draggables.numDraggables?(this.wilson.draggables.add(.5,.5,!a),this.wilson.gl.uniform2f(this.wilson.uniforms.draggableArg,.5,.5)):g||0===this.wilson.draggables.numDraggables||(this.wilson.draggables.numDraggables--,this.wilson.draggables.draggables[0].remove(),this.wilson.draggables=[]),this.animationPaused||window.requestAnimationFrame(this.drawFrame.bind(this))}onGrabCanvas(i,s,e){if(this.pan.onGrabCanvas(),this.zoom.onGrabCanvas(),this.useSelectorMode){this.run(this.generatingCode,this.uniformCode,this.wilson.worldCenterX,this.wilson.worldCenterY,this.zoom.level,this.forceAddDraggable,!0);let t=setTimeout(()=>{this.wilson.render.drawFrame();let e=this.wilson.utils.interpolate.worldToCanvas(i,s),t=new Uint8Array(4);this.wilson.gl.readPixels(e[1],this.wilson.canvasHeight-e[0],1,1,this.wilson.gl.RGBA,this.wilson.gl.UNSIGNEDBYTE,t);let o=t[0]-127+t[1]/256,a=t[2]-127+t[3]/256,n="+";s<0&&(n="-");let l="+";a<0&&(l="-"),console.log(`${i} ${n} ${Math.abs(s)}i |---> ${o} ${l} ${Math.abs(a)}i`),this.run(this.generatingCode,this.uniformCode,this.wilson.worldCenterX,this.wilson.worldCenterY,this.zoom.level,this.forceAddDraggable,!1),this.useSelectorMode=!1},20);this.timeoutIds.push(t)}}onDragCanvas(i,s,e,t,o){this.pan.onDragCanvas(i,s,e,t)}onReleaseCanvas(i,s,e){this.pan.onReleaseCanvas(),this.zoom.onReleaseCanvas()}onWheelCanvas(i,s,e,t){this.zoom.onWheelCanvas(i,s,e)}onPinchCanvas(i,s,e,t){this.zoom.onPinchCanvas(i,s,e)}onDragDraggable(i,s,e,t){try{this.draggableCallback(i,s,e,t)}catch(o){}this.wilson.gl.uniform2f(this.wilson.uniforms.draggableArg,s,e)}drawFrame(i){let s=i-this.lastTimestamp;this.lastTimestamp=i,0!==s&&(this.pan.update(),this.zoom.update(),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatio,this.aspectRatio),this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterX,this.wilson.worldCenterX),this.wilson.gl.uniform1f(this.wilson.uniforms.worldCenterY,this.wilson.worldCenterY),this.wilson.gl.uniform1f(this.wilson.uniforms.worldSize,Math.min(this.wilson.worldHeight,this.wilson.worldWidth)/2),this.wilson.gl.uniform1f(this.wilson.uniforms.blackPoint,this.blackPoint),this.wilson.gl.uniform1f(this.wilson.uniforms.whitePoint,this.whitePoint),this.wilson.render.drawFrame(),window.requestAnimationFrame(this.drawFrame.bind(this)))}changeAspectRatio(){this.wilson.fullscreen.currentlyFullscreen?(this.aspectRatio=window.innerWidth/window.innerHeight,this.aspectRatio>=1?(this.wilson.changeCanvasSize(this.resolution,Math.floor(this.resolution/this.aspectRatio)),this.wilson.worldWidth=3*Math.pow(2,this.zoom.level)*this.aspectRatio,this.wilson.worldHeight=3*Math.pow(2,this.zoom.level)):(this.wilson.changeCanvasSize(Math.floor(this.resolution*this.aspectRatio),this.resolution),this.wilson.worldWidth=3*Math.pow(2,this.zoom.level),this.wilson.worldHeight=3*Math.pow(2,this.zoom.level)/this.aspectRatio)):(this.aspectRatio=1,this.wilson.changeCanvasSize(this.resolution,this.resolution),this.wilson.worldWidth=3*Math.pow(2,this.zoom.level),this.wilson.worldHeight=3*Math.pow(2,this.zoom.level))}runBenchmark(){this.wilson.changeCanvasSize(this.benchmarkResolution,this.benchmarkResolution);let i=Date.now(),s=new Uint8Array(4);for(let e=0;e<this.benchmarkCycles;e++)this.wilson.render.drawFrame(),this.wilson.gl.readPixels(0,0,1,1,this.wilson.gl.RGBA,this.wilson.gl.UNSIGNEDBYTE,s);let t=(Date.now()-i)/this.benchmarkCycles;console.log(`Finished benchmark --- average time to draw a ${this.benchmarkResolution}x${this.benchmarkResolution} frame is ${t}ms`),this.wilson.changeCanvasSize(this.resolution,this.resolution),this.wilson.render.drawFrame()}}