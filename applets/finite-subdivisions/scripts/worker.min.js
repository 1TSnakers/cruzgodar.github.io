onmessage=async function(c){numVertices=c.data[0];numIterations=c.data[1];gridSize=c.data[2];maximumSpeed=c.data[3];await drawFiniteSubdivisions()};let numVertices=null,numIterations=null,currentIteration=null,gridSize=null,maximumSpeed=null,polygons=[];
function drawFiniteSubdivisions(){return new Promise(async function(c,d){polygons=[[]];currentIteration=0;d=Math.floor((gridSize/2-gridSize/2.5+(gridSize-(gridSize/2-gridSize/2.5*Math.cos(2*Math.floor(numVertices/2)*Math.PI/numVertices))))/2+gridSize/2.5);let a=Math.floor(gridSize/2);for(let b=0;b<numVertices;b++){let e=b/numVertices*2*Math.PI;polygons[0].push([Math.floor(-Math.cos(e)*gridSize/2.5+d),Math.floor(Math.sin(e)*gridSize/2.5+a)])}await drawOuterPolygon();for(d=0;d<numIterations;d++)await drawLines(calculateLines()),
currentIteration++;c()})}
function drawOuterPolygon(){return new Promise(async function(c,d){if(!1===maximumSpeed)for(d=0;120>d;d++){for(var a=0;a<numVertices;a++){let b=HSVtoRGB((2*a+1)/(2*numVertices),1,1);postMessage([polygons[0][a][0],polygons[0][a][1],polygons[0][a][0]+(d+1)/120*(polygons[0][(a+1)%numVertices][0]-polygons[0][a][0]),polygons[0][a][1]+(d+1)/120*(polygons[0][(a+1)%numVertices][1]-polygons[0][a][1]),`rgb(${b[0]}, ${b[1]}, ${b[2]})`])}await sleep(8)}else for(d=0;d<numVertices;d++)a=HSVtoRGB((2*d+1)/(2*numVertices),
1,1),postMessage([polygons[0][d][0],polygons[0][d][1],polygons[0][(d+1)%numVertices][0],polygons[0][(d+1)%numVertices][1],`rgb(${a[0]}, ${a[1]}, ${a[2]})`]);c()})}
function calculateLines(){let c=[],d=[];for(let b=0;b<polygons.length;b++){let e=0,f=0;for(var a=0;a<polygons[b].length;a++)e+=polygons[b][a][0],f+=polygons[b][a][1];e/=polygons[b].length;f/=polygons[b].length;for(a=0;a<polygons[b].length;a++)c.push([polygons[b][a],[e,f]]),d.push([[e,f],polygons[b][a],polygons[b][(a+1)%polygons[b].length]])}polygons=d;return c}
function drawLines(c){return new Promise(async function(d,a){if(!1===maximumSpeed)for(a=0;120>a;a++){for(var b=0;b<c.length;b++){let e=HSVtoRGB(b/(c.length-1),1,1);postMessage([c[b][0][0],c[b][0][1],c[b][0][0]+(a+1)/120*(c[b][1][0]-c[b][0][0])+1,c[b][0][1]+(a+1)/120*(c[b][1][1]-c[b][0][1]),`rgb(${e[0]}, ${e[1]}, ${e[2]})`])}await sleep(8)}else for(a=0;a<c.length;a++)b=HSVtoRGB(a/(c.length-1),1,1),postMessage([c[a][0][0],c[a][0][1],c[a][1][0],c[a][1][1],`rgb(${b[0]}, ${b[1]}, ${b[2]})`]);d()})}
function sleep(c){return new Promise(function(d,a){setTimeout(d,c)})}function HSVtoRGB(c,d,a){let b,e,f,h,k,g;h=Math.floor(6*c);k=6*c-h;c=a*(1-d);g=a*(1-k*d);d=a*(1-(1-k)*d);switch(h%6){case 0:b=a;e=d;f=c;break;case 1:b=g;e=a;f=c;break;case 2:b=c;e=a;f=d;break;case 3:b=c;e=g;f=a;break;case 4:b=d;e=c;f=a;break;case 5:b=a,e=c,f=g}return[Math.round(255*b),Math.round(255*e),Math.round(255*f)]};
