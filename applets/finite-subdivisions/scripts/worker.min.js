"use strict";let numVertices=null,numIterations=null,gridSize=null,maximumSpeed=null,polygons=[];async function drawFiniteSubdivisions(){polygons=[[]];var e=2*Math.floor(numVertices/2)*Math.PI/numVertices,n=gridSize/2-gridSize/2.5,e=gridSize/2-gridSize/2.5*Math.cos(e),n=n+(gridSize-e),s=Math.floor(n/2+gridSize/2.5),o=Math.floor(gridSize/2);for(let r=0;r<numVertices;r++){var t=r/numVertices*2*Math.PI,i=Math.floor(-Math.cos(t)*gridSize/2.5+s),t=Math.floor(Math.sin(t)*gridSize/2.5+o);polygons[0].push([i,t])}await drawOuterPolygon();for(let l=0;l<numIterations;l++)await drawLines(calculateLines())}async function drawOuterPolygon(){if(maximumSpeed)for(let e=0;e<numVertices;e++){var s=HSVtoRGB((2*e+1)/(2*numVertices),1,1),s=`rgb(${s[0]}, ${s[1]}, ${s[2]})`;postMessage([polygons[0][e][0],polygons[0][e][1],polygons[0][(e+1)%numVertices][0],polygons[0][(e+1)%numVertices][1],s])}else for(let n=0;n<120;n++){for(let e=0;e<numVertices;e++){var o=HSVtoRGB((2*e+1)/(2*numVertices),1,1),o=`rgb(${o[0]}, ${o[1]}, ${o[2]})`;postMessage([polygons[0][e][0],polygons[0][e][1],polygons[0][e][0]+(n+1)/120*(polygons[0][(e+1)%numVertices][0]-polygons[0][e][0]),polygons[0][e][1]+(n+1)/120*(polygons[0][(e+1)%numVertices][1]-polygons[0][e][1]),o])}await new Promise(resolve=>setTimeout(resolve,8))}}function calculateLines(){var t=[],i=[];for(let r=0;r<polygons.length;r++){let e=0,n=0;for(let s=0;s<polygons[r].length;s++)e+=polygons[r][s][0],n+=polygons[r][s][1];e/=polygons[r].length,n/=polygons[r].length;for(let o=0;o<polygons[r].length;o++)t.push([polygons[r][o],[e,n]]),i.push([[e,n],polygons[r][o],polygons[r][(o+1)%polygons[r].length]])}return polygons=i,t}async function drawLines(newLines){if(!1===maximumSpeed)for(let n=0;n<120;n++){for(let e=0;e<newLines.length;e++){var s=HSVtoRGB(e/(newLines.length-1),1,1),s=`rgb(${s[0]}, ${s[1]}, ${s[2]})`;postMessage([newLines[e][0][0],newLines[e][0][1],newLines[e][0][0]+(n+1)/120*(newLines[e][1][0]-newLines[e][0][0])+1,newLines[e][0][1]+(n+1)/120*(newLines[e][1][1]-newLines[e][0][1]),s])}await new Promise(resolve=>setTimeout(resolve,8))}else for(let e=0;e<newLines.length;e++){var o=HSVtoRGB(e/(newLines.length-1),1,1),o=`rgb(${o[0]}, ${o[1]}, ${o[2]})`;postMessage([newLines[e][0][0],newLines[e][0][1],newLines[e][1][0],newLines[e][1][1],o])}}function HSVtoRGB(h,s,v){let e,n,o;var t=Math.floor(6*h),i=6*h-t,r=v*(1-s),l=v*(1-i*s),a=v*(1-(1-i)*s);switch(t%6){case 0:e=v,n=a,o=r;break;case 1:e=l,n=v,o=r;break;case 2:e=r,n=v,o=a;break;case 3:e=r,n=l,o=v;break;case 4:e=a,n=r,o=v;break;case 5:e=v,n=r,o=l}return[Math.round(255*e),Math.round(255*n),Math.round(255*o)]}onmessage=e=>{numVertices=e.data[0],numIterations=e.data[1],gridSize=e.data[2],maximumSpeed=e.data[3],drawFiniteSubdivisions()};