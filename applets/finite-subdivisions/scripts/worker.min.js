"use strict";onmessage=async function(e){num_vertices=e.data[0],num_iterations=e.data[1],grid_size=e.data[2],maximum_speed=e.data[3],await draw_finite_subdivisions()};let num_vertices=null,num_iterations=null,current_iteration=null,grid_size=null,maximum_speed=null,polygons=[];function draw_finite_subdivisions(){return new Promise(async function(e,o){polygons=[[]],current_iteration=0;let t=2*Math.floor(num_vertices/2)*Math.PI/num_vertices,n=grid_size/2-grid_size/2.5,s=grid_size/2-grid_size/2.5*Math.cos(t),i=n+(grid_size-s),r=Math.floor(i/2+grid_size/2.5),l=Math.floor(grid_size/2);for(let e=0;e<num_vertices;e++){let o=e/num_vertices*2*Math.PI,t=Math.floor(-Math.cos(o)*grid_size/2.5+r),n=Math.floor(Math.sin(o)*grid_size/2.5+l);polygons[0].push([t,n])}await draw_outer_polygon();for(let e=0;e<num_iterations;e++)await draw_lines(calculate_lines()),current_iteration++;e()})}function draw_outer_polygon(){return new Promise(async function(e,o){if(!1===maximum_speed)for(let e=0;e<120;e++){for(let o=0;o<num_vertices;o++){let t=HSVtoRGB((2*o+1)/(2*num_vertices),1,1),n=`rgb(${t[0]}, ${t[1]}, ${t[2]})`;postMessage([polygons[0][o][0],polygons[0][o][1],polygons[0][o][0]+(e+1)/120*(polygons[0][(o+1)%num_vertices][0]-polygons[0][o][0]),polygons[0][o][1]+(e+1)/120*(polygons[0][(o+1)%num_vertices][1]-polygons[0][o][1]),n])}await sleep(8)}else for(let e=0;e<num_vertices;e++){let o=HSVtoRGB((2*e+1)/(2*num_vertices),1,1),t=`rgb(${o[0]}, ${o[1]}, ${o[2]})`;postMessage([polygons[0][e][0],polygons[0][e][1],polygons[0][(e+1)%num_vertices][0],polygons[0][(e+1)%num_vertices][1],t])}e()})}function calculate_lines(){let e=[],o=[];for(let t=0;t<polygons.length;t++){let n=0,s=0;for(let e=0;e<polygons[t].length;e++)n+=polygons[t][e][0],s+=polygons[t][e][1];n/=polygons[t].length,s/=polygons[t].length;for(let i=0;i<polygons[t].length;i++)e.push([polygons[t][i],[n,s]]),o.push([[n,s],polygons[t][i],polygons[t][(i+1)%polygons[t].length]])}return polygons=o,e}function draw_lines(e){return new Promise(async function(o,t){if(!1===maximum_speed)for(let o=0;o<120;o++){for(let t=0;t<e.length;t++){let n=HSVtoRGB(t/(e.length-1),1,1),s=`rgb(${n[0]}, ${n[1]}, ${n[2]})`;postMessage([e[t][0][0],e[t][0][1],e[t][0][0]+(o+1)/120*(e[t][1][0]-e[t][0][0])+1,e[t][0][1]+(o+1)/120*(e[t][1][1]-e[t][0][1]),s])}await sleep(8)}else for(let o=0;o<e.length;o++){let t=HSVtoRGB(o/(e.length-1),1,1),n=`rgb(${t[0]}, ${t[1]}, ${t[2]})`;postMessage([e[o][0][0],e[o][0][1],e[o][1][0],e[o][1][1],n])}o()})}function sleep(e){return new Promise(function(o,t){setTimeout(o,e)})}function HSVtoRGB(e,o,t){let n,s,i,r,l,a,u,g;switch(a=t*(1-o),u=t*(1-(l=6*e-(r=Math.floor(6*e)))*o),g=t*(1-(1-l)*o),r%6){case 0:n=t,s=g,i=a;break;case 1:n=u,s=t,i=a;break;case 2:n=a,s=t,i=g;break;case 3:n=a,s=u,i=t;break;case 4:n=g,s=a,i=t;break;case 5:n=t,s=a,i=u}return[Math.round(255*n),Math.round(255*s),Math.round(255*i)]}