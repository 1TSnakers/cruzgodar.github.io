"use strict";onmessage=async function(e){numVertices=e.data[0],numIterations=e.data[1],gridSize=e.data[2],maximumSpeed=e.data[3],await drawFiniteSubdivisions()};let numVertices=null,numIterations=null,currentIteration=null,gridSize=null,maximumSpeed=null,polygons=[];function drawFiniteSubdivisions(){return new Promise(async function(e,n){polygons=[[]],currentIteration=0;let o=gridSize/2-gridSize/2.5,t=gridSize/2-gridSize/2.5*Math.cos(2*Math.floor(numVertices/2)*Math.PI/numVertices),r=Math.floor((o+(gridSize-t))/2+gridSize/2.5),l=Math.floor(gridSize/2);for(let i=0;i<numVertices;i++){let s=i/numVertices*2*Math.PI,$=Math.floor(-Math.cos(s)*gridSize/2.5+r),u=Math.floor(Math.sin(s)*gridSize/2.5+l);polygons[0].push([$,u])}await drawOuterPolygon();for(let _=0;_<numIterations;_++)await drawLines(calculateLines()),currentIteration++;e()})}function drawOuterPolygon(){return new Promise(async function(e,n){if(!1===maximumSpeed)for(let o=0;o<120;o++){for(let t=0;t<numVertices;t++){let r=HSVtoRGB((2*t+1)/(2*numVertices),1,1),l=`rgb(${r[0]}, ${r[1]}, ${r[2]})`;postMessage([polygons[0][t][0],polygons[0][t][1],polygons[0][t][0]+(o+1)/120*(polygons[0][(t+1)%numVertices][0]-polygons[0][t][0]),polygons[0][t][1]+(o+1)/120*(polygons[0][(t+1)%numVertices][1]-polygons[0][t][1]),l])}await sleep(8)}else for(let i=0;i<numVertices;i++){let s=HSVtoRGB((2*i+1)/(2*numVertices),1,1),$=`rgb(${s[0]}, ${s[1]}, ${s[2]})`;postMessage([polygons[0][i][0],polygons[0][i][1],polygons[0][(i+1)%numVertices][0],polygons[0][(i+1)%numVertices][1],$])}e()})}function calculateLines(){let e=[],n=[];for(let o=0;o<polygons.length;o++){let t=0,r=0;for(let l=0;l<polygons[o].length;l++)t+=polygons[o][l][0],r+=polygons[o][l][1];t/=polygons[o].length,r/=polygons[o].length;for(let i=0;i<polygons[o].length;i++)e.push([polygons[o][i],[t,r]]),n.push([[t,r],polygons[o][i],polygons[o][(i+1)%polygons[o].length]])}return polygons=n,e}function drawLines(e){return new Promise(async function(n,o){if(!1===maximumSpeed)for(let t=0;t<120;t++){for(let r=0;r<e.length;r++){let l=HSVtoRGB(r/(e.length-1),1,1),i=`rgb(${l[0]}, ${l[1]}, ${l[2]})`;postMessage([e[r][0][0],e[r][0][1],e[r][0][0]+(t+1)/120*(e[r][1][0]-e[r][0][0])+1,e[r][0][1]+(t+1)/120*(e[r][1][1]-e[r][0][1]),i])}await sleep(8)}else for(let s=0;s<e.length;s++){let $=HSVtoRGB(s/(e.length-1),1,1),u=`rgb(${$[0]}, ${$[1]}, ${$[2]})`;postMessage([e[s][0][0],e[s][0][1],e[s][1][0],e[s][1][1],u])}n()})}function sleep(e){return new Promise(function(n,o){setTimeout(n,e)})}function HSVtoRGB(e,n,o){let t,r,l,i,s,$,u,_;switch(i=Math.floor(6*e),s=6*e-i,$=o*(1-n),u=o*(1-s*n),_=o*(1-(1-s)*n),i%6){case 0:t=o,r=_,l=$;break;case 1:t=u,r=o,l=$;break;case 2:t=$,r=o,l=_;break;case 3:t=$,r=u,l=o;break;case 4:t=_,r=$,l=o;break;case 5:t=o,r=$,l=u}return[Math.round(255*t),Math.round(255*r),Math.round(255*l)]}