"use strict";let numIterations,maximumSpeed,polygons;async function drawFiniteSubdivisions(){for(let e=0;e<numIterations;e++)await drawLines(calculateLines())}function calculateLines(){var t=[],a=[];for(let i=0;i<polygons.length;i++){let e=0,n=0;for(let s=0;s<polygons[i].length;s++)e+=polygons[i][s][0],n+=polygons[i][s][1];e/=polygons[i].length,n/=polygons[i].length;for(let o=0;o<polygons[i].length;o++)t.push([polygons[i][o],[e,n]]),a.push([[e,n],polygons[i][o],polygons[i][(o+1)%polygons[i].length]])}return polygons=a,t}async function drawLines(newLines){if(!1===maximumSpeed)for(let n=0;n<120;n++){for(let e=0;e<newLines.length;e++){var s=HSVtoRGB(e/(newLines.length-1),1,1);postMessage([newLines[e][0][0],newLines[e][0][1],newLines[e][0][0]+(n+1)/120*(newLines[e][1][0]-newLines[e][0][0])+1,newLines[e][0][1]+(n+1)/120*(newLines[e][1][1]-newLines[e][0][1]),s])}await new Promise(resolve=>setTimeout(resolve,8))}else for(let e=0;e<newLines.length;e++){var o=HSVtoRGB(e/(newLines.length-1),1,1);postMessage([newLines[e][0][0],newLines[e][0][1],newLines[e][1][0],newLines[e][1][1],o])}}function HSVtoRGB(h,s,v){let e,n,o;var t=Math.floor(6*h),a=6*h-t,i=v*(1-s),l=v*(1-a*s),r=v*(1-(1-a)*s);switch(t%6){case 0:e=v,n=r,o=i;break;case 1:e=l,n=v,o=i;break;case 2:e=i,n=v,o=r;break;case 3:e=i,n=l,o=v;break;case 4:e=r,n=i,o=v;break;case 5:e=v,n=i,o=l}return[Math.round(255*e),Math.round(255*n),Math.round(255*o)]}onmessage=e=>{numIterations=e.data[0],maximumSpeed=e.data[1],polygons=e.data[2],drawFiniteSubdivisions()};