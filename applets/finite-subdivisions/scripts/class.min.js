import{Applet}from"../../../scripts/applets/applet.min.js";import{convertColor}from"/scripts/src/browser.min.js";import{addTemporaryWorker}from"/scripts/src/main.min.js";import{Wilson}from"/scripts/wilson.min.js";class FiniteSubdivision extends Applet{resolution=3e3;numVertices;numIterations;webWorker;polygons;constructor({canvas}){super(canvas);var s={renderer:"cpu",canvasWidth:this.resolution,canvasHeight:this.resolution,useDraggables:!0,draggablesMousemoveCallback:this.onDragDraggable.bind(this),draggablesTouchmoveCallback:this.onDragDraggable.bind(this),useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:()=>this.wilson.draggables.recalculateLocations()};this.wilson=new Wilson(canvas,s)}run({numVertices,numIterations}){if(this.webWorker?.terminate&&this.webWorker.terminate(),this.numVertices!==numVertices){this.numVertices=numVertices;for(const s of this.wilson.draggables.draggables)s.remove();this.wilson.draggables.numDraggables=0,this.wilson.draggables.draggables=[],this.wilson.draggables.worldCoordinates=[],this.polygons=this.getDefaultPolygons();for(const t of this.polygons[0])this.wilson.draggables.add(...this.wilson.utils.interpolate.canvasToWorld(t[0],t[1]))}this.numIterations=numIterations,this.wilson.changeCanvasSize(this.resolution,this.resolution),this.wilson.ctx.lineWidth=Math.max(10-this.numIterations,1),this.drawPreviewPolygon()}animate(){this.wilson.ctx.fillStyle=convertColor(0,0,0),this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.webWorker=addTemporaryWorker("/applets/finite-subdivisions/scripts/worker.js"),this.webWorker.onmessage=e=>{this.wilson.ctx.strokeStyle=convertColor(...e.data[4]),this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(e.data[1],e.data[0]),this.wilson.ctx.lineTo(e.data[3],e.data[2]),this.wilson.ctx.stroke()},this.webWorker.postMessage([this.numVertices,this.numIterations,this.polygons])}onDragDraggable(activeDraggable,x,y){this.webWorker?.terminate&&this.webWorker.terminate(),this.polygons[0][activeDraggable]=this.wilson.utils.interpolate.worldToCanvas(x,y),this.drawPreviewPolygon()}getDefaultPolygons(){var s=[[]],t=2*Math.floor(this.numVertices/2)*Math.PI/this.numVertices,o=this.resolution/2-this.resolution/2.5,t=this.resolution/2-this.resolution/2.5*Math.cos(t),o=o+(this.resolution-t),e=Math.floor(o/2+this.resolution/2.5),i=Math.floor(this.resolution/2);for(let l=0;l<this.numVertices;l++){var n=l/this.numVertices*2*Math.PI,r=Math.floor(-Math.cos(n)*this.resolution/2.5+e),n=Math.floor(Math.sin(n)*this.resolution/2.5+i);s[0].push([r,n])}return s}drawPreviewPolygon(){this.wilson.ctx.fillStyle=convertColor(0,0,0),this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution);for(let o=0;o<this.numVertices;o++){var s=this.wilson.utils.hsvToRgb((2*o+1)/(2*this.numVertices),1,1);this.wilson.ctx.strokeStyle=convertColor(...s),this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.polygons[0][o][1],this.polygons[0][o][0]),this.wilson.ctx.lineTo(this.polygons[0][(o+1)%this.numVertices][1],this.polygons[0][(o+1)%this.numVertices][0]),this.wilson.ctx.stroke()}let t=structuredClone(this.polygons);for(let e=0;e<this.numIterations;e++)t=this.drawLines(t)}drawLines(polygons){var i=[],n=[];for(let r=0;r<polygons.length;r++){let s=0,t=0;for(let o=0;o<polygons[r].length;o++)s+=polygons[r][o][0],t+=polygons[r][o][1];s/=polygons[r].length,t/=polygons[r].length;for(let e=0;e<polygons[r].length;e++)i.push([polygons[r][e],[s,t]]),n.push([[s,t],polygons[r][e],polygons[r][(e+1)%polygons[r].length]])}for(let t=0;t<i.length;t++){var s=this.wilson.utils.hsvToRgb(t/i.length,1,1);this.wilson.ctx.strokeStyle=convertColor(...s),this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(i[t][0][1],i[t][0][0]),this.wilson.ctx.lineTo(i[t][1][1],i[t][1][0]),this.wilson.ctx.stroke()}return n}}export{FiniteSubdivision};