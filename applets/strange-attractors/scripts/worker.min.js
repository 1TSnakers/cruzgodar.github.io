"use strict";onmessage=async function(r){gridSize=r.data[0],sigma=r.data[1],rho=r.data[2],beta=r.data[3],maximumSpeed=r.data[4],await drawLorenzAttractor()};let gridSize=null,sigma=null,rho=null,beta=null,maximumSpeed=null,pixels=[];const boxSize=50,dt=5e-4,minZ=0;let stepsPerColor=5e3,numColors=null,currentX=1,currentY=1,currentZ=25,currentRow=null,currentCol=null,numPixelsAtMax=0;function drawLorenzAttractor(){return new Promise(async function(r,e){let t=0,n=0;for(numColors=gridSize;0<stepsPerColor;){t===stepsPerColor&&(postMessage([pixels,HSVtoRGB(n/numColors/6.5,1,1)]),pixels=[],n++,t=0,stepsPerColor-=2*Math.floor(5e3/numColors),maximumSpeed||await sleep(8));var o=currentZ-minZ-boxSize/2;currentCol=Math.floor((currentX+boxSize/2)/boxSize*gridSize),0<=(currentRow=Math.floor((1-(o+boxSize/2)/boxSize)*gridSize))&&0<=currentCol&&currentRow<gridSize&&currentCol<gridSize&&pixels.push([currentRow,currentCol]),currentX+=sigma*(currentY-currentX)*dt,currentY+=(currentX*(rho-currentZ)-currentY)*dt,currentZ+=(currentX*currentY-beta*currentZ)*dt,t++}r()})}function sleep(t){return new Promise(function(r,e){setTimeout(r,t)})}function HSVtoRGB(r,e,t){let n,o,u,a,i,c,l,s;switch(c=t*(1-e),l=t*(1-(i=6*r-(a=Math.floor(6*r)))*e),s=t*(1-(1-i)*e),a%6){case 0:n=t,o=s,u=c;break;case 1:n=l,o=t,u=c;break;case 2:n=c,o=t,u=s;break;case 3:n=c,o=l,u=t;break;case 4:n=s,o=c,u=t;break;case 5:n=t,o=c,u=l}return[Math.round(255*n),Math.round(255*o),Math.round(255*u)]}