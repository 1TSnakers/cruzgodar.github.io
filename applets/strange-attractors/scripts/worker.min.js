"use strict";onmessage=async function(r){gridSize=r.data[0],sigma=r.data[1],rho=r.data[2],beta=r.data[3],maximumSpeed=r.data[4],await drawLorenzAttractor()};let gridSize=null,sigma=null,rho=null,beta=null,maximumSpeed=null,pixels=[];const boxSize=50,dt=5e-4,minZ=0;let stepsPerColor=5e3,numColors=null,currentX=1,currentY=1,currentZ=25,currentRow=null,currentCol=null,numPixelsAtMax=0;function drawLorenzAttractor(){return new Promise(async function(r,e){let t=0,n=0;for(numColors=gridSize;stepsPerColor>0;){t!==stepsPerColor||(postMessage([pixels,HSVtoRGB(n/numColors/6.5,1,1)]),pixels=[],n++,t=0,stepsPerColor-=2*Math.floor(5e3/numColors),maximumSpeed||await sleep(8));let u=currentZ-0-25;currentCol=Math.floor((currentX+25)/50*gridSize),(currentRow=Math.floor((1-(u+25)/50)*gridSize))>=0&&currentCol>=0&&currentRow<gridSize&&currentCol<gridSize&&pixels.push([currentRow,currentCol]),currentX+=sigma*(currentY-currentX)*5e-4,currentY+=(currentX*(rho-currentZ)-currentY)*5e-4,currentZ+=(currentX*currentY-beta*currentZ)*5e-4,t++}r()})}function sleep(r){return new Promise(function(e,t){setTimeout(e,r)})}function HSVtoRGB(r,e,t){let n,u,o,l,c,a,i,s;switch(l=Math.floor(6*r),c=6*r-l,a=t*(1-e),i=t*(1-c*e),s=t*(1-(1-c)*e),l%6){case 0:n=t,u=s,o=a;break;case 1:n=i,u=t,o=a;break;case 2:n=a,u=t,o=s;break;case 3:n=a,u=i,o=t;break;case 4:n=s,u=a,o=t;break;case 5:n=t,u=a,o=i}return[Math.round(255*n),Math.round(255*u),Math.round(255*o)]}