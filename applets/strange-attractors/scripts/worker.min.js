"use strict";onmessage=async function(r){grid_size=r.data[0],sigma=r.data[1],rho=r.data[2],beta=r.data[3],maximum_speed=r.data[4],await draw_lorenz_attractor()};let grid_size=null,sigma=null,rho=null,beta=null,maximum_speed=null,pixels=[];const box_size=50,dt=5e-4,min_z=0;let steps_per_color=1e3,num_colors=null,current_x=1,current_y=1,current_z=25,current_row=null,current_col=null,num_pixels_at_max=0;function draw_lorenz_attractor(){return new Promise(async function(r,e){let t=0,n=0;for(num_colors=grid_size/5;n<num_colors;){t===steps_per_color&&(postMessage([pixels,HSVtoRGB(n/num_colors/6.5,1,1)]),pixels=[],n++,t=0,maximum_speed||await sleep(8));let r=current_z-min_z-box_size/2;current_col=Math.floor((current_x+box_size/2)/box_size*grid_size),(current_row=Math.floor((1-(r+box_size/2)/box_size)*grid_size))>=0&&current_col>=0&&current_row<grid_size&&current_col<grid_size&&pixels.push([current_row,current_col]),current_z+=((current_x+=sigma*(current_y-current_x)*dt)*(current_y+=(current_x*(rho-current_z)-current_y)*dt)-beta*current_z)*dt,t++}r()})}function sleep(r){return new Promise(function(e,t){setTimeout(e,r)})}function HSVtoRGB(r,e,t){let n,o,_,s,u,c,a,i;switch(c=t*(1-e),a=t*(1-(u=6*r-(s=Math.floor(6*r)))*e),i=t*(1-(1-u)*e),s%6){case 0:n=t,o=i,_=c;break;case 1:n=a,o=t,_=c;break;case 2:n=c,o=t,_=i;break;case 3:n=c,o=a,_=t;break;case 4:n=i,o=c,_=t;break;case 5:n=t,o=c,_=a}return[Math.round(255*n),Math.round(255*o),Math.round(255*_)]}