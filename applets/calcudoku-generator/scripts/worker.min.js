"use strict";onmessage=function(e){grid_size=e.data[0],max_cage_size=e.data[1],generate_calcudoku_grid(),postMessage(["done"])};let grid_size=null,max_cage_size=null,grid=[],cages=[],cages_by_location=[],num_solutions_found=0;function generate_calcudoku_grid(){grid=[],cages=[],cages_by_location=[],num_solutions_found=0;let e=0;for(;1!=num_solutions_found;)e%5==0&&(grid=generate_number_grid(grid_size)),solve_puzzle(cages=assign_initial_cages(grid)),e++;postMessage(["log","Generated grid after "+e+" attempts."]);let a=[];for(a.push([JSON.parse(JSON.stringify(grid)),JSON.parse(JSON.stringify(cages)),JSON.parse(JSON.stringify(cages_by_location))]);-1!==expand_cages(cages);)a.push([JSON.parse(JSON.stringify(grid)),JSON.parse(JSON.stringify(cages)),JSON.parse(JSON.stringify(cages_by_location))]);for(;a.length>1;){let e=Math.ceil(a.length/3);grid=JSON.parse(JSON.stringify(a[e][0])),cages=JSON.parse(JSON.stringify(a[e][1])),cages_by_location=JSON.parse(JSON.stringify(a[e][2])),postMessage([grid,cages,cages_by_location]),solve_puzzle(cages),num_solutions_found>1?a.splice(e):a.splice(0,e)}grid=JSON.parse(JSON.stringify(a[0][0])),cages=JSON.parse(JSON.stringify(a[0][1])),cages_by_location=JSON.parse(JSON.stringify(a[0][2])),postMessage([grid,cages,cages_by_location])}function generate_number_grid(){let e=[];for(let a=0;a<grid_size;a++){e[a]=[];for(let s=0;s<grid_size;s++)e[a][s]=0}let a=[];for(let e=0;e<grid_size;e++){a[e]=[];for(let s=0;s<grid_size;s++)a[e][s]=[...Array(grid_size).keys()].map(e=>e+1)}let s=[];for(let e=0;e<grid_size;e++)for(let a=0;a<grid_size;a++)s.push([e,a]);return generate_number_grid_step(e,a,s)}function generate_number_grid_step(e,a,s){if(0==s.length)return e;let t=s[Math.floor(Math.random()*s.length)],g=t[0],i=t[1];if(0==a[g][i].length)return!1;for(let t=0;t<a[g][i].length;t++){let c=JSON.parse(JSON.stringify(e)),_=JSON.parse(JSON.stringify(a)),l=JSON.parse(JSON.stringify(s));place_digit(c,_,l,g,i,a[g][i][t]);let o=generate_number_grid_step(c,_,l);if(!1!==o)return o}return!1}function assign_initial_cages(e){let a=[],s=[];for(let e=0;e<grid_size;e++)for(let a=0;a<grid_size;a++)s.push([e,a]);cages_by_location=[];for(let e=0;e<grid_size;e++){cages_by_location[e]=[];for(let a=0;a<grid_size;a++)cages_by_location[e][a]=-1}for(;s.length>0;){let e=Math.floor(Math.random()*s.length),t=s[e],g=t[0],i=t[1];if(Math.random()<.5){let e=pair_in_array([g-1,i],s);if(-1!=e)a.push(["",0,[t,[g-1,i]]]),cages_by_location[g][i]=a.length-1,cages_by_location[g-1][i]=a.length-1,s.splice(e,1);else{let e=pair_in_array([g+1,i],s);-1!=e?(a.push(["",0,[t,[g+1,i]]]),cages_by_location[g][i]=a.length-1,cages_by_location[g+1][i]=a.length-1,s.splice(e,1)):(a.push(["",0,[t]]),cages_by_location[g][i]=a.length-1)}}else{let e=pair_in_array([g,i-1],s);if(-1!=e)a.push(["",0,[t,[g,i-1]]]),cages_by_location[g][i]=a.length-1,cages_by_location[g][i-1]=a.length-1,s.splice(e,1);else{let e=pair_in_array([g,i+1],s);-1!=e?(a.push(["",0,[t,[g,i+1]]]),cages_by_location[g][i]=a.length-1,cages_by_location[g][i+1]=a.length-1,s.splice(e,1)):(a.push(["",0,[t]]),cages_by_location[g][i]=a.length-1)}}e=pair_in_array(t,s),s.splice(e,1)}for(let s=0;s<a.length;s++){let t=e[a[s][2][0][0]][a[s][2][0][1]],g=e[a[s][2][0][0]][a[s][2][0][1]],i=e[a[s][2][0][0]][a[s][2][0][1]];if(a[s][2].length>1&&(e[a[s][2][1][0]][a[s][2][1][1]]>t&&(t=e[a[s][2][1][0]][a[s][2][1][1]]),g+=e[a[s][2][1][0]][a[s][2][1][1]],i*=e[a[s][2][1][0]][a[s][2][1][1]]),a[s].push(t),a[s].push(g),a[s].push(i),1==a[s][2].length){a[s][1]=a[s][3];continue}let c=["+","x"],_=[a[s][4]];if(_.push(e[a[s][2][0][0]][a[s][2][0][1]]*e[a[s][2][1][0]][a[s][2][1][1]]),a[s][4]<=2*a[s][3]&&(c.push("-"),_.push(Math.abs(e[a[s][2][0][0]][a[s][2][0][1]]-e[a[s][2][1][0]][a[s][2][1][1]]))),a[s][3]%e[a[s][2][0][0]][a[s][2][0][1]]==0&&a[s][3]%e[a[s][2][1][0]][a[s][2][1][1]]==0&&(c.push(":"),_.push(a[s][3]*a[s][3]/_[1])),c.includes(":")&&Math.random()<.5){let e=c.indexOf(":");a[s][0]=c[e],a[s][1]=_[e]}else{let e=Math.floor(Math.random()*c.length);a[s][0]=c[e],a[s][1]=_[e]}}return a}function expand_cages(){let e=cages.length-1;for(;void 0!==cages[e][6];)if(-1==--e)return-1;let a=null,s=cages[e][2][0][0],t=cages[e][2][0][1];if(Math.random()<.5)if(0!=s&&cages_by_location[s-1][t]!=e&&try_to_add_cage_to_cage(cages_by_location[s][t],cages_by_location[s-1][t]))a=cages_by_location[s-1][t];else if(s!=grid_size-1&&cages_by_location[s+1][t]!=e&&try_to_add_cage_to_cage(cages_by_location[s][t],cages_by_location[s+1][t]))a=cages_by_location[s+1][t];else if(0!=t&&cages_by_location[s][t-1]!=e&&try_to_add_cage_to_cage(cages_by_location[s][t],cages_by_location[s][t-1]))a=cages_by_location[s][t-1];else{if(t==grid_size-1||cages_by_location[s][t+1]==e||!try_to_add_cage_to_cage(cages_by_location[s][t],cages_by_location[s][t+1]))return void cages[e].push(!0);a=cages_by_location[s][t+1]}else if(0!=t&&cages_by_location[s][t-1]!=e&&try_to_add_cage_to_cage(cages_by_location[s][t],cages_by_location[s][t-1]))a=cages_by_location[s][t-1];else if(t!=grid_size-1&&cages_by_location[s][t+1]!=e&&try_to_add_cage_to_cage(cages_by_location[s][t],cages_by_location[s][t+1]))a=cages_by_location[s][t+1];else if(0!=s&&cages_by_location[s-1][t]!=e&&try_to_add_cage_to_cage(cages_by_location[s][t],cages_by_location[s-1][t]))a=cages_by_location[s-1][t];else{if(s==grid_size-1||cages_by_location[s+1][t]==e||!try_to_add_cage_to_cage(cages_by_location[s][t],cages_by_location[s+1][t]))return void cages[e].push(!0);a=cages_by_location[s+1][t]}add_cage_to_cage(e,a),cages.splice(e,1);for(let a=0;a<grid_size;a++)for(let s=0;s<grid_size;s++)cages_by_location[a][s]>e&&cages_by_location[a][s]--;console.log("Added cage "+e+" to cage "+a)}function try_to_add_cage_to_cage(e,a){if(cages[a][2].length+cages[e][2].length>max_cage_size)return!1;if(""===cages[a][0])return!0;if("+"===cages[a][0])return!0;if("x"===cages[a][0])return!0;if("-"===cages[a][0]&&cages[a][4]+cages[e][4]<=2*Math.max(cages[a][3],cages[e][3]))return!0;if(":"===cages[a][0]){let s=Math.max(cages[a][3],cages[e][3]);if(s*s%(cages[a][5]*cages[e][5])==0)return!0}return!1}function add_cage_to_cage(e,a){if(""===cages[a][0])Math.random()<.5?(cages[a][0]="+",cages[a][1]+=cages[e][4]):(cages[a][0]="x",cages[a][1]*=cages[e][5]);else if("+"===cages[a][0])cages[a][1]+=cages[e][4];else if("x"===cages[a][0])cages[a][1]*=cages[e][5];else if("-"===cages[a][0])cages[a][1]=2*Math.max(cages[a][3],cages[e][3])-(cages[a][4]+cages[e][4]);else if(":"===cages[a][0]){let s=Math.max(cages[a][3],cages[e][3]),t=cages[a][5]*cages[e][5];cages[a][1]=s*s/t}cages[a][2]=cages[a][2].concat(cages[e][2]),cages[a][3]=Math.max(cages[a][3],cages[e][3]),cages[a][4]+=cages[e][4],cages[a][5]*=cages[e][5];for(let s=0;s<cages[e][2].length;s++){let t=cages[e][2][s][0],g=cages[e][2][s][1];cages_by_location[t][g]=a}}function solve_puzzle(e){let a=[];for(let e=0;e<grid_size;e++){a[e]=[];for(let s=0;s<grid_size;s++)a[e][s]=0}let s=[];for(let e=0;e<grid_size;e++){s[e]=[];for(let a=0;a<grid_size;a++)s[e][a]=[...Array(grid_size).keys()].map(e=>e+1)}let t=[];for(let e=0;e<grid_size;e++)for(let a=0;a<grid_size;a++)t.push([e,a]);for(let g=0;g<e.length;g++)if(""===e[g][0])place_digit(a,s,t,e[g][2][0][0],e[g][2][0][1],e[g][1]);else if("+"===e[g][0]){let a=e[g][4]-e[g][2].length+1;for(let t=0;t<e[g][2].length;t++){let i=e[g][2][t][0],c=e[g][2][t][1];for(let e=a+1;e<=grid_size;e++){let a=s[i][c].indexOf(e);-1!=a&&s[i][c].splice(a,1)}}}else if("x"===e[g][0])for(let a=0;a<e[g][2].length;a++){let t=e[g][2][a][0],i=e[g][2][a][1];for(let a=2;a<=grid_size;a++)if(e[g][5]%a!=0){let e=s[t][i].indexOf(a);-1!=e&&s[t][i].splice(e,1)}}num_solutions_found=0,solve_puzzle_step(a,s,t)}function solve_puzzle_step(e,a,s){if(0==s.length)return num_solutions_found++,!0;let t=1e3,g=0;for(let e=0;e<s.length;e++){let i=s[e][0],c=s[e][1];a[i][c].length<t&&(t=a[i][c].length,g=[i,c])}let i=g[0],c=g[1];if(0!=a[i][c].length)for(let t=0;t<a[i][c].length;t++){let g=JSON.parse(JSON.stringify(e)),_=JSON.parse(JSON.stringify(a)),l=JSON.parse(JSON.stringify(s));if(place_digit(g,_,l,i,c,a[i][c][t]),!1!==check_cage(g,cages_by_location[i][c])&&(solve_puzzle_step(g,_,l),num_solutions_found>1))return}}function check_cage(e,a){for(let s=0;s<cages[a][2].length;s++){let t=cages[a][2][s][0],g=cages[a][2][s][1];if(0==e[t][g])return!0}if("+"==cages[a][0]){let s=0;for(let t=0;t<cages[a][2].length;t++){let g=cages[a][2][t][0],i=cages[a][2][t][1];s+=e[g][i]}if(s!=cages[a][1])return!1}else if("x"==cages[a][0]){let s=1;for(let t=0;t<cages[a][2].length;t++){let g=cages[a][2][t][0],i=cages[a][2][t][1];s*=e[g][i]}if(s!=cages[a][1])return!1}else if("-"==cages[a][0]){let s=0;for(let t=0;t<cages[a][2].length;t++){let g=cages[a][2][t][0],i=cages[a][2][t][1];s+=e[g][i]}if(2*cages[a][3]-s!=cages[a][1])return!1}else if(":"==cages[a][0]){let s=1;for(let t=0;t<cages[a][2].length;t++){let g=cages[a][2][t][0],i=cages[a][2][t][1];s*=e[g][i]}if(cages[a][3]*cages[a][3]/s!=cages[a][1])return!1}return!0}function place_digit(e,a,s,t,g,i){e[t][g]=i;for(let e=0;e<grid_size;e++){let s=a[t][e].indexOf(i);-1!=s&&a[t][e].splice(s,1),-1!=(s=a[e][g].indexOf(i))&&a[e][g].splice(s,1)}a[t][g]=[i];let c=pair_in_array([t,g],s);-1!=c&&s.splice(c,1)}function pair_in_array(e,a){for(let s=0;s<a.length;s++)if(a[s][0]==e[0]&&a[s][1]==e[1])return s;return-1}