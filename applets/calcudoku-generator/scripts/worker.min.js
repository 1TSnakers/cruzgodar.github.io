"use strict";onmessage=function(e){grid_size=e.data[0],max_cage_size=e.data[1],generate_calcudoku_grid(),postMessage(["done"])};let grid_size=null,max_cage_size=null,grid=[],cages=[],cages_by_location=[],num_solutions_found=0;function generate_calcudoku_grid(){grid=[],cages=[],cages_by_location=[],generate_number_grid(),assign_initial_cages(),postMessage(["first_grid_complete"]);let e=JSON.parse(JSON.stringify(cages)),s=JSON.parse(JSON.stringify(cages_by_location));for(;;){let a=!1,g=shuffle_array([...Array(cages.length).keys()]);g.sort((e,s)=>cages[e][2].length-cages[s][2].length);for(let t=0;t<g.length;t++){if(-1!==expand_cages(g[t])){a=!0;for(let e=0;e<g.length;e++)g[e]>=cages.length&&g[e]--}solve_puzzle(cages),1!==num_solutions_found?(cages=JSON.parse(JSON.stringify(e)),cages_by_location=JSON.parse(JSON.stringify(s)),num_solutions_found=1):(e=JSON.parse(JSON.stringify(cages)),s=JSON.parse(JSON.stringify(cages_by_location)),postMessage([grid,cages,cages_by_location]))}if(!1===a)return}}function shuffle_array(e){let s=e.length;for(;0!==s;){let a=Math.floor(Math.random()*s),g=e[s-=1];e[s]=e[a],e[a]=g}return e}function generate_number_grid(){grid=[];for(let e=0;e<grid_size;e++){grid[e]=[];for(let s=0;s<grid_size;s++)grid[e][s]=0}for(let e=0;e<grid_size;e++)for(let s=0;s<grid_size;s++)grid[e][s]=(s+e)%grid_size+1;let e=shuffle_array([shuffle_grid_rows,shuffle_grid_rows,shuffle_grid_columns,shuffle_grid_columns,shuffle_grid_digits,shuffle_grid_digits]);for(let s=0;s<6;s++)e[s]()}function shuffle_grid_rows(){let e=shuffle_array([...Array(grid_size).keys()]),s=[];for(let e=0;e<grid_size;e++){s[e]=[];for(let a=0;a<grid_size;a++)s[e][a]=0}for(let a=0;a<grid_size;a++)s[a]=JSON.parse(JSON.stringify(grid[e[a]]));grid=JSON.parse(JSON.stringify(s))}function shuffle_grid_columns(){let e=shuffle_array([...Array(grid_size).keys()]),s=[];for(let e=0;e<grid_size;e++){s[e]=[];for(let a=0;a<grid_size;a++)s[e][a]=0}for(let a=0;a<grid_size;a++)for(let g=0;g<grid_size;g++)s[a][g]=grid[a][e[g]];grid=JSON.parse(JSON.stringify(s))}function shuffle_grid_digits(){let e=shuffle_array([...Array(grid_size).keys()]),s=[];for(let e=0;e<grid_size;e++){s[e]=[];for(let a=0;a<grid_size;a++)s[e][a]=0}for(let a=0;a<grid_size;a++)for(let g=0;g<grid_size;g++)s[a][g]=e[grid[a][g]-1]+1;grid=JSON.parse(JSON.stringify(s))}function assign_initial_cages(){cages=[],cages_by_location=[],cages_by_location=[];for(let e=0;e<grid_size;e++){cages_by_location[e]=[];for(let s=0;s<grid_size;s++){let a=grid[e][s];cages.push(["",a,[[e,s]],a,a,a]),cages_by_location[e][s]=cages.length-1}}}function expand_cages(e){let s=null,a=cages[e][2][0][0],g=cages[e][2][0][1];if(Math.random()<.5)if(0!==a&&cages_by_location[a-1][g]!==e&&try_to_add_cage_to_cage(cages_by_location[a][g],cages_by_location[a-1][g]))s=cages_by_location[a-1][g];else if(a!==grid_size-1&&cages_by_location[a+1][g]!==e&&try_to_add_cage_to_cage(cages_by_location[a][g],cages_by_location[a+1][g]))s=cages_by_location[a+1][g];else if(0!==g&&cages_by_location[a][g-1]!==e&&try_to_add_cage_to_cage(cages_by_location[a][g],cages_by_location[a][g-1]))s=cages_by_location[a][g-1];else{if(g===grid_size-1||cages_by_location[a][g+1]===e||!try_to_add_cage_to_cage(cages_by_location[a][g],cages_by_location[a][g+1]))return;s=cages_by_location[a][g+1]}else if(0!==g&&cages_by_location[a][g-1]!==e&&try_to_add_cage_to_cage(cages_by_location[a][g],cages_by_location[a][g-1]))s=cages_by_location[a][g-1];else if(g!==grid_size-1&&cages_by_location[a][g+1]!==e&&try_to_add_cage_to_cage(cages_by_location[a][g],cages_by_location[a][g+1]))s=cages_by_location[a][g+1];else if(0!==a&&cages_by_location[a-1][g]!==e&&try_to_add_cage_to_cage(cages_by_location[a][g],cages_by_location[a-1][g]))s=cages_by_location[a-1][g];else{if(a===grid_size-1||cages_by_location[a+1][g]===e||!try_to_add_cage_to_cage(cages_by_location[a][g],cages_by_location[a+1][g]))return;s=cages_by_location[a+1][g]}add_cage_to_cage(e,s),cages.splice(e,1);for(let s=0;s<grid_size;s++)for(let a=0;a<grid_size;a++)cages_by_location[s][a]>e&&cages_by_location[s][a]--}function try_to_add_cage_to_cage(e,s){if(cages[s][2].length+cages[e][2].length>max_cage_size)return!1;if(""===cages[s][0])return!0;if("+"===cages[s][0])return!0;if("x"===cages[s][0])return!0;if("-"===cages[s][0]&&cages[s][4]+cages[e][4]<=2*Math.max(cages[s][3],cages[e][3]))return!0;if(":"===cages[s][0]){let a=Math.max(cages[s][3],cages[e][3]);if(a*a%(cages[s][5]*cages[e][5])==0)return!0}return!1}function add_cage_to_cage(e,s){if(""===cages[s][0]){let a=["+","x"],g=[cages[s][1]+cages[e][4],cages[s][1]*cages[e][5]],t=Math.max(cages[s][1],cages[e][3]);if(2*t>=cages[s][1]+cages[e][4]&&(a.push("-"),g.push(2*t-(cages[s][1]+cages[e][4]))),t*t%(cages[s][1]*cages[e][5])==0&&(a.push(":"),g.push(t*t/(cages[s][1]*cages[e][5]))),a.includes(":")&&Math.random()<.5){let e=a.indexOf(":");cages[s][0]=a[e],cages[s][1]=g[e]}else{let e=Math.floor(Math.random()*a.length);cages[s][0]=a[e],cages[s][1]=g[e]}}else if("+"===cages[s][0])cages[s][1]+=cages[e][4];else if("x"===cages[s][0])cages[s][1]*=cages[e][5];else if("-"===cages[s][0])cages[s][1]=2*Math.max(cages[s][3],cages[e][3])-(cages[s][4]+cages[e][4]);else if(":"===cages[s][0]){let a=Math.max(cages[s][3],cages[e][3]),g=cages[s][5]*cages[e][5];cages[s][1]=a*a/g}cages[s][2]=cages[s][2].concat(cages[e][2]),cages[s][3]=Math.max(cages[s][3],cages[e][3]),cages[s][4]+=cages[e][4],cages[s][5]*=cages[e][5];for(let a=0;a<cages[e][2].length;a++){let g=cages[e][2][a][0],t=cages[e][2][a][1];cages_by_location[g][t]=s}}function solve_puzzle(e){let s=[];for(let e=0;e<grid_size;e++){s[e]=[];for(let a=0;a<grid_size;a++)s[e][a]=0}let a=[];for(let e=0;e<grid_size;e++){a[e]=[];for(let s=0;s<grid_size;s++)a[e][s]=[...Array(grid_size).keys()].map(e=>e+1)}let g=[];for(let e=0;e<grid_size;e++)for(let s=0;s<grid_size;s++)g.push([e,s]);for(let t=0;t<e.length;t++)if(""===e[t][0])place_digit(s,a,g,e[t][2][0][0],e[t][2][0][1],e[t][1]);else if("+"===e[t][0]){let s=e[t][4]-e[t][2].length+1;for(let g=0;g<e[t][2].length;g++){let i=e[t][2][g][0],c=e[t][2][g][1];for(let e=s+1;e<=grid_size;e++){let s=a[i][c].indexOf(e);-1!==s&&a[i][c].splice(s,1)}}}else if("x"===e[t][0])for(let s=0;s<e[t][2].length;s++){let g=e[t][2][s][0],i=e[t][2][s][1];for(let s=2;s<=grid_size;s++)if(e[t][5]%s!=0){let e=a[g][i].indexOf(s);-1!==e&&a[g][i].splice(e,1)}}num_solutions_found=0,solve_puzzle_step(s,a,g)}function update_cage_possibilities(e,s,a,g){let t=cages_by_location[e][s];if("+"===cages[t][0]){let e=0;for(let s=0;s<cages[t][2].length;s++){let g=cages[t][2][s][0],i=cages[t][2][s][1];e+=a[g][i]}let s=cages[t][4]-e-cages[t][2].length+1;for(let e=0;e<cages[t][2].length;e++){let a=cages[t][2][e][0],i=cages[t][2][e][1];for(let e=s+1;e<=grid_size;e++){let s=g[a][i].indexOf(e);-1!==s&&g[a][i].splice(s,1)}}}else if("x"===cages[t][0]){let e=1;for(let s=0;s<cages[t][2].length;s++){let g=cages[t][2][s][0],i=cages[t][2][s][1];0!==a[g][i]&&(e*=a[g][i])}for(let s=0;s<cages[t][2].length;s++){let a=cages[t][2][s][0],i=cages[t][2][s][1];for(let s=2;s<=grid_size;s++)if(cages[t][5]/e%s!=0){let e=g[a][i].indexOf(s);-1!==e&&g[a][i].splice(e,1)}}}}function solve_puzzle_step(e,s,a){if(0===a.length)return num_solutions_found++,!0;let g=1e3,t=0;for(let e=0;e<a.length;e++){let i=a[e][0],c=a[e][1];s[i][c].length<g&&(g=s[i][c].length,t=[i,c])}let i=t[0],c=t[1];if(0!==s[i][c].length)for(let g=0;g<s[i][c].length;g++){let t=JSON.parse(JSON.stringify(e)),_=JSON.parse(JSON.stringify(s)),l=JSON.parse(JSON.stringify(a));if(place_digit(t,_,l,i,c,s[i][c][g]),!1!==check_cage(t,cages_by_location[i][c])&&(solve_puzzle_step(t,_,l),num_solutions_found>1))return}}function check_cage(e,s){for(let a=0;a<cages[s][2].length;a++){let g=cages[s][2][a][0],t=cages[s][2][a][1];if(0===e[g][t])return!0}if("+"===cages[s][0]){let a=0;for(let g=0;g<cages[s][2].length;g++){let t=cages[s][2][g][0],i=cages[s][2][g][1];a+=e[t][i]}if(a!==cages[s][1])return!1}else if("x"===cages[s][0]){let a=1;for(let g=0;g<cages[s][2].length;g++){let t=cages[s][2][g][0],i=cages[s][2][g][1];a*=e[t][i]}if(a!==cages[s][1])return!1}else if("-"===cages[s][0]){let a=0;for(let g=0;g<cages[s][2].length;g++){let t=cages[s][2][g][0],i=cages[s][2][g][1];a+=e[t][i]}if(2*cages[s][3]-a!==cages[s][1])return!1}else if(":"===cages[s][0]){let a=1;for(let g=0;g<cages[s][2].length;g++){let t=cages[s][2][g][0],i=cages[s][2][g][1];a*=e[t][i]}if(cages[s][3]*cages[s][3]/a!==cages[s][1])return!1}return!0}function place_digit(e,s,a,g,t,i){e[g][t]=i;for(let e=0;e<grid_size;e++){let a=s[g][e].indexOf(i);-1!==a&&s[g][e].splice(a,1),-1!==(a=s[e][t].indexOf(i))&&s[e][t].splice(a,1)}s[g][t]=[i];let c=pair_in_array([g,t],a);-1!==c&&a.splice(c,1)}function pair_in_array(e,s){for(let a=0;a<s.length;a++)if(s[a][0]===e[0]&&s[a][1]===e[1])return a;return-1}