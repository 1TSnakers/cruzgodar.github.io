"use strict";onmessage=function(e){gridSize=e.data[0],maxCageSize=e.data[1],importScripts("/applets/calcudoku-generator/scripts/solver.js"),Module.onRuntimeInitialized=function(){importScripts("/scripts/wasm-arrays.min.js"),generateCalcudokuGrid()}};let gridSize=null,maxCageSize=null,grid=[],cages=[],cagesByLocation=[],numSolutionsFound=0;function generateCalcudokuGrid(){grid=[],cages=[],cagesByLocation=[],generateNumberGrid(),assignInitialCages();let g=JSON.parse(JSON.stringify(cages)),s=JSON.parse(JSON.stringify(cagesByLocation));for(;;){let a=!1;var i=shuffleArray([...Array(cages.length).keys()]);i.sort((e,a)=>cages[e][2].length-cages[a][2].length);for(let e=0;e<i.length;e++){if(-1!==expandCages(i[e])){a=!0;for(let e=0;e<i.length;e++)i[e]>=cages.length&&i[e]--}1!==(numSolutionsFound=wasmSolvePuzzle(cages))?(cages=JSON.parse(JSON.stringify(g)),cagesByLocation=JSON.parse(JSON.stringify(s)),numSolutionsFound=1):(g=JSON.parse(JSON.stringify(cages)),s=JSON.parse(JSON.stringify(cagesByLocation)),postMessage([grid,cages,cagesByLocation]))}if(!1===a)return}}function shuffleArray(e){let a=e.length;for(;0!==a;){var g=Math.floor(Math.random()*a),s=e[--a];e[a]=e[g],e[g]=s}return e}function generateNumberGrid(){grid=[];for(let a=0;a<gridSize;a++){grid[a]=[];for(let e=0;e<gridSize;e++)grid[a][e]=0}for(let a=0;a<gridSize;a++)for(let e=0;e<gridSize;e++)grid[a][e]=(e+a)%gridSize+1;var a=shuffleArray([shuffleGridRows,shuffleGridRows,shuffleGridColumns,shuffleGridColumns,shuffleGridDigits,shuffleGridDigits]);for(let e=0;e<6;e++)a[e]()}function shuffleGridRows(){var a=shuffleArray([...Array(gridSize).keys()]),g=[];for(let a=0;a<gridSize;a++){g[a]=[];for(let e=0;e<gridSize;e++)g[a][e]=0}for(let e=0;e<gridSize;e++)g[e]=JSON.parse(JSON.stringify(grid[a[e]]));grid=JSON.parse(JSON.stringify(g))}function shuffleGridColumns(){var g=shuffleArray([...Array(gridSize).keys()]),s=[];for(let a=0;a<gridSize;a++){s[a]=[];for(let e=0;e<gridSize;e++)s[a][e]=0}for(let a=0;a<gridSize;a++)for(let e=0;e<gridSize;e++)s[a][e]=grid[a][g[e]];grid=JSON.parse(JSON.stringify(s))}function shuffleGridDigits(){var g=shuffleArray([...Array(gridSize).keys()]),s=[];for(let a=0;a<gridSize;a++){s[a]=[];for(let e=0;e<gridSize;e++)s[a][e]=0}for(let a=0;a<gridSize;a++)for(let e=0;e<gridSize;e++)s[a][e]=g[grid[a][e]-1]+1;grid=JSON.parse(JSON.stringify(s))}function assignInitialCages(){cages=[],cagesByLocation=[],cagesByLocation=[];for(let a=0;a<gridSize;a++){cagesByLocation[a]=[];for(let e=0;e<gridSize;e++){var g=grid[a][e];cages.push(["",g,[[a,e]],g,g,g]),cagesByLocation[a][e]=cages.length-1}}}function expandCages(g){let e=null;var a=cages[g][2][0][0],s=cages[g][2][0][1];if(Math.random()<.5)if(0!==a&&cagesByLocation[a-1][s]!==g&&tryToAddCageToCage(cagesByLocation[a][s],cagesByLocation[a-1][s]))e=cagesByLocation[a-1][s];else if(a!==gridSize-1&&cagesByLocation[a+1][s]!==g&&tryToAddCageToCage(cagesByLocation[a][s],cagesByLocation[a+1][s]))e=cagesByLocation[a+1][s];else if(0!==s&&cagesByLocation[a][s-1]!==g&&tryToAddCageToCage(cagesByLocation[a][s],cagesByLocation[a][s-1]))e=cagesByLocation[a][s-1];else{if(s===gridSize-1||cagesByLocation[a][s+1]===g||!tryToAddCageToCage(cagesByLocation[a][s],cagesByLocation[a][s+1]))return;e=cagesByLocation[a][s+1]}else if(0!==s&&cagesByLocation[a][s-1]!==g&&tryToAddCageToCage(cagesByLocation[a][s],cagesByLocation[a][s-1]))e=cagesByLocation[a][s-1];else if(s!==gridSize-1&&cagesByLocation[a][s+1]!==g&&tryToAddCageToCage(cagesByLocation[a][s],cagesByLocation[a][s+1]))e=cagesByLocation[a][s+1];else if(0!==a&&cagesByLocation[a-1][s]!==g&&tryToAddCageToCage(cagesByLocation[a][s],cagesByLocation[a-1][s]))e=cagesByLocation[a-1][s];else{if(a===gridSize-1||cagesByLocation[a+1][s]===g||!tryToAddCageToCage(cagesByLocation[a][s],cagesByLocation[a+1][s]))return;e=cagesByLocation[a+1][s]}addCageToCage(g,e),cages.splice(g,1);for(let a=0;a<gridSize;a++)for(let e=0;e<gridSize;e++)cagesByLocation[a][e]>g&&cagesByLocation[a][e]--}function tryToAddCageToCage(e,a){if(!(cages[a][2].length+cages[e][2].length>maxCageSize)){if(""===cages[a][0])return!0;if("+"===cages[a][0])return!0;if("x"===cages[a][0])return!0;if("-"===cages[a][0]&&cages[a][4]+cages[e][4]<=2*Math.max(cages[a][3],cages[e][3]))return!0;if(":"===cages[a][0]){var g=Math.max(cages[a][3],cages[e][3]);if(g*g%(cages[a][5]*cages[e][5])==0)return!0}}return!1}function addCageToCage(a,g){var e,s,i;""===cages[g][0]?(s=["+","x"],i=[cages[g][1]+cages[a][4],cages[g][1]*cages[a][5]],2*(e=Math.max(cages[g][1],cages[a][3]))>=cages[g][1]+cages[a][4]&&(s.push("-"),i.push(2*e-(cages[g][1]+cages[a][4]))),e*e%(cages[g][1]*cages[a][5])==0&&(s.push(":"),i.push(e*e/(cages[g][1]*cages[a][5]))),s.includes(":")&&Math.random()<.5?(e=s.indexOf(":"),cages[g][0]=s[e],cages[g][1]=i[e]):(e=Math.floor(Math.random()*s.length),cages[g][0]=s[e],cages[g][1]=i[e])):"+"===cages[g][0]?cages[g][1]+=cages[a][4]:"x"===cages[g][0]?cages[g][1]*=cages[a][5]:"-"===cages[g][0]?cages[g][1]=2*Math.max(cages[g][3],cages[a][3])-(cages[g][4]+cages[a][4]):":"===cages[g][0]&&(s=Math.max(cages[g][3],cages[a][3]),i=cages[g][5]*cages[a][5],cages[g][1]=s*s/i),cages[g][2]=cages[g][2].concat(cages[a][2]),cages[g][3]=Math.max(cages[g][3],cages[a][3]),cages[g][4]+=cages[a][4],cages[g][5]*=cages[a][5];for(let e=0;e<cages[a][2].length;e++){var r=cages[a][2][e][0],c=cages[a][2][e][1];cagesByLocation[r][c]=g}}function wasmSolvePuzzle(){var a=[],g={"":0,"+":1,x:2,"-":3,":":4},s=[],i=[],r=[],c=[],o=[];for(let e=0;e<cages.length;e++)a[e]=g[cages[e][0]],s[e]=cages[e][1],i[e]=cages[e][2].length,r[e]=cages[e][3],c[e]=cages[e][4],o[e]=cages[e][5];let t=[];for(let e=0;e<gridSize;e++)t=t.concat(cagesByLocation[e]);return ccallArrays("solve_puzzle","number",["number","array","array","array","array","array","array","array"],[gridSize,a,s,i,r,c,o,t],{heapIn:"HEAPU32"})}function pairInArray(a,g){for(let e=0;e<g.length;e++)if(g[e][0]===a[0]&&g[e][1]===a[1])return e;return-1}