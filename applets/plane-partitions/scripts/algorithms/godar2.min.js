import{pak}from"./pak.min.js";import{changeOpacity}from"/scripts/src/animation.min.js";import{sleep}from"/scripts/src/utils.min.js";function godar2(index){const l=this.arrays[index];let o=0,n=0;for(;o<l.footprint&&0!==l.numbers[o][l.footprint-1];)o++;for(;n<l.footprint&&0!==l.numbers[l.footprint-1][n];)n++;const h=l.footprint-Math.max(o,n);return[async()=>{await pak.bind(this)(index,!1),this.in2dView=!0},async()=>{var a=new Array(h);for(let s=0;s<h;s++){a[s]=new Array(h);for(let t=0;t<h;t++)a[s][t]=0}await changeOpacity({element:this.wilsonNumbers.canvas,opacity:0,duration:this.animationTime/5});var r,i=await this.addNewArray({index:index+1,numbers:a});await sleep(this.animationTime),await changeOpacity({element:this.wilsonNumbers.canvas,opacity:1,duration:this.animationTime/5});for(let o=0;o<h;o++)for(let t=0;t<h;t++)0!==l.numbers[o][t]&&(r=Array.from({length:l.numbers[o][t]},(_,i)=>i).map(height=>[o,t,height]),await this.moveCubes(l,r,i,r),a[o][t]=l.numbers[o][t],l.numbers[o][t]=0,this.drawAll2dViewText());await sleep(this.animationTime);for(let n=0;n<h;n++)for(let a=0;a<h;a++){l.numbers[n][a]=1/0,l.cubes[n][a]=new Array(this.infiniteHeight);var e=[[n,a,0]];for(let t=0;t<1;t++)l.cubes[n][a][t]=this.addCube(l,a,t,n,0,0,this.asymptoteLightness);this.revealCubes(l,e)}this.drawAll2dViewText()},async()=>{await this.runAlgorithm("pakInverse",index+1,!0);var r=[];for(let i=0;i<h;i++)for(let a=0;a<h;a++)for(let t=0;t<this.arrays[index+1].numbers[i][a];t++)r.push([i,a,t]);await this.uncolorCubes(this.arrays[index+1],r)},async()=>{var a=l.footprint;let r=0;var i=(a-o)*(a-o+1)/2+(a-n)*(a-n+1)/2;for(let e=1;e<a-o;e++)for(let t=a-o-1;t>=e;t--)await toggleDiagonal.bind(this)(l,t,a-o,r/i*6/7),r++;for(let s=1;s<a-n;s++)for(let t=a-n-1;t>=s;t--)await toggleDiagonal.bind(this)(l,a-n,t,r/i*6/7),r++}]}async function toggleDiagonal(array,row,col,hue){var r=array.numbers,t=[];let i=0;for(;row+i<array.footprint&&col+i<array.footprint;)t.push([row+i,col+i,r[row+i][col+i]-1]),i++;console.log(row,col,t),i=t[0][0];let e=t[0][1],a=[];for(let u=r[i][e]-2;0<=u;u--)a.push([i,e,u]);this.colorCubes(array,a,hue),a=[];for(const f of t)0<=f[2]&&a.push(f);await this.colorCubes(array,a,hue);var s,o,n=new Array(t.length);for([s,o]of t.entries()){const i=o[0],e=o[1];let t=0,a=0;i<array.footprint-1&&(t=r[i+1][e]),e<array.footprint-1&&(a=r[i][e+1]),n[s]=Math.max(t,a),t=r[i-1][e],a=r[i][e-1],n[s]+=Math.min(t,a)-r[i][e]}for(let c=0;c<t.length;c++){if(i=t[c][0],e=t[c][1],n[c]>r[i][e]){var l=[];for(let t=r[i][e];t<n[c];t++)array.cubes[i][e][t]=this.addCube(array,e,t,i),l.push([i,e,t]);this.in2dView?this.revealCubes(array,l):await this.revealCubes(array,l)}else if(n[c]<r[i][e]){var h=[];for(let t=r[i][e]-1;t>=n[c];t--)h.push([i,e,t]);this.in2dView?this.deleteCubes(array,h):await this.deleteCubes(array,h)}r[i][e]=n[c],this.in2dView&&this.drawSingleCell2dViewText(array,i,e)}this.in2dView?this.uncolorCubes(array,a):await this.uncolorCubes(array,a),this.recalculateHeights(array),0!==a.length&&await sleep(this.animationTime)}export{godar2};