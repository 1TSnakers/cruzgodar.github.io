import{pak}from"./pak.min.js";import{changeOpacity}from"/scripts/src/animation.min.js";import{sleep}from"/scripts/src/utils.min.js";function godar2(index){const l=this.arrays[index];let s=0,n=0;for(;s<l.footprint&&0!==l.numbers[s][l.footprint-1];)s++;for(;n<l.footprint&&0!==l.numbers[l.footprint-1][n];)n++;const h=l.footprint-Math.max(s,n);return[async()=>{await pak.bind(this)(index,!1),this.in2dView=!0},async()=>{var t=new Array(h);for(let o=0;o<h;o++){t[o]=new Array(h);for(let a=0;a<h;a++)t[o][a]=0}await changeOpacity({element:this.wilsonNumbers.canvas,opacity:0,duration:this.animationTime/5});var r,i=await this.addNewArray({index:index+1,numbers:t});await sleep(this.animationTime),await changeOpacity({element:this.wilsonNumbers.canvas,opacity:1,duration:this.animationTime/5});for(let s=0;s<h;s++)for(let a=0;a<h;a++)0!==l.numbers[s][a]&&(r=Array.from({length:l.numbers[s][a]},(_,i)=>i).map(height=>[s,a,height]),await this.moveCubes(l,r,i,r),t[s][a]=l.numbers[s][a],l.numbers[s][a]=0,this.drawAll2dViewText());await sleep(this.animationTime);for(let n=0;n<h;n++)for(let t=0;t<h;t++){l.numbers[n][t]=1/0,l.cubes[n][t]=new Array(this.infiniteHeight);var e=[[n,t,0]];for(let a=0;a<1;a++)l.cubes[n][t][a]=this.addCube(l,t,a,n,0,0,this.asymptoteLightness);this.revealCubes(l,e)}this.drawAll2dViewText()},async()=>{await this.runAlgorithm("pakInverse",index+1,!0);var r=[];for(let i=0;i<h;i++)for(let t=0;t<h;t++)for(let a=0;a<this.arrays[index+1].numbers[i][t];a++)r.push([i,t,a]);await this.uncolorCubes(this.arrays[index+1],r)},async()=>{var t=l.footprint;let r=0;var i=(t-s)*(t-s+1)/2+(t-n)*(t-n+1)/2;for(let e=1;e<t-s;e++)for(let a=t-s-1;a>=e;a--)await toggleDiagonal.bind(this)(l,a,t-s,r/i*6/7),r++;for(let o=1;o<t-n;o++)for(let a=t-n-1;a>=o;a--)await toggleDiagonal.bind(this)(l,t-n,a,r/i*6/7),r++}]}async function toggleDiagonal(array,row,col,hue){const e=array.numbers;var a=[];let t=0;for(;row+t<array.footprint&&col+t<array.footprint;)a.push([row+t,col+t,e[row+t][col+t]-1]),t++;console.log(row,col,a),t=a[0][0];let r=a[0][1],i=[];for(let l=e[t][r]-2;0<=l;l--)i.push([t,r,l]);this.colorCubes(array,i,hue),i=[],a.forEach(coordinate=>{0<=coordinate[2]&&i.push(coordinate)}),await this.colorCubes(array,i,hue);const o=new Array(a.length);a.forEach((coordinate,index)=>{var a=coordinate[0],t=coordinate[1];let r=0,i=0;a<array.footprint-1&&(r=e[a+1][t]),t<array.footprint-1&&(i=e[a][t+1]),o[index]=Math.max(r,i),r=e[a-1][t],i=e[a][t-1],o[index]+=Math.min(r,i)-e[a][t]}),console.log(row,col,o);for(let h=0;h<a.length;h++){if(t=a[h][0],r=a[h][1],o[h]>e[t][r]){var s=[];for(let a=e[t][r];a<o[h];a++)array.cubes[t][r][a]=this.addCube(array,r,a,t),s.push([t,r,a]);this.in2dView?this.revealCubes(array,s):await this.revealCubes(array,s)}else if(o[h]<e[t][r]){var n=[];for(let a=e[t][r]-1;a>=o[h];a--)n.push([t,r,a]);this.in2dView?this.deleteCubes(array,n):await this.deleteCubes(array,n)}e[t][r]=o[h],this.in2dView&&this.drawSingleCell2dViewText(array,t,r)}this.in2dView?this.uncolorCubes(array,i):await this.uncolorCubes(array,i),this.recalculateHeights(array),0!==i.length&&await sleep(this.animationTime)}export{godar2};