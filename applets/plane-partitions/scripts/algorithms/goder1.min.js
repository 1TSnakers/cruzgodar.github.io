import{sleep}from"/scripts/src/main.min.js";async function godar1(index){var e;let r=this.arrays[index].numbers;var a=new Array(2*r.length),t=new Array(2*r.length);for(let c=0;c<r.length;c++){let e=0;for(;e<r.length&&r[c][e]===1/0;)e++;for(a[c]=e,e=0;e<r.length&&r[e][c]===1/0;)e++;t[c]=e}for(let C=r.length;C<2*r.length;C++)a[C]=0,t[C]=0;var n=Math.max(a[0],t[0]),i=new Array(r.length);for(let M=0;M<r.length;M++){i[M]=new Array(r.length);for(let e=0;e<r.length;e++)r[M][e]===1/0?i[M][e]=this.infiniteHeight:i[M][e]=r[M][e]}await this.addNewArray(index+1,i),await sleep(this.animationTime/2),await this.removeArray(index),await sleep(this.animationTime/2),e=this.arrays[index],r=e.numbers;let s=0,h=0;for(;s<r.length&&0!==r[s][r.length-1];)s++;for(;h<r.length&&0!==r[r.length-1][h];)h++;await this.runAlgorithm("pak",index,!0),await sleep(2*this.animationTime),e=this.arrays[index],r=e.numbers;var B=Math.max(s,h),l=new Array(r.length-B+1),D=[];for(let k=0;k<l.length-1;k++){l[k]=new Array(l.length);for(let t=0;t<l.length-1;t++){l[k][t]=r[k][t];for(let e=0;e<r[k][t];e++)D.push([k,t,e]);r[k][t]=0}l[k][l.length-1]=0}l[l.length-1]=new Array(l.length);for(let I=0;I<l.length;I++)l[l.length-1][I]=0;this.deleteCubes(e,D,!0,!0),await this.addNewArray(index,l),await sleep(this.animationTime/2),await this.runAlgorithm("pakInverse",index,!0),await sleep(2*this.animationTime);var E=2*r.length-a[r.length-1]-t[r.length-1],F=a[0]+t[0],o=new Array(4*r.length),g=new Array(F),m=new Array(4*r.length);for(let V=0;V<4*r.length;V++)o[V]=new Array;for(let N=0;N<F;N++)g[N]=new Array;for(let L=0;L<4*r.length;L++)m[L]=new Array;let w=1;for(let j=0;j<2*r.length;j++)for(let e=0;e<2*r.length;e++)e>=a[j]?o[j+e+1-a[j]-t[e]].push([j,e]):g[a[j]+t[e]-j-e-1].unshift([n-j-1,n-e-1]),m[j+e+1].push([j,e]);var y=new Array(2*r.length);for(let O=0;O<2*r.length;O++)y[O]=new Array(2*r.length);for(let G=1;G<E;G++){var d=[];for(let e=0;e<o[G].length;e++){var f=o[G][e][0],u=o[G][e][1];if(f<r.length-h&&u<r.length-s)for(let e=0;e<this.arrays[index].numbers[f][u];e++)d.push([f,u,e]);e<m[G].length?(y[f][u]=[1,m[G][e]],f<r.length&&u<r.length&&0<this.arrays[index].numbers[f][u]&&(w=Math.max(Math.max(w,m[G][e][0]+1),m[G][e][1]+1))):y[f][u]=[0,g[G][e-m[G].length]]}0!==d.length&&this.colorCubes(this.arrays[index],d,(G-1)/(E-1)*6/7)}await sleep(3*this.animationTime);var x=new Array(n);for(let H=0;H<n;H++){x[H]=new Array(n);for(let e=0;e<n;e++)e<n-a[n-H-1]?x[H][e]=1/0:x[H][e]=0}let J;0<n&&(J=await this.addNewArray(index+1,x),await sleep(this.animationTime/2));var A=new Array(w);for(let q=0;q<w;q++){A[q]=new Array(w);for(let e=0;e<w;e++)A[q][e]=0}var K=await this.addNewArray(index+2,A);for(let z=0;z<r.length-h;z++)for(let t=a[z];t<r.length-s;t++)if(0<this.arrays[index].numbers[z][t]){var p=[],b=[],v=y[z][t][1][0],T=y[z][t][1][1];for(let e=0;e<this.arrays[index].numbers[z][t];e++)p.push([z,t,e]),b.push([v,T,e]);0===y[z][t][0]?(await this.moveCubes(this.arrays[index],p,J,b),x[v][T]=this.arrays[index].numbers[z][t]):(await this.moveCubes(this.arrays[index],p,K,b),A[v][T]=this.arrays[index].numbers[z][t]),this.arrays[index].numbers[z][t]=0,this.in2dView&&this.drawAll2dViewText()}await sleep(3*this.animationTime),await this.runAlgorithm("pakInverse",index,!0),0<n&&await this.runAlgorithm("hillmanGrasslInverse",index+1,!0)}async function godar1Inverse(index){var r=this.arrays[index+1].numbers,a=this.arrays[index].numbers,t=new Array(r.length+2*a.length),n=new Array(r.length+2*a.length);for(let b=0;b<r.length+2*a.length;b++)t[b]=0,n[b]=0;for(let v=0;v<a.length;v++){let e=a.length-1;for(;0<=e&&a[v][e]!==1/0;)e--;for(t[a.length-v-1]=a.length-e-1,e=a.length-1;0<=e&&a[e][v]!==1/0;)e--;n[a.length-v-1]=a.length-e-1}await this.runAlgorithm("pak",index,!0),await sleep(this.animationTime/2),await this.runAlgorithm("pak",index+1,!0),await sleep(3*this.animationTime);let i=[],s=this.arrays[index].numbers;for(let T=0;T<s.length;T++)for(let t=0;t<s.length;t++)if(s[T][t]!==1/0)for(let e=0;e<s[T][t];e++)i.push([T,t,e]);this.uncolorCubes(this.arrays[index],i),i=[],s=this.arrays[index+1].numbers;for(let c=0;c<s.length;c++)for(let t=0;t<s.length;t++)if(s[c][t]!==1/0)for(let e=0;e<s[c][t];e++)i.push([c,t,e]);await this.uncolorCubes(this.arrays[index+1],i);let h=Math.max(t[0],n[0])+2*r.length-1;var e=2*h,l=t[0]+n[0],o=2*r.length,g=new Array(e),m=new Array(l),w=new Array(o);for(let C=0;C<e;C++)g[C]=new Array;for(let M=0;M<l;M++)m[M]=new Array;for(let k=0;k<o;k++){w[k]=new Array(k);for(let e=0;e<k;e++)w[k][e]=-1}for(;t.length<h;)t.push(0);for(;n.length<h;)n.push(0);for(let I=0;I<h;I++)for(let e=0;e<h;e++)e>=t[I]?g[I+e+1-t[I]-n[e]].push([I,e]):m[t[I]+n[e]-I-e-1].unshift([a.length-I-1,a.length-e-1]),I<r.length&&e<r.length&&(w[I+e+1][I]=[I,e]);var y=new Array(r.length);for(let V=0;V<r.length;V++)y[V]=new Array(r.length);var d=new Array(a.length);for(let N=0;N<a.length;N++)d[N]=new Array(a.length);for(let j=h=1;j<l;j++){const i=[];for(let t=0;t<m[j].length;t++){var f=m[j][t][0],u=m[j][t][1];for(let e=0;e<this.arrays[index].numbers[f][u];e++)i.push([f,u,e]);d[f][u]=g[j][t+w[j].length],0!==this.arrays[index].numbers[f][u]&&(h=Math.max(Math.max(h,d[f][u][0]+1),d[f][u][1]+1))}0!==i.length&&this.colorCubes(this.arrays[index],i,(j-1)/(l-1)*6/7)}for(let G=1;G<o;G++){const i=[];for(let t=0;t<w[G].length;t++)if(-1!==w[G][t]){var x=w[G][t][0],A=w[G][t][1];for(let e=0;e<this.arrays[index+1].numbers[x][A];e++)i.push([x,A,e]);y[x][A]=g[G][t],0!==this.arrays[index+1].numbers[x][A]&&(h=Math.max(Math.max(h,y[x][A][0]+1),y[x][A][1]+1))}0!==i.length&&this.colorCubes(this.arrays[index+1],i,(G-1)/(o-1)*6/7)}await sleep(3*this.animationTime);var p=new Array(h);for(let H=0;H<h;H++){p[H]=new Array(h);for(let e=0;e<h;e++)e<t[H]?p[H][e]=1/0:p[H][e]=0}var B=await this.addNewArray(index+2,p);await sleep(this.animationTime/2);for(let q=0;q<a.length;q++)for(let t=0;t<a.length;t++)if(0<this.arrays[index].numbers[q][t]&&this.arrays[index].numbers[q][t]!==1/0){var D=[],E=[],F=d[q][t][0],J=d[q][t][1];for(let e=0;e<this.arrays[index].numbers[q][t];e++)D.push([q,t,e]),E.push([F,J,e]);await this.moveCubes(this.arrays[index],D,B,E),p[F][J]=this.arrays[index].numbers[q][t],this.arrays[index].numbers[q][t]=0,this.in2dView&&this.drawAll2dViewText()}for(let z=0;z<r.length;z++)for(let t=0;t<r.length;t++)if(0<this.arrays[index+1].numbers[z][t]&&this.arrays[index+1].numbers[z][t]!==1/0){var K=[],L=[],O=y[z][t][0],P=y[z][t][1];for(let e=0;e<this.arrays[index+1].numbers[z][t];e++)K.push([z,t,e]),L.push([O,P,e]);await this.moveCubes(this.arrays[index+1],K,B,L),p[O][P]=this.arrays[index+1].numbers[z][t],this.arrays[index+1].numbers[z][t]=0,this.in2dView&&this.drawAll2dViewText()}await this.removeArray(index),await sleep(this.animationTime/2),await this.removeArray(index),await sleep(3*this.animationTime),await this.runAlgorithm("pakInverse",index,!0),await sleep(this.animationTime)}export{godar1,godar1Inverse};