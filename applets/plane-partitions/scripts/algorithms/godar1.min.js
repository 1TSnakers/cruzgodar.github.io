import{sleep}from"/scripts/src/utils.min.js";async function godar1(index){var e;let t=this.arrays[index].numbers;var a=new Array(2*t.length),r=new Array(2*t.length);for(let c=0;c<t.length;c++){let e=0;for(;e<t.length&&t[c][e]===1/0;)e++;for(a[c]=e,e=0;e<t.length&&t[e][c]===1/0;)e++;r[c]=e}for(let C=t.length;C<2*t.length;C++)a[C]=0,r[C]=0;var n=Math.max(a[0],r[0]),i=(await this.runAlgorithm("pak",index,!0),await sleep(2*this.animationTime),e=this.arrays[index],2*(t=e.numbers).length-a[t.length-1]-r[t.length-1]),s=a[0]+r[0],h=new Array(4*t.length),l=new Array(s),o=new Array(4*t.length);for(let M=0;M<4*t.length;M++)h[M]=new Array;for(let k=0;k<s;k++)l[k]=new Array;for(let V=0;V<4*t.length;V++)o[V]=new Array;let g=1;for(let I=0;I<2*t.length;I++)for(let e=0;e<2*t.length;e++)e>=a[I]?h[I+e+1-a[I]-r[e]].push([I,e]):l[a[I]+r[e]-I-e-1].unshift([n-I-1,n-e-1]),o[I+e+1].push([I,e]);var m=new Array(2*t.length);for(let N=0;N<2*t.length;N++)m[N]=new Array(2*t.length);for(let j=1;j<i;j++){var d=[];for(let e=0;e<h[j].length;e++){var y=h[j][e][0],u=h[j][e][1];if(y<t.length&&u<t.length)for(let e=0;e<this.arrays[index].numbers[y][u];e++)d.push([y,u,e]);e<o[j].length?(m[y][u]=[1,o[j][e]],y<t.length&&u<t.length&&0<this.arrays[index].numbers[y][u]&&(g=Math.max(Math.max(g,o[j][e][0]+1),o[j][e][1]+1))):m[y][u]=[0,l[j][e-o[j].length]]}0!==d.length&&this.colorCubes(this.arrays[index],d,(j-1)/(i-1)*6/7)}await sleep(3*this.animationTime);var w=new Array(n);for(let q=0;q<n;q++){w[q]=new Array(n);for(let e=0;e<n;e++)e<n-a[n-q-1]?w[q][e]=1/0:w[q][e]=0}let f;0<n&&(f=await this.addNewArray({index:index+1,numbers:w}),await sleep(this.animationTime/2));var x=new Array(g);for(let z=0;z<g;z++){x[z]=new Array(g);for(let e=0;e<g;e++)x[z][e]=0}var A=await this.addNewArray({index:index+2,numbers:x});for(let B=0;B<t.length;B++)for(let r=a[B];r<t.length;r++)if(0<this.arrays[index].numbers[B][r]){var b=[],p=[],v=m[B][r][1][0],T=m[B][r][1][1];for(let e=0;e<this.arrays[index].numbers[B][r];e++)b.push([B,r,e]),p.push([v,T,e]);0===m[B][r][0]?(await this.moveCubes(this.arrays[index],b,f,p),w[v][T]=this.arrays[index].numbers[B][r]):(await this.moveCubes(this.arrays[index],b,A,p),x[v][T]=this.arrays[index].numbers[B][r]),this.arrays[index].numbers[B][r]=0,this.in2dView&&this.drawAll2dViewText()}await this.removeArray(index),await sleep(3*this.animationTime),this.animationTime/=5,0<n&&await this.runAlgorithm("pakInverse",index,!0),0<g&&await this.runAlgorithm("pakInverse",index+1,!0),this.animationTime*=5}async function godar1Inverse(index){var t=this.arrays[index+1].numbers,a=this.arrays[index].numbers,r=new Array(t.length+2*a.length),n=new Array(t.length+2*a.length);for(let p=0;p<t.length+2*a.length;p++)r[p]=0,n[p]=0;for(let v=0;v<a.length;v++){let e=a.length-1;for(;0<=e&&a[v][e]!==1/0;)e--;for(r[a.length-v-1]=a.length-e-1,e=a.length-1;0<=e&&a[e][v]!==1/0;)e--;n[a.length-v-1]=a.length-e-1}await this.runAlgorithm("pak",index,!0),await sleep(this.animationTime/2),await this.runAlgorithm("pak",index+1,!0),await sleep(3*this.animationTime);let i=[],s=this.arrays[index].numbers;for(let T=0;T<s.length;T++)for(let r=0;r<s.length;r++)if(s[T][r]!==1/0)for(let e=0;e<s[T][r];e++)i.push([T,r,e]);this.uncolorCubes(this.arrays[index],i),i=[],s=this.arrays[index+1].numbers;for(let c=0;c<s.length;c++)for(let r=0;r<s.length;r++)if(s[c][r]!==1/0)for(let e=0;e<s[c][r];e++)i.push([c,r,e]);await this.uncolorCubes(this.arrays[index+1],i);let h=Math.max(r[0],n[0])+2*t.length-1;var e=2*h,l=r[0]+n[0],o=2*t.length,g=new Array(e),m=new Array(l),d=new Array(o);for(let C=0;C<e;C++)g[C]=new Array;for(let M=0;M<l;M++)m[M]=new Array;for(let k=0;k<o;k++){d[k]=new Array(k);for(let e=0;e<k;e++)d[k][e]=-1}for(;r.length<h;)r.push(0);for(;n.length<h;)n.push(0);for(let V=0;V<h;V++)for(let e=0;e<h;e++)e>=r[V]?g[V+e+1-r[V]-n[e]].push([V,e]):m[r[V]+n[e]-V-e-1].unshift([a.length-V-1,a.length-e-1]),V<t.length&&e<t.length&&(d[V+e+1][V]=[V,e]);var y=new Array(t.length);for(let I=0;I<t.length;I++)y[I]=new Array(t.length);var u=new Array(a.length);for(let N=0;N<a.length;N++)u[N]=new Array(a.length);for(let j=h=1;j<l;j++){const i=[];for(let r=0;r<m[j].length;r++){var w=m[j][r][0],f=m[j][r][1];for(let e=0;e<this.arrays[index].numbers[w][f];e++)i.push([w,f,e]);u[w][f]=g[j][r+d[j].length],0!==this.arrays[index].numbers[w][f]&&(h=Math.max(Math.max(h,u[w][f][0]+1),u[w][f][1]+1))}0!==i.length&&this.colorCubes(this.arrays[index],i,(j-1)/(l-1)*6/7)}for(let q=1;q<o;q++){const i=[];for(let r=0;r<d[q].length;r++)if(-1!==d[q][r]){var x=d[q][r][0],A=d[q][r][1];for(let e=0;e<this.arrays[index+1].numbers[x][A];e++)i.push([x,A,e]);y[x][A]=g[q][r],0!==this.arrays[index+1].numbers[x][A]&&(h=Math.max(Math.max(h,y[x][A][0]+1),y[x][A][1]+1))}0!==i.length&&this.colorCubes(this.arrays[index+1],i,(q-1)/(o-1)*6/7)}await sleep(3*this.animationTime);var b=new Array(h);for(let z=0;z<h;z++){b[z]=new Array(h);for(let e=0;e<h;e++)e<r[z]?b[z][e]=1/0:b[z][e]=0}var E=await this.addNewArray({index:index+2,numbers:b});await sleep(this.animationTime/2);for(let B=0;B<a.length;B++)for(let r=0;r<a.length;r++)if(0<this.arrays[index].numbers[B][r]&&this.arrays[index].numbers[B][r]!==1/0){var F=[],G=[],H=u[B][r][0],J=u[B][r][1];for(let e=0;e<this.arrays[index].numbers[B][r];e++)F.push([B,r,e]),G.push([H,J,e]);await this.moveCubes(this.arrays[index],F,E,G),b[H][J]=this.arrays[index].numbers[B][r],this.arrays[index].numbers[B][r]=0,this.in2dView&&this.drawAll2dViewText()}for(let D=0;D<t.length;D++)for(let r=0;r<t.length;r++)if(0<this.arrays[index+1].numbers[D][r]&&this.arrays[index+1].numbers[D][r]!==1/0){var K=[],L=[],O=y[D][r][0],P=y[D][r][1];for(let e=0;e<this.arrays[index+1].numbers[D][r];e++)K.push([D,r,e]),L.push([O,P,e]);await this.moveCubes(this.arrays[index+1],K,E,L),b[O][P]=this.arrays[index+1].numbers[D][r],this.arrays[index+1].numbers[D][r]=0,this.in2dView&&this.drawAll2dViewText()}await this.removeArray(index),await sleep(this.animationTime/2),await this.removeArray(index),await sleep(3*this.animationTime),await this.runAlgorithm("pakInverse",index,!0),await sleep(this.animationTime)}export{godar1,godar1Inverse};