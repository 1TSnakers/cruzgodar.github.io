import{showPage}from"../../../scripts/src/loadPage.min.js";import{PlanePartitions}from"./class.min.js";import{Button,ToggleButton,equalizeTextButtons}from"/scripts/src/buttons.min.js";import{Checkbox}from"/scripts/src/checkboxes.min.js";import{Dropdown}from"/scripts/src/dropdowns.min.js";import{equalizeAppletColumns}from"/scripts/src/layout.min.js";import{$,$$}from"/scripts/src/main.min.js";import{TextBox}from"/scripts/src/textBoxes.min.js";import{Textarea}from"/scripts/src/textareas.min.js";async function load(){const n=new PlanePartitions({canvas:$("#output-canvas"),numbersCanvas:$("#numbers-canvas")}),e=new TextBox({element:$("#resolution-input"),name:"Resolution",value:2e3,minValue:500,maxValue:4e3,onInput:function(){n.resolution=e.value,n.renderer.setSize(n.resolution,n.resolution,!1),n.needNewFrame=!0}}),t=new TextBox({element:$("#edit-array-index-input"),name:"Index to Edit",value:0,onEnter:y,onInput:x}),r=new TextBox({element:$("#remove-array-index-input"),name:"Index to Remove",value:0,onEnter:g}),a=new TextBox({element:$("#algorithm-index-input"),name:"Index to Use",value:0}),o=new Checkbox({element:$("#maximum-speed-checkbox"),name:"Maximum speed",onInput:function(){n.animationTime=o.checked?60:600}}),l=new Dropdown({element:$("#categories-dropdown"),name:"Menus",options:{viewControls:"View Controls",addArray:"Add Array",editArray:"Edit Array",removeArray:"Remove Array",algorithms:"Algorithms"},onInput:function(){c[w].forEach(element=>d.appendChild(element)),c[w].forEach(element=>element.classList.remove("moved-to-left")),c[w].forEach(element=>element.classList.remove("moved-to-right")),w=l.value||"viewControls",c[w].forEach(element=>v.appendChild(element)),equalizeTextButtons(),setTimeout(equalizeTextButtons,10),equalizeAppletColumns(),setTimeout(equalizeAppletColumns,10),"editArray"===w&&x()}}),i=new Textarea({element:$("#add-array-textarea"),name:"Array",allowEnter:!0,onEnter:h}),s=new Textarea({element:$("#edit-array-textarea"),name:"Array",allowEnter:!0,onEnter:y});let m;const u=new ToggleButton({element:$("#switch-view-button"),name0:"Show 2D View",name1:"Show Hex View",onClick0:()=>{n.dimersShown&&m.setState(0),n.show2dView()},onClick1:()=>{n.showHexView()}}),c=(m=new ToggleButton({element:$("#show-dimers-button"),name0:"Show Dimers",name1:"Hide Dimers",onClick0:()=>{n.in2dView&&u.setState(0),n.showDimers()},onClick1:()=>{n.hideDimers()}}),new Button({element:$("#add-array-button"),name:"Add",onClick:h}),new Button({element:$("#edit-array-button"),name:"Edit",onClick:y}),new Button({element:$("#remove-array-button"),name:"Remove",onClick:g}),new Button({element:$("#hillman-grassl-button"),name:"Hillman-Grassl",onClick:()=>n.runAlgorithm("hillmanGrassl",a.value)}),new Button({element:$("#hillman-grassl-inverse-button"),name:"Hillman-Grassl Inverse",onClick:()=>n.runAlgorithm("hillmanGrasslInverse",a.value)}),new Button({element:$("#pak-button"),name:"Pak",onClick:()=>n.runAlgorithm("pak",a.value)}),new Button({element:$("#pak-inverse-button"),name:"Pak Inverse",onClick:()=>n.runAlgorithm("pakInverse",a.value)}),new Button({element:$("#sulzgruber-button"),name:"Sulzgruber",onClick:()=>n.runAlgorithm("sulzgruber",a.value)}),new Button({element:$("#sulzgruber-inverse-button"),name:"Sulzgruber Inverse",onClick:()=>n.runAlgorithm("sulzgruberInverse",a.value)}),new Button({element:$("#rsk-button"),name:"RSK",onClick:()=>n.runAlgorithm("rsk",a.value)}),new Button({element:$("#rsk-inverse-button"),name:"RSK Inverse",onClick:()=>n.runAlgorithm("rskInverse",a.value)}),new Button({element:$("#download-button"),name:"Download",onClick:()=>n.needDownload=!0}),{viewControls:$$(".view-controls-section"),addArray:$$(".add-array-section"),editArray:$$(".edit-array-section"),removeArray:$$(".remove-array-section"),algorithms:$$(".algorithms-section")}),d=$("#category-holder"),v=$("#canvas-landscape-left");let w="viewControls";c[w].forEach(element=>v.appendChild(element));var p=PlanePartitions.generateRandomPlanePartition();async function h(){n.addNewArray(n.arrays.length,PlanePartitions.parseArray(i.value))}async function y(){await n.editArray(t.value,PlanePartitions.parseArray(s.value)),s.value=PlanePartitions.arrayToAscii(n.arrays[t.value].numbers)}function x(){var e=t.value;e>=n.arrays.length||e<0||s.setValue(PlanePartitions.arrayToAscii(n.arrays[e].numbers))}function g(){n.removeArray(r.value)}i.setValue(PlanePartitions.arrayToAscii(p)),n.addNewArray(0,p),showPage()}export{load};