import anime from"/scripts/anime.min.js";import{changeOpacity}from"/scripts/src/animation.min.js";import{convertColor}from"/scripts/src/browser.min.js";async function showHexView(){this.currentlyAnimatingCamera||(this.currentlyAnimatingCamera=!0,this.in2dView&&await changeOpacity({element:this.wilsonNumbers.canvas,opacity:0,duration:this.animationTime/5}),this.in2dView=!1,this.inExactHexView=!0,this.rotationYVelocity=0,this.lastRotationYVelocities=[0,0,0,0],this.updateCameraHeight(!0),await Promise.all([anime({targets:this.orthographicCamera.rotation,x:-.785398163,y:.615479709,z:.523598775,duration:this.animationTime,easing:"easeInOutQuad"}).finished].concat(this.arrays.map(array=>anime({targets:array.cubeGroup.rotation,y:0,duration:this.animationTime,easing:"easeInOutQuad"}).finished),this.arrays.map(array=>anime({targets:array.cubeGroup.position,x:array.centerOffset,y:0,z:-array.centerOffset,duration:this.animationTime,easing:"easeInOutQuad"}).finished))),this.currentlyAnimatingCamera=!1,this.rotationY=0)}async function show2dView(){this.currentlyAnimatingCamera||this.in2dView||(this.dimersShown&&await this.hideDimers(),this.currentlyAnimatingCamera=!0,this.in2dView=!0,this.inExactHexView=!1,this.rotationYVelocity=0,this.lastRotationYVelocities=[0,0,0,0],this.updateCameraHeight(!0),await Promise.all([anime({targets:this.orthographicCamera.rotation,x:-1.570796327,y:0,z:0,duration:this.animationTime,easing:"easeInOutQuad"}).finished].concat(this.arrays.map(array=>anime({targets:array.cubeGroup.rotation,y:0,duration:this.animationTime,easing:"easeInOutQuad"}).finished),this.arrays.map(array=>anime({targets:array.cubeGroup.position,x:array.centerOffset,y:0,z:0,duration:this.animationTime,easing:"easeInOutQuad"}).finished))),this.drawAll2dViewText(),await changeOpacity({element:this.wilsonNumbers.canvas,opacity:1,duration:this.animationTime/5}),this.currentlyAnimatingCamera=!1,this.rotationY=0)}async function updateCameraHeight(force=!1){if(!force){if(this.currentlyAnimatingCamera)return;this.currentlyAnimatingCamera=!0}if(!(1<this.arrays.length&&this.addWalls)){for(let i=this.totalArrayHeight=0;i<this.arrays.length;i++)this.totalArrayHeight=Math.max(this.totalArrayHeight,this.arrays[i].height);this.totalArraySize=Math.max(this.totalArrayFootprint,this.totalArrayHeight);var t=(-this.arrays[0].footprint/2+this.arrays[this.arrays.length-1].centerOffset+this.arrays[this.arrays.length-1].footprint/2)/2;this.hexViewCameraPos=[this.totalArraySize+t,this.totalArraySize+this.totalArrayHeight/3,this.totalArraySize-t],this.addWalls&&(this.hexViewCameraPos[0]+=10,this.hexViewCameraPos[1]+=10,this.hexViewCameraPos[2]+=10),this._2dViewCameraPos=[t,this.totalArraySize+10,0],this.in2dView?(await Promise.all([anime({targets:this.orthographicCamera.position,x:this._2dViewCameraPos[0],y:this._2dViewCameraPos[1],z:this._2dViewCameraPos[2],duration:this.animationTime,easing:"easeInOutQuad",update:()=>this.needNewFrame=!0}).finished,anime({targets:this.orthographicCamera,left:-(this.totalArrayFootprint/2+.5),right:this.totalArrayFootprint/2+.5,top:this.totalArrayFootprint/2+.5,bottom:-(this.totalArrayFootprint/2+.5),duration:this.animationTime,easing:"easeInOutQuad",update:()=>{this.orthographicCamera.updateProjectionMatrix(),this.needNewFrame=!0}}).finished]),this.orthographicCamera.updateProjectionMatrix(),this.currentlyAnimatingCamera=!1,this.drawAll2dViewText(),changeOpacity({element:this.wilsonNumbers.canvas,opacity:1,duration:this.animationTime/5})):(await Promise.all([anime({targets:this.orthographicCamera.position,x:this.hexViewCameraPos[0],y:this.hexViewCameraPos[1],z:this.hexViewCameraPos[2],duration:this.animationTime,easing:"easeInOutQuad",update:()=>this.needNewFrame=!0}).finished,anime({targets:this.orthographicCamera,left:-this.totalArraySize,right:this.totalArraySize,top:this.totalArraySize,bottom:-this.totalArraySize,duration:this.animationTime,easing:"easeInOutQuad",update:()=>{this.orthographicCamera.updateProjectionMatrix(),this.needNewFrame=!0}}).finished]),this.orthographicCamera.updateProjectionMatrix(),this.currentlyAnimatingCamera=!1)}}async function showDimers(){if(!this.currentlyAnimatingCamera){this.dimersShown=!0,this.inExactHexView||await this.showHexView(),this.currentlyAnimatingCamera=!0;const e=[];this.arrays.forEach(array=>{for(let a=0;a<array.footprint;a++)for(let t=0;t<array.footprint;t++){for(let i=0;i<array.cubes[a][t].length;i++)i<array.cubes[a][t].length-1&&e.push(array.cubes[a][t][i].material[2]),a<array.footprint-1&&array.cubes[a+1][t].length>=i+1&&e.push(array.cubes[a][t][i].material[4]),t<array.footprint-1&&array.cubes[a][t+1].length>=i+1&&e.push(array.cubes[a][t][i].material[0]),e.push(array.cubes[a][t][i].material[1]),e.push(array.cubes[a][t][i].material[3]),e.push(array.cubes[a][t][i].material[5]),this.addWalls&&0===a&&e.push(array.rightWall[t][i].material[4]),this.addWalls&&0===t&&e.push(array.leftWall[a][i].material[0]);0!==array.cubes[a][t].length&&e.push(array.floor[a][t].material[2])}}),e.forEach(material=>material.opacity=0),await anime({targets:[this.wilsonHidden.ctx,this.wilsonHidden2.ctx,this.wilsonHidden3.ctx,this.wilsonHidden4.ctx],strokeStyle:"rgba(255, 255, 255, 1)",_alpha:0,duration:this.animationTime/2,easing:"easeOutQuad",update:()=>{this.wilsonHidden.ctx.clearRect(0,0,64,64),this.wilsonHidden.ctx.fillStyle=convertColor(64,64,64,this.wilsonHidden.ctx._alpha),this.wilsonHidden.ctx.fillRect(0,0,64,64),this.wilsonHidden.ctx.fillStyle=convertColor(128,128,128,this.wilsonHidden.ctx._alpha),this.wilsonHidden.ctx.fillRect(4,4,56,56),this.wilsonHidden.ctx.moveTo(42.7,21.3),this.wilsonHidden.ctx.lineTo(21.3,42.7),this.wilsonHidden.ctx.stroke(),this.cubeTexture.needsUpdate=!0,this.wilsonHidden2.ctx.clearRect(0,0,64,64),this.wilsonHidden2.ctx.fillStyle=convertColor(64,64,64,this.wilsonHidden2.ctx._alpha),this.wilsonHidden2.ctx.fillRect(0,0,64,64),this.wilsonHidden2.ctx.fillStyle=convertColor(128,128,128,this.wilsonHidden2.ctx._alpha),this.wilsonHidden2.ctx.fillRect(4,4,56,56),this.wilsonHidden2.ctx.moveTo(21.3,21.3),this.wilsonHidden2.ctx.lineTo(42.7,42.7),this.wilsonHidden2.ctx.stroke(),this.cubeTexture2.needsUpdate=!0,this.wilsonHidden3.ctx.clearRect(0,0,64,64),this.wilsonHidden3.ctx.fillStyle=convertColor(32,32,32,this.addWalls?this.wilsonHidden3.ctx._alpha:0),this.wilsonHidden3.ctx.fillRect(0,0,64,64),this.wilsonHidden3.ctx.fillStyle=convertColor(64,64,64,this.addWalls?this.wilsonHidden3.ctx._alpha:0),this.wilsonHidden3.ctx.fillRect(4,4,56,56),this.wilsonHidden3.ctx.moveTo(42.7,21.3),this.wilsonHidden3.ctx.lineTo(21.3,42.7),this.wilsonHidden3.ctx.stroke(),this.floorTexture.needsUpdate=!0,this.wilsonHidden4.ctx.clearRect(0,0,64,64),this.wilsonHidden4.ctx.fillStyle=convertColor(32,32,32,this.addWalls?this.wilsonHidden4.ctx._alpha:0),this.wilsonHidden4.ctx.fillRect(0,0,64,64),this.wilsonHidden4.ctx.fillStyle=convertColor(64,64,64,this.addWalls?this.wilsonHidden4.ctx._alpha:0),this.wilsonHidden4.ctx.fillRect(4,4,56,56),this.wilsonHidden4.ctx.moveTo(21.3,21.3),this.wilsonHidden4.ctx.lineTo(42.7,42.7),this.wilsonHidden4.ctx.stroke(),this.floorTexture2.needsUpdate=!0}}).finished,this.currentlyAnimatingCamera=!1}}async function hideDimers(){if(!this.currentlyAnimatingCamera){this.currentlyAnimatingCamera=!0,this.dimersShown=!1;const e=[];this.arrays.forEach(array=>{for(let a=0;a<array.footprint;a++)for(let t=0;t<array.footprint;t++){for(let i=0;i<array.cubes[a][t].length;i++)i<array.cubes[a][t].length-1&&e.push(array.cubes[a][t][i].material[2]),a<array.footprint-1&&array.cubes[a+1][t].length>=i+1&&e.push(array.cubes[a][t][i].material[4]),t<array.footprint-1&&array.cubes[a][t+1].length>=i+1&&e.push(array.cubes[a][t][i].material[0]),e.push(array.cubes[a][t][i].material[1]),e.push(array.cubes[a][t][i].material[3]),e.push(array.cubes[a][t][i].material[5]);0!==array.cubes[a][t].length&&e.push(array.floor[a][t].material[2])}if(this.addWalls)for(let t=0;t<this.wallWidth;t++)for(let i=0;i<this.wallHeight;i++)e.push(array.leftWall[t][i].material[0]),e.push(array.rightWall[t][i].material[4])}),await anime({targets:[this.wilsonHidden.ctx,this.wilsonHidden2.ctx,this.wilsonHidden3.ctx,this.wilsonHidden4.ctx],strokeStyle:"rgba(255, 255, 255, 0)",_alpha:1,duration:this.animationTime/2,easing:"easeOutQuad",update:()=>{this.wilsonHidden.ctx.clearRect(0,0,64,64),this.wilsonHidden.ctx.fillStyle=convertColor(64,64,64,this.wilsonHidden.ctx._alpha),this.wilsonHidden.ctx.fillRect(0,0,64,64),this.wilsonHidden.ctx.fillStyle=convertColor(128,128,128,this.wilsonHidden.ctx._alpha),this.wilsonHidden.ctx.fillRect(4,4,56,56),this.wilsonHidden.ctx.moveTo(42.7,21.3),this.wilsonHidden.ctx.lineTo(21.3,42.7),this.wilsonHidden.ctx.stroke(),this.cubeTexture.needsUpdate=!0,this.wilsonHidden2.ctx.clearRect(0,0,64,64),this.wilsonHidden2.ctx.fillStyle=convertColor(64,64,64,this.wilsonHidden2.ctx._alpha),this.wilsonHidden2.ctx.fillRect(0,0,64,64),this.wilsonHidden2.ctx.fillStyle=convertColor(128,128,128,this.wilsonHidden2.ctx._alpha),this.wilsonHidden2.ctx.fillRect(4,4,56,56),this.wilsonHidden2.ctx.moveTo(21.3,21.3),this.wilsonHidden2.ctx.lineTo(42.7,42.7),this.wilsonHidden2.ctx.stroke(),this.cubeTexture2.needsUpdate=!0,this.wilsonHidden3.ctx.clearRect(0,0,64,64),this.wilsonHidden3.ctx.fillStyle=convertColor(32,32,32,this.addWalls?this.wilsonHidden3.ctx._alpha:0),this.wilsonHidden3.ctx.fillRect(0,0,64,64),this.wilsonHidden3.ctx.fillStyle=convertColor(64,64,64,this.addWalls?this.wilsonHidden3.ctx._alpha:0),this.wilsonHidden3.ctx.fillRect(4,4,56,56),this.wilsonHidden3.ctx.moveTo(42.7,21.3),this.wilsonHidden3.ctx.lineTo(21.3,42.7),this.wilsonHidden3.ctx.stroke(),this.floorTexture.needsUpdate=!0,this.wilsonHidden4.ctx.clearRect(0,0,64,64),this.wilsonHidden4.ctx.fillStyle=convertColor(32,32,32,this.addWalls?this.wilsonHidden4.ctx._alpha:0),this.wilsonHidden4.ctx.fillRect(0,0,64,64),this.wilsonHidden4.ctx.fillStyle=convertColor(64,64,64,this.addWalls?this.wilsonHidden4.ctx._alpha:0),this.wilsonHidden4.ctx.fillRect(4,4,56,56),this.wilsonHidden4.ctx.moveTo(21.3,21.3),this.wilsonHidden4.ctx.lineTo(42.7,42.7),this.wilsonHidden4.ctx.stroke(),this.floorTexture2.needsUpdate=!0}}).finished,e.forEach(material=>material.opacity=1),this.currentlyAnimatingCamera=!1}}export{showHexView,show2dView,updateCameraHeight,showDimers,hideDimers};