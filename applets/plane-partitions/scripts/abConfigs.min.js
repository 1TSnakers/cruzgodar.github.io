import{PlanePartitions}from"./class.min.js";const absoluteMinAEntry=-5;function isValidABConfig({lambda,mu,nu,A,B}){if(!PlanePartitions.verifyPp(A)||!PlanePartitions.verifyPp(B))return!1;for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);const t=[];let n=0,a=0;for(;A[n][0]===1/0;)n++;for(;A[0][a]===1/0;)a++;if(A[n-1][a-1]!==1/0)throw new Error("Infinite part of A is not rectangular!");for(let c=0;c<A.length;c++)for(let e=0;e<A[c].length;e++){const v=c-n,x=e-a;if(!(v<0&&x<0)){const y=0<=v&&v<nu.length&&0<=x&&x<nu[v];var r=0<=x?lambda[x]:1/0,i=0<=v?mu[v]:1/0;if(A[c][e]>Math.min(r,i))return!1;if(0<=v&&0<=x){if(B[v][x]<0)return!1;if(y&&B[v][x]>Math.max(r,i))return!1;if(!y&&B[v][x]>Math.min(r,i))return!1;if(!y&&A[c][e]!==-1/0)return!1}else if(A[c][e]<0)return!1;var[l,o]=v<0?[lambda[x],0]:x<0?[mu[v],0]:y?[Math.min(lambda[x],mu[v]),Math.max(lambda[x],mu[v])]:[0,Math.min(lambda[x],mu[v])];for(let n=y?absoluteMinAEntry:0;n<Math.max(l,o);n++){var[u,m]=(()=>{if(v<0)return[1,1];if(x<0)return[1,2];if(n<0)return[1,3];if(y&&n<Math.min(lambda[x],mu[v]))return[3,0];if(!y)return[2,3];if(n>=lambda[x])return[2,1];if(n>=mu[v])return[2,2];throw new Error("Region/label code is broken")})(),h=A[c][e]<=n&&n<l,g=0<=v&&0<=x&&B[v][x]<=n&&n<o,f=0<=v&&0<=x&&n<o&&0<=n;(1===u&&h||2===u&&!g&&f||3===u&&(h&&!g||!h&&g))&&t.push([v,x,n,m])}}}var s=[];const b=structuredClone(t),d=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]];for(;0!==b.length;){let n=[],e=[b[0]];for(b.splice(0,1);0!==e.length;){const M=[];e.forEach(activeBox=>{d.forEach(direction=>{var n=boxIsInArray([activeBox[0]+direction[0],activeBox[1]+direction[1],activeBox[2]+direction[2]],b);-1!==n&&(M.push(b[n]),b.splice(n,1))})}),n=n.concat(e),e=M}s.push(n)}for(let C=0;C<s.length;C++){var e=new Set(s[C].map(box=>box[3]));if(e.delete(0),1<e.size)return[!1,void 0];if(0!==e.size){const[p]=e;s[C].forEach(box=>{var n=boxIsInArray(box,t);t[n][3]=p})}}return[!0,t]}function boxIsInArray(box,array){for(let e=0;e<array.length;e++){var n=array[e];if(n[0]===box[0]&&n[1]===box[1]&&n[2]===box[2])return e}return-1}function getAsciiLabel(box,boxes){var n=boxIsInArray(box,boxes);return-1===n?"?":0===(n=boxes[n][3])?"*":""+n}function getMinimalABConfig({lambda,mu,nu,negativeWidth=2}){for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);var e=new Array(negativeWidth+mu.length),t=new Array(mu.length);for(let i=0;i<e.length;i++){e[i]=new Array(negativeWidth+lambda.length),i>=negativeWidth&&(t[i-negativeWidth]=new Array(lambda.length));for(let n=0;n<e[i].length;n++){const l=i-negativeWidth,o=n-negativeWidth;if(l<0&&o<0)e[i][n]=1/0;else{const u=0<=l&&l<nu.length&&0<=o&&o<nu[l];var[a,r]=l<0?[lambda[o],0]:o<0?[mu[l],0]:u?[Math.min(lambda[o],mu[l]),Math.max(lambda[o],mu[l])]:[-1/0,Math.min(lambda[o],mu[l])];e[i][n]=a,0<=l&&0<=o&&(t[l][o]=r)}}}return[e,t]}function iterateThroughEntries({lambda,mu,nu,A,B,i,j}){for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);let n=0,e=0;for(;A[n][0]===1/0;)n++;for(;A[0][e]===1/0;)e++;var r=i-n,l=j-e;if(!(r<0&&l<0)){var t=0<=r&&r<nu.length&&0<=l&&l<nu[r],o=0<=r&&0<=l&&!t?-1/0:Math.min(0===i?lambda[l]:A[i-1][j],0===j?mu[r]:A[i][j-1]),u=Math.max(Math.max(i===A.length-1?-1/0:A[i+1][j],j===A[0].length-1?-1/0:A[i][j+1]),t?absoluteMinAEntry:0),m=0<=r&&0<=l?Math.min(0==r?Math.max(lambda[l],mu[r]):B[r-1][l],0==l?Math.max(lambda[l],mu[r]):B[r][l-1]):1/0,h=0<=r&&0<=l?Math.max(r==B.length-1?0:B[1+r][l],l==B[0].length-1?0:B[r][1+l]):1/0,g=structuredClone(A),f=structuredClone(B);let a="";if(o===-1/0)for(let n=m;n>=h;n--){f[r][l]=n;var s=isValidABConfig({lambda:lambda,mu:mu,nu:nu,A:g,B:f});if(s[0]){let n=getAsciiLabel([r,l,g[i][j]],s[1]);"?"===n&&0<=r&&0<=l&&(n=getAsciiLabel([r,l,f[r][l]],s[1])),a=a+n+" "}else a+="  "}else if(m===1/0)for(let e=o;e>=u;e--){g[i][j]=e;var b=isValidABConfig({lambda:lambda,mu:mu,nu:nu,A:g,B:f});if(b[0]){let n=getAsciiLabel([r,l,g[i][j]],b[1]);"?"===n&&0<=r&&0<=l&&(n=getAsciiLabel([r,l,f[r][l]],b[1])),a=a+(e===absoluteMinAEntry?"v":n)+"\n"}else a+="\n"}else for(let t=o;t>=u;t--){for(let n=m;n>=h;n--){g[i][j]=t,f[r][l]=n;var d=isValidABConfig({lambda:lambda,mu:mu,nu:nu,A:g,B:f});if(d[0]){let n=getAsciiLabel([r,l,g[i][j]],d[1]);"?"===n&&0<=r&&0<=l&&(n=getAsciiLabel([r,l,f[r][l]],d[1])),a=a+(t===absoluteMinAEntry?"v":n)+" "}else a+="  "}a+="\n"}return a}}function printABConfig({A,B}){let e="",t=0,n=0;for(;A[t][0]===1/0;)t++;for(;A[0][n]===1/0;)n++;let a=2;for(let u=0;u<A[0].length;u++)for(let n=0;n<A.length;n++){var r=Math.abs(A[n][u])===1/0?1:(""+A[n][u]).length;a=Math.max(a,r+1)}for(let m=0;m<A.length;m++){var i=m-t;for(let n=0;n<A[m].length;n++){var l=A[m][n]===1/0?"^":A[m][n]===-1/0?"v":""+A[m][n],o=a-l.length;e+=" ".repeat(o-1)+l+" "}if(0<=i){e+="  ";for(let n=0;n<B[i].length;n++)e+=B[i][n]+" "}e+="\n"}console.log(e)}function testAllEntriesOfABConfig({lambda,mu,nu,A,B,onlyUnboundedBelow=!1}){let e=0,t=0;for(;A[e][0]===1/0;)e++;for(;A[0][t]===1/0;)t++;for(let u=0;u<A.length;u++)for(let n=0;n<A.length;n++){var a,r,i,l,o;u<e&&n<t||(a=this.iterateThroughEntries({A:A,B:B,lambda:lambda,mu:mu,nu:nu,i:u,j:n}),onlyUnboundedBelow||(console.log(u,n),console.log(a)),r=u-e,i=n-t,0<=r&&0<=i&&r<nu.length&&i==nu[r]-1&&(nu[r]--,l=structuredClone(A),o=structuredClone(B),l[u][n]=-1/0,o[r][i]=Math.min(lambda[i],mu[r]),onlyUnboundedBelow&&(console.log(u,n),console.log(a)),console.log(this.iterateThroughEntries({A:l,B:o,lambda:lambda,mu:mu,nu:nu,i:u,j:n})),nu[r]++))}}function getArrayVersionOfABConfig({lambda,mu,nu,A,B}){let e=0,t=0;for(;A[e][0]===1/0;)e++;for(;A[0][t]===1/0;)t++;var a=new Array(16),r=new Array(16);for(let o=0;o<16;o++){a[o]=new Array(16),r[o]=new Array(16);for(let n=0;n<16;n++){var i=o-8+e,l=n-8+t;if(0<=i&&i<A.length&&0<=l&&l<A[i].length)a[o][n]=Math.min(Math.max(A[i][l]+8,0),16);else{const u=n-8<0?1/0:n-8>=lambda.length?0:lambda[n-8],m=o-8<0?1/0:o-8>=mu.length?0:mu[o-8];i=0<=o-8&&o-8<nu.length&&n-8<nu[o-8]||o-8<0||n-8<0?Math.min(u,m):-1/0;a[o][n]=Math.min(Math.max(i+8,0),16)}16===a[o][n]&&(a[o][n]=1/0),o<B.length&&n<B[o].length?r[o][n]=B[o][n]:r[o][n]=0}}return[a,r]}function getABConfigRegions({bigA,bigB,lambda,mu,nu}){var t=[],a=[],r=[],i=[];for(let f=0;f<bigA.length;f++)for(let e=0;e<bigA[f].length;e++)if(bigA[f][e]!==1/0){var l=f-8,o=e-8,u=0<=l&&l<nu.length&&0<=o&&o<nu[l],m=bigA[f][e],h=0<=l&&0<=o?bigB[l][o]+8:0;for(let n=0;n<Math.max(m,h);n++){var g=n-8;switch(u+(0<=o&&o<lambda.length&&0<=g&&g<lambda[o])+(0<=l&&l<mu.length&&0<=g&&g<mu[l])){case 1:t.push([f,e,n]);break;case 2:a.push([l,o,g]);break;case 3:r.push([f,e,n]),i.push([l,o,g])}}}return[t,a,r,i]}async function colorABConfigRegions({bigA,bigB,lambda,mu,nu,arrayA,arrayB}){var n=getABConfigRegions({bigA:bigA,bigB:bigB,lambda:lambda,mu:mu,nu:nu});await this.colorCubes(arrayA,n[0],.05,.5),await this.colorCubes(arrayA,n[2],.7,.6),await this.colorCubes(arrayB,n[1],.15,.6),await this.colorCubes(arrayB,n[3],.7,.6)}export{isValidABConfig,getMinimalABConfig,iterateThroughEntries,printABConfig,testAllEntriesOfABConfig,getArrayVersionOfABConfig,colorABConfigRegions};