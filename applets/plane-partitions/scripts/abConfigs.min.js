function isValidABConfig({lambda,mu,nu,A,B}){for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);var e=[];let n=0,a=0;for(;A[n][0]===1/0;)n++;for(;A[0][a]===1/0;)a++;if(A[n-1][a-1]!==1/0)throw new Error("Infinite part of A is not rectangular!");for(let b=0;b<A.length;b++)for(let t=0;t<A[b].length;t++){const s=b-n,c=t-a;if(!(s<0&&c<0)){const v=0<=s&&s<nu.length&&0<=c&&c<nu[s];var[r,l]=s<0?[lambda[c],0]:c<0?[mu[s],0]:v?[Math.min(lambda[c],mu[s]),Math.max(lambda[c],mu[s])]:[0,Math.min(lambda[c],mu[s])];for(let n=v?-5:0;n<Math.max(r,l);n++){var[i,o]=(()=>{if(s<0)return[1,1];if(c<0)return[1,2];if(n<0)return[1,3];if(v&&n<Math.min(lambda[c],mu[s]))return[3,0];if(!v)return[2,3];if(n>=lambda[c])return[2,1];if(n>=mu[s])return[2,2];throw new Error("Region/label code is broken")})(),u=A[b][t]<=n&&n<r,h=0<=s&&0<=c&&B[s][c]<=n&&n<l,m=0<=s&&0<=c&&n<l&&0<=n;(1===i&&u||2===i&&!h&&m||3===i&&(u&&!h||!u&&h))&&e.push([s,c,n,o])}}}var f=[];const g=structuredClone(e),d=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]];for(;0!==g.length;){let n=[],t=[g[0]];for(g.splice(0,1);0!==t.length;){const x=[];t.forEach(activeBox=>{d.forEach(direction=>{var n=boxIsInArray([activeBox[0]+direction[0],activeBox[1]+direction[1],activeBox[2]+direction[2]],g);-1!==n&&(x.push(g[n]),g.splice(n,1))})}),n=n.concat(t),t=x}f.push(n)}for(let p=0;p<f.length;p++){var t=new Set(f[p].map(box=>box[3]));if(t.delete(0),1<t.size)return!1}return!0}function boxIsInArray(box,array){for(let t=0;t<array.length;t++){var n=array[t];if(n[0]===box[0]&&n[1]===box[1]&&n[2]===box[2])return t}return-1}function getMinimalABConfig({lambda,mu,nu,negativeWidth=2}){for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);var t=new Array(negativeWidth+mu.length),e=new Array(mu.length);for(let l=0;l<t.length;l++){t[l]=new Array(negativeWidth+lambda.length),l>=negativeWidth&&(e[l-negativeWidth]=new Array(lambda.length));for(let n=0;n<t[l].length;n++){const i=l-negativeWidth,o=n-negativeWidth;if(i<0&&o<0)t[l][n]=1/0;else{const u=0<=i&&i<nu.length&&0<=o&&o<nu[i];var[a,r]=i<0?[lambda[o],0]:o<0?[mu[i],0]:u?[Math.min(lambda[o],mu[i]),Math.max(lambda[o],mu[i])]:[-1/0,Math.min(lambda[o],mu[i])];t[l][n]=a,0<=i&&0<=o&&(e[i][o]=r)}}}return[t,e]}function iterateThroughEntries({lambda,mu,nu,A,B,i,j}){for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);let n=0,t=0;for(;A[n][0]===1/0;)n++;for(;A[0][t]===1/0;)t++;var a=i-n,r=j-t;if(!(a<0&&r<0)){var l=0<=a&&a<nu.length&&0<=r&&r<nu[a],o=A[i][j],u=Math.max(Math.max(i===A.length-1?-1/0:A[i+1][j],j===A[0].length-1?-1/0:A[i][j+1]),l?-5:0),h=B[a][r],m=Math.max(a==B.length-1?0:B[1+a][r],r==B[0].length-1?0:B[r][1+r]),f=structuredClone(A),g=structuredClone(B);let e="";if(o===-1/0)for(let n=h;n>=m;n--)g[a][r]=n,isValidABConfig({lambda:lambda,mu:mu,nu:nu,A:f,B:g})?e+="* ":e+="  ";else for(let t=o;t>=u;t--){for(let n=h;n>=m;n--)f[i][j]=t,g[a][r]=n,isValidABConfig({lambda:lambda,mu:mu,nu:nu,A:f,B:g})?e+="* ":e+="  ";e+="\n"}console.log(e)}}function printABConfig({A,B}){let t="",e=0,n=0;for(;A[e][0]===1/0;)e++;for(;A[0][n]===1/0;)n++;for(let l=0;l<A.length;l++){var a=l-e;for(let n=0;n<A[l].length;n++){var r=A[l][n]===1/0?"^":A[l][n]===-1/0?"v":A[l][n];t+=r+" "}if(0<=a){t+="  ";for(let n=0;n<B[a].length;n++)t+=B[a][n]+" "}t+="\n"}console.log(t)}export{isValidABConfig,getMinimalABConfig,iterateThroughEntries,printABConfig};