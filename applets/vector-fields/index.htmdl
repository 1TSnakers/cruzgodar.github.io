After teaching direction fields in calculus II, I felt like I had to try making this applet. A function $y = f(x)$ takes in one variable and outputs one, and so we typically represent it as a 2D plot. In comparison, a function $z = f(x, y)$ takes in two variables and outputs one, so we usually represent it as a 3D surface. If we step up the number of output variables, we get a function $F(x, y) = (f_1(x, y), f_2(x, y))$ that takes in two variables and outputs two. The way these are typically represented is as a **vector field**: every point $(x, y)$ in 2D space has a 2D vector associated with it. A good analogy is a wind map, with every location having a different direction and strength of wind. In fact, that's the exact way this applet works. Particles appear, flow according to the vector field, and eventually disappear, and in the process, they illustrate the structure of the field: the particles' colors are determined by their direction and their saturation by their speed.

A particular kind of vector field is called a **direction field**, generated by a differential equation. To plot the direction field for $y' = f(x, y)$, just set the $x$-component of each vector to $1$ --- i.e., $F(x, y) = (1, f(x, y))$. For any field, drag, pinch, and scroll to move around.
	
### wilson glsl

### dropdown examples



<div id="canvas-landscape">

<div id="canvas-landscape-left">

<div class="text-field-container">
	<textarea cols="16" rows="4" name="code-textarea" id="code-textarea" class="text-field" style="font-family: 'Source Code Pro', monospace">(sin(1.5y), -sin(1.5x))</textarea>
	<p class="body-text" style="text-align: center">$F(x, y)$</p>
</div>

### checkbox raw-glsl

### buttons
	generate
###

### text-boxes
	resolution
	max-particles
	lifetime
###

### sliders
	speed
###

</div>



<div id="canvas-landscape-middle">

### canvas

</div>



<div id="canvas-landscape-right">

### buttons
	download
###

</div>

</div>



### glsl-docs