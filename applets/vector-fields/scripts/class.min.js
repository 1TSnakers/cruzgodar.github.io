"use strict";class VectorField extends Applet{load_promise=null;resolution=500;num_particles=0;max_particles=5e3;aspect_ratio=1;zoom_level=.6515;fixed_point_x=0;fixed_point_y=0;dt=.0075;lifetime=64;last_timestamp=-1;particles=[];free_particle_slots=[];update_texture=null;dim_texture=null;update_canvas=null;dim_canvas=null;wilson_update=null;wilson_dim=null;pan_velocity_x=0;pan_velocity_y=0;zoom_velocity=0;next_pan_velocity_x=0;next_pan_velocity_y=0;next_zoom_velocity=0;last_pan_velocities_x=[];last_pan_velocities_y=[];last_zoom_velocities=[];pan_friction=.96;pan_velocity_start_threshhold=25e-5;pan_velocity_stop_threshhold=25e-5;zoom_friction=.9;zoom_velocity_start_threshhold=.002;zoom_velocity_stop_threshhold=.002;constructor(i){super(i),this.update_canvas=document.createElement("canvas"),this.update_canvas.classList.add("hidden-canvas"),this.hidden_canvases.push(this.update_canvas),Page.element.appendChild(this.update_canvas),this.dim_canvas=document.createElement("canvas"),this.dim_canvas.classList.add("hidden-canvas"),this.hidden_canvases.push(this.dim_canvas),Page.element.appendChild(this.dim_canvas);let t={renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",canvas_width:100,canvas_height:100};this.wilson_update=new Wilson(this.update_canvas,t),this.wilson_update.render.create_framebuffer_texture_pair(),this.wilson_update.gl.bindTexture(this.wilson_update.gl.TEXTURE_2D,this.wilson_update.render.framebuffers[0].texture),this.wilson_update.gl.bindFramebuffer(this.wilson_update.gl.FRAMEBUFFER,null);let e=`
   precision highp float;
   precision highp sampler2D;
   
   varying vec2 uv;
   
   uniform sampler2D u_texture;
   
   void main(void)
   {
    vec3 v = texture2D(u_texture, (uv + vec2(1.0, 1.0)) / 2.0).xyz;
    
    gl_FragColor = vec4(v.x - 1.0 / 255.0, v.y, v.z, 1.0);
   }
  `,s=`
   precision highp float;
   precision highp sampler2D;
   
   varying vec2 uv;
   
   uniform sampler2D u_texture;
   
   uniform vec2 pan;
   
   void main(void)
   {
    vec2 tex_coord = (uv + vec2(1.0, 1.0)) / 2.0 - pan;
    
    if (tex_coord.x >= 0.0 && tex_coord.x < 1.0 && tex_coord.y >= 0.0 && tex_coord.y < 1.0)
    {
     vec3 v = texture2D(u_texture, tex_coord).xyz;
     
     gl_FragColor = vec4(v.x, v.y, v.z, 1.0);
     
     return;
    }
    
    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
   }
  `,o=`
   precision highp float;
   precision highp sampler2D;
   
   varying vec2 uv;
   
   uniform sampler2D u_texture;
   
   uniform float scale;
   uniform vec2 fixed_point;
   
   void main(void)
   {
    vec2 tex_coord = ((uv + vec2(1.0, 1.0)) / 2.0 - fixed_point) * scale + fixed_point;
    
    if (tex_coord.x >= 0.0 && tex_coord.x < 1.0 && tex_coord.y >= 0.0 && tex_coord.y < 1.0)
    {
     vec3 v = texture2D(u_texture, tex_coord).xyz;
     
     gl_FragColor = vec4(v.x / 1.06, v.y, v.z, 1.0);
     
     return;
    }
    
    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
   }
  `,a={renderer:"gpu",shader:e,canvas_width:this.resolution,canvas_height:this.resolution};this.wilson_dim=new Wilson(this.dim_canvas,a),this.wilson_dim.render.load_new_shader(s),this.wilson_dim.render.init_uniforms(["pan"],1),this.wilson_dim.gl.useProgram(this.wilson_dim.render.shader_programs[0]),this.wilson_dim.render.load_new_shader(o),this.wilson_dim.render.init_uniforms(["scale","fixed_point"],2),this.wilson_dim.gl.useProgram(this.wilson_dim.render.shader_programs[0]),this.wilson_dim.render.create_framebuffer_texture_pair(this.wilson_dim.gl.UNSIGNED_BYTE),this.wilson_dim.gl.bindTexture(this.wilson_dim.gl.TEXTURE_2D,this.wilson_dim.render.framebuffers[0].texture),this.wilson_dim.gl.bindFramebuffer(this.wilson_dim.gl.FRAMEBUFFER,null),this.dim_texture=new Uint8Array(this.resolution*this.resolution*4);let l=`
   precision highp float;
   precision highp sampler2D;
   
   varying vec2 uv;
   
   uniform sampler2D u_texture;
   
   uniform float max_brightness;
   
   vec3 hsv2rgb(vec3 c)
   {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
   }
   
   void main(void)
   {
    vec3 v = texture2D(u_texture, (vec2(1.0 + uv.x, 1.0 - uv.y)) / 2.0).xyz;
    
    gl_FragColor = vec4(hsv2rgb(vec3(v.y, v.z, v.x / max_brightness)), 1.0);
   }
  `,r={renderer:"gpu",shader:l,canvas_width:this.resolution,canvas_height:this.resolution,world_width:2*Math.PI,world_height:2*Math.PI,world_center_x:0,world_center_y:0,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:this.generate_new_field.bind(this),use_draggables:!0,draggables_mousemove_callback:this.on_drag_draggable.bind(this),draggables_touchmove_callback:this.on_drag_draggable.bind(this),mousedown_callback:this.on_grab_canvas.bind(this),touchstart_callback:this.on_grab_canvas.bind(this),mousedrag_callback:this.on_drag_canvas.bind(this),touchmove_callback:this.on_drag_canvas.bind(this),mouseup_callback:this.on_release_canvas.bind(this),touchend_callback:this.on_release_canvas.bind(this),wheel_callback:this.on_wheel_canvas.bind(this),pinch_callback:this.on_pinch_canvas.bind(this)};this.wilson=new Wilson(i,r),this.wilson.render.init_uniforms(["max_brightness"]),this.wilson.gl.uniform1f(this.wilson.uniforms.max_brightness,this.lifetime/255),this.wilson.render.create_framebuffer_texture_pair(this.wilson.gl.UNSIGNED_BYTE),this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[0].texture),this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,null),this.wilson.draggables.add(1,0),this.wilson.draggables.draggables[0].style.display="none";let n=this.handle_resize_event.bind(this);window.addEventListener("resize",n),this.handlers.push(window,"resize",n),this.load_promise=new Promise(async(i,t)=>{await Site.load_glsl(),i()})}run(i,t=500,e=1e4,s=.0075,o=64,a=0,l=0,r=.6515){let n=`
   precision highp float;
   precision highp sampler2D;
   
   varying vec2 uv;
   
   uniform sampler2D u_texture;
   
   uniform float dt;
   
   uniform vec2 draggable_arg;
   
   
   
   ${Site.get_glsl_bundle(i)}
   
   
   
   //Don't know how, but this writes an honest float32 to the 32 bits of output, which JS then decodes.
   
   float shift_right(float v, float amt)
   {
    v = floor(v) + 0.5;
    return floor(v / exp2(amt));
   }
   
   float shift_left(float v, float amt)
   {
    return floor(v * exp2(amt) + 0.5);
   }
   
   float mask_last(float v, float bits)
   {
    return mod(v, shift_left(1.0, bits));
   }
   
   float extract_bits(float num, float from, float to)
   {
    from = floor(from + 0.5); to = floor(to + 0.5);
    return mask_last(shift_right(num, from), to - from);
   }
   
   vec4 encode_float(float val)
   {
    if (val == 0.0) return vec4(0, 0, 0, 0);
    float sign = val > 0.0 ? 0.0 : 1.0;
    val = abs(val);
    float exponent = floor(log2(val));
    float biased_exponent = exponent + 127.0;
    float fraction = ((val / exp2(exponent)) - 1.0) * 8388608.0;
    float t = biased_exponent / 2.0;
    float last_bit_of_biased_exponent = fract(t) * 2.0;
    float remaining_bits_of_biased_exponent = floor(t);
    float byte4 = extract_bits(fraction, 0.0, 8.0) / 255.0;
    float byte3 = extract_bits(fraction, 8.0, 16.0) / 255.0;
    float byte2 = (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;
    float byte1 = (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0; 
    return vec4(byte4, byte3, byte2, byte1);
   }
   
   
   
   void main(void)
   {
    vec4 sample = texture2D(u_texture, (uv + vec2(1.0, 1.0)) / 2.0);
    
    if (int(sample.z) == 0)
    {
     return;
    }
    
    vec2 v = sample.xy;
    
    float x = v.x;
    float y = v.y;
  `,h=`
    ${n}
    
    vec2 d = vec2${i};
    
    gl_FragColor = encode_float(dt * d.x + x);
   }
  `,d=`
    ${n}
    
    vec2 d = vec2${i};
    
    gl_FragColor = encode_float(dt * d.y + y);
   }
  `,c=`
    ${n}
    
    vec2 d = vec2${i};
    
    gl_FragColor = encode_float((atan(d.y, d.x) + 3.14159265) / 6.28318531);
   }
  `,p=`
    ${n}
    
    vec2 d = vec2${i};
    
    gl_FragColor = encode_float(1.0 - exp(-1.2 * (d.x * d.x + d.y * d.y)));
   }
  `,u=`
    ${n}
    
    vec2 d = vec2${i};
    
    gl_FragColor = encode_float(1.0 - exp(-1.2 * .9 * (d.x * d.x + d.y * d.y)));
   }
  `;this.wilson_update.render.shader_programs=[],this.wilson_update.render.load_new_shader(h),this.wilson_update.render.load_new_shader(d),this.wilson_update.render.load_new_shader(c),this.wilson_update.render.load_new_shader(p),this.wilson_update.render.load_new_shader(u),this.wilson_update.render.init_uniforms(["dt","draggable_arg"],0),this.wilson_update.render.init_uniforms(["dt","draggable_arg"],1),this.wilson_update.render.init_uniforms(["dt","draggable_arg"],2),this.wilson_update.render.init_uniforms(["dt","draggable_arg"],3),this.wilson_update.render.init_uniforms(["dt","draggable_arg"],4),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[0]),this.wilson_update.gl.uniform1f(this.wilson_update.uniforms.dt[0],this.dt),this.wilson_update.gl.uniform2fv(this.wilson_update.uniforms.draggable_arg[0],this.wilson.draggables.world_coordinates[0]),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[1]),this.wilson_update.gl.uniform1f(this.wilson_update.uniforms.dt[1],this.dt),this.wilson_update.gl.uniform2fv(this.wilson_update.uniforms.draggable_arg[1],this.wilson.draggables.world_coordinates[0]),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[2]),this.wilson_update.gl.uniform1f(this.wilson_update.uniforms.dt[2],this.dt),this.wilson_update.gl.uniform2fv(this.wilson_update.uniforms.draggable_arg[2],this.wilson.draggables.world_coordinates[0]),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[3]),this.wilson_update.gl.uniform1f(this.wilson_update.uniforms.dt[3],this.dt),this.wilson_update.gl.uniform2fv(this.wilson_update.uniforms.draggable_arg[3],this.wilson.draggables.world_coordinates[0]),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[4]),this.wilson_update.gl.uniform1f(this.wilson_update.uniforms.dt[4],this.dt),this.wilson_update.gl.uniform2fv(this.wilson_update.uniforms.draggable_arg[4],this.wilson.draggables.world_coordinates[0]),-1!==i.indexOf("draggable_arg")?this.wilson.draggables.draggables[0].style.display="block":this.wilson.draggables.draggables[0].style.display="none",this.generate_new_field(t,e,s,o,a,l,r)}generate_new_field(i=this.resolution,t=this.max_particles,e=this.dt,s=this.lifetime,o=this.wilson.world_center_x,a=this.wilson.world_center_y,l=this.zoom_level){this.resolution=i,this.max_particles=t,this.dt=e,this.lifetime=s,this.wilson.world_center_x=o,this.wilson.world_center_y=a,this.zoom_level=l,this.wilson.gl.uniform1f(this.wilson.uniforms.max_brightness,this.lifetime/255),this.num_particles=0;let r=Math.ceil(Math.sqrt(t));this.wilson_update.change_canvas_size(r,r),this.change_aspect_ratio(),this.particles=Array(this.max_particles),this.free_particle_slots=Array(this.max_particles);for(let n=0;n<this.max_particles;n++)this.particles[n]=[0,0,0],this.free_particle_slots[n]=n;this.update_texture=new Float32Array(this.wilson_update.canvas_width*this.wilson_update.canvas_height*4);for(let h=0;h<this.wilson_update.canvas_height;h++)for(let d=0;d<this.wilson_update.canvas_width;d++){let c=this.wilson_update.canvas_width*h+d;this.update_texture[4*c]=0,this.update_texture[4*c+1]=0,this.update_texture[4*c+2]=0,this.update_texture[4*c+3]=0}this.dim_texture=new Uint8Array(this.wilson.canvas_width*this.wilson.canvas_height*4);for(let p=0;p<this.wilson.canvas_height;p++)for(let u=0;u<this.wilson.canvas_width;u++){let w=this.wilson.canvas_width*p+u;this.dim_texture[4*w]=0,this.dim_texture[4*w+1]=0,this.dim_texture[4*w+2]=0}window.requestAnimationFrame(this.draw_frame.bind(this))}resume(){this.animation_paused=!1,window.requestAnimationFrame(this.draw_frame.bind(this))}draw_frame(i){try{let t=i-this.last_timestamp;if(this.last_timestamp=i,0===t)return;if(this.num_particles<this.max_particles){let e=Math.min(Math.ceil(this.max_particles/80),this.max_particles-this.num_particles);for(let s=this.free_particle_slots.length-e;s<this.free_particle_slots.length;s++)this.create_particle(this.free_particle_slots[s]);this.free_particle_slots.splice(this.free_particle_slots.length-e,e)}if(this.last_pan_velocities_x.push(this.next_pan_velocity_x),this.last_pan_velocities_y.push(this.next_pan_velocity_y),this.last_pan_velocities_x.shift(),this.last_pan_velocities_y.shift(),0!==this.next_pan_velocity_x||0!==this.next_pan_velocity_y){let o=-this.next_pan_velocity_x,a=-this.next_pan_velocity_y;1>Math.abs(o/this.wilson.world_width*this.wilson.canvas_width)?o=0:this.next_pan_velocity_x=0,1>Math.abs(a/this.wilson.world_height*this.wilson.canvas_height)?a=0:this.next_pan_velocity_y=0,(0!==o||0!==a)&&(this.pan_grid(o,a),this.wilson.world_center_y-=a,this.wilson.world_center_x-=o)}else if(0!==this.pan_velocity_x||0!==this.pan_velocity_y){let l=-this.pan_velocity_x,r=-this.pan_velocity_y;1>Math.abs(l/this.wilson.world_width*this.wilson.canvas_width)&&(l=0),1>Math.abs(r/this.wilson.world_height*this.wilson.canvas_height)&&(r=0),this.pan_grid(l,r),this.wilson.world_center_y-=r,this.pan_velocity_y*=this.pan_friction,this.wilson.world_center_x-=l,this.pan_velocity_x*=this.pan_friction,this.pan_velocity_x*this.pan_velocity_x+this.pan_velocity_y*this.pan_velocity_y<this.pan_velocity_stop_threshhold*this.pan_velocity_stop_threshhold&&(this.pan_velocity_x=0,this.pan_velocity_y=0)}this.last_zoom_velocities.push(this.next_zoom_velocity),this.last_zoom_velocities.shift(),0!==this.next_zoom_velocity&&(this.zoom_canvas(),this.zoom_grid(this.fixed_point_x,this.fixed_point_y,this.next_zoom_velocity),this.next_zoom_velocity=0),0!==this.zoom_velocity&&(this.zoom_canvas(this.fixed_point_x,this.fixed_point_y),this.zoom_grid(this.fixed_point_x,this.fixed_point_y,this.zoom_velocity),this.zoom_level=Math.min(Math.max(this.zoom_level+this.zoom_velocity,-3),3),this.zoom_velocity*=this.zoom_friction,Math.abs(this.zoom_velocity)<this.zoom_velocity_stop_threshhold&&(this.zoom_velocity=0)),this.update_particles(),this.draw_field(),this.animation_paused||window.requestAnimationFrame(this.draw_frame.bind(this))}catch(n){this.generate_new_field()}}create_particle(i){this.particles[i][0]=this.wilson.world_center_x+this.wilson.world_width*(Math.random()-.5),this.particles[i][1]=this.wilson.world_center_y+this.wilson.world_height*(Math.random()-.5),this.particles[i][2]=Math.round(this.lifetime*(.5*Math.random()+.75)),this.num_particles++}destroy_particle(i){this.particles[i][2]=0,this.free_particle_slots.push(i),this.num_particles--}update_particles(){for(let i=0;i<this.wilson_update.canvas_height;i++)for(let t=0;t<this.wilson_update.canvas_width;t++){let e=this.wilson_update.canvas_width*i+t;e<this.particles.length&&this.particles[e][2]?(this.update_texture[4*e]=this.particles[e][0],this.update_texture[4*e+1]=this.particles[e][1],this.update_texture[4*e+2]=1):this.update_texture[4*e+2]=0}this.wilson_update.gl.texImage2D(this.wilson_update.gl.TEXTURE_2D,0,this.wilson_update.gl.RGBA,this.wilson_update.canvas_width,this.wilson_update.canvas_height,0,this.wilson_update.gl.RGBA,this.wilson_update.gl.FLOAT,this.update_texture),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[0]),this.wilson_update.render.draw_frame();let s=new Float32Array(this.wilson_update.render.get_pixel_data().buffer);this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[1]),this.wilson_update.render.draw_frame();let o=new Float32Array(this.wilson_update.render.get_pixel_data().buffer);this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[2]),this.wilson_update.render.draw_frame();let a=new Float32Array(this.wilson_update.render.get_pixel_data().buffer);this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[3]),this.wilson_update.render.draw_frame();let l=new Float32Array(this.wilson_update.render.get_pixel_data().buffer);this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[4]),this.wilson_update.render.draw_frame();let r=new Float32Array(this.wilson_update.render.get_pixel_data().buffer);for(let n=0;n<this.wilson_update.canvas_height;n++)for(let h=0;h<this.wilson_update.canvas_width;h++){let d=this.wilson_update.canvas_width*n+h;if(d<this.particles.length&&this.particles[d][2]){this.particles[d][0]=s[d],this.particles[d][1]=o[d];let c=Math.round((.5-(this.particles[d][1]-this.wilson.world_center_y)/this.wilson.world_height)*this.wilson.canvas_height),p=Math.round(((this.particles[d][0]-this.wilson.world_center_x)/this.wilson.world_width+.5)*this.wilson.canvas_width);if(c>=0&&c<this.wilson.canvas_height&&p>=0&&p<this.wilson.canvas_width){let u=c*this.wilson.canvas_width+p;this.dim_texture[4*u]=this.lifetime,this.dim_texture[4*u+1]=255*a[d],this.dim_texture[4*u+2]=255*Math.max(l[d],r[d]),this.particles[d][2]--,this.particles[d][2]<=0&&this.destroy_particle(d)}else this.destroy_particle(d)}}}draw_field(){this.wilson_dim.gl.texImage2D(this.wilson_dim.gl.TEXTURE_2D,0,this.wilson_dim.gl.RGBA,this.wilson_dim.canvas_width,this.wilson_dim.canvas_height,0,this.wilson_dim.gl.RGBA,this.wilson_dim.gl.UNSIGNED_BYTE,this.dim_texture),this.wilson_dim.render.draw_frame(),this.dim_texture=this.wilson_dim.render.get_pixel_data(),this.wilson.gl.texImage2D(this.wilson.gl.TEXTURE_2D,0,this.wilson.gl.RGBA,this.wilson.canvas_width,this.wilson.canvas_height,0,this.wilson.gl.RGBA,this.wilson.gl.UNSIGNED_BYTE,this.dim_texture),this.wilson.render.draw_frame()}pan_grid(i,t){this.wilson_dim.gl.useProgram(this.wilson_dim.render.shader_programs[1]),this.wilson_dim.gl.uniform2f(this.wilson_dim.uniforms.pan[1],i/this.wilson.world_width,-t/this.wilson.world_height),this.draw_field(),this.wilson_dim.gl.useProgram(this.wilson_dim.render.shader_programs[0]),this.wilson.draggables.recalculate_locations()}zoom_grid(i,t,e){if(this.zoom_level<=-3||this.zoom_level>=3)return;let s=(i-this.wilson.world_center_x)/this.wilson.world_width+.5,o=(this.wilson.world_center_y-t)/this.wilson.world_height+.5;if(this.wilson_dim.gl.useProgram(this.wilson_dim.render.shader_programs[2]),this.wilson_dim.gl.uniform1f(this.wilson_dim.uniforms.scale[2],Math.pow(2,e)),this.wilson_dim.gl.uniform2f(this.wilson_dim.uniforms.fixed_point[2],s,o),this.draw_field(),this.wilson_dim.gl.useProgram(this.wilson_dim.render.shader_programs[0]),this.wilson.draggables.recalculate_locations(),e>0){let a=Math.pow(2,1.5*e);for(let l=0;l<this.particles.length;l++)this.particles[l][2]&&l%a>=1&&this.destroy_particle(l)}}on_drag_draggable(i,t,e,s){this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[0]),this.wilson_update.gl.uniform2f(this.wilson_update.uniforms.draggable_arg[0],t,e),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[1]),this.wilson_update.gl.uniform2f(this.wilson_update.uniforms.draggable_arg[1],t,e),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[2]),this.wilson_update.gl.uniform2f(this.wilson_update.uniforms.draggable_arg[2],t,e),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[3]),this.wilson_update.gl.uniform2f(this.wilson_update.uniforms.draggable_arg[3],t,e),this.wilson_update.gl.useProgram(this.wilson_update.render.shader_programs[4]),this.wilson_update.gl.uniform2f(this.wilson_update.uniforms.draggable_arg[4],t,e)}on_grab_canvas(i,t,e){this.pan_velocity_x=0,this.pan_velocity_y=0,this.zoom_velocity=0,this.last_pan_velocities_x=[0,0,0,0],this.last_pan_velocities_y=[0,0,0,0],this.last_zoom_velocities=[0,0,0,0]}on_drag_canvas(i,t,e,s,o){this.next_pan_velocity_x+=-e,this.next_pan_velocity_y+=-s}on_release_canvas(i,t,e){let s=0;this.last_pan_velocities_x.forEach((i,t)=>{Math.abs(i)>this.pan_velocity_x&&(this.pan_velocity_x=Math.abs(i),s=t)}),this.pan_velocity_x<this.pan_velocity_start_threshhold?this.pan_velocity_x=0:this.pan_velocity_x=this.last_pan_velocities_x[s],this.last_pan_velocities_y.forEach((i,t)=>{Math.abs(i)>this.pan_velocity_y&&(this.pan_velocity_y=Math.abs(i),s=t)}),this.pan_velocity_y<this.pan_velocity_start_threshhold?this.pan_velocity_y=0:this.pan_velocity_y=this.last_pan_velocities_y[s],this.last_zoom_velocities.forEach((i,t)=>{Math.abs(i)>this.zoom_velocity&&(this.zoom_velocity=Math.abs(i),s=t)}),this.zoom_velocity<this.zoom_velocity_start_threshhold?this.zoom_velocity=0:this.zoom_velocity=this.last_zoom_velocities[s]}on_wheel_canvas(i,t,e,s){this.fixed_point_x=i,this.fixed_point_y=t,.3>Math.abs(e/100)?(this.next_zoom_velocity=e/100,this.zoom_level=Math.min(Math.max(this.zoom_level+e/100,-3),3)):this.zoom_velocity+=.05*Math.sign(e)}on_pinch_canvas(i,t,e,s){let o;o=this.aspect_ratio>=1?e/this.wilson.world_width*10:e/this.wilson.world_height*10,this.zoom_level=Math.min(Math.max(this.zoom_level-o,-3),3),this.next_zoom_velocity=-o,this.fixed_point_x=i,this.fixed_point_y=t}zoom_canvas(){if(this.aspect_ratio>=1){let i=this.wilson.input.get_zoomed_world_center(this.fixed_point_x,this.fixed_point_y,4*Math.pow(2,this.zoom_level)*this.aspect_ratio,4*Math.pow(2,this.zoom_level));this.wilson.world_width=4*Math.pow(2,this.zoom_level)*this.aspect_ratio,this.wilson.world_height=4*Math.pow(2,this.zoom_level),this.wilson.world_center_x=i[0],this.wilson.world_center_y=i[1]}else{let t=this.wilson.input.get_zoomed_world_center(this.fixed_point_x,this.fixed_point_y,4*Math.pow(2,this.zoom_level),4*Math.pow(2,this.zoom_level)/this.aspect_ratio);this.wilson.world_width=4*Math.pow(2,this.zoom_level),this.wilson.world_height=4*Math.pow(2,this.zoom_level)/this.aspect_ratio,this.wilson.world_center_x=t[0],this.wilson.world_center_y=t[1]}}change_aspect_ratio(){this.wilson.fullscreen.currently_fullscreen?(this.aspect_ratio=window.innerWidth/window.innerHeight,this.aspect_ratio>=1?(this.wilson.change_canvas_size(Math.ceil(this.resolution*this.aspect_ratio),this.resolution),this.wilson_dim.change_canvas_size(Math.ceil(this.resolution*this.aspect_ratio),this.resolution),this.wilson.world_width=4*Math.pow(2,this.zoom_level)*this.aspect_ratio,this.wilson.world_height=4*Math.pow(2,this.zoom_level)):(this.wilson.change_canvas_size(this.resolution,Math.ceil(this.resolution/this.aspect_ratio)),this.wilson_dim.change_canvas_size(this.resolution,Math.ceil(this.resolution/this.aspect_ratio)),this.wilson.world_width=4*Math.pow(2,this.zoom_level),this.wilson.world_height=4*Math.pow(2,this.zoom_level)/this.aspect_ratio)):(this.aspect_ratio=1,this.wilson.change_canvas_size(this.resolution,this.resolution),this.wilson_dim.change_canvas_size(this.resolution,this.resolution),this.wilson.world_width=4*Math.pow(2,this.zoom_level),this.wilson.world_height=4*Math.pow(2,this.zoom_level))}handle_resize_event(){this.wilson.fullscreen.currently_fullscreen&&this.generate_new_field()}}