import{getGlslBundle,loadGlsl}from"../../../scripts/src/complexGlsl.min.js";import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{getFloatGlsl,getMaxGlslString,tempShader}from"/scripts/applets/applet.min.js";import{sleep}from"/scripts/src/utils.min.js";import{WilsonGPU}from"/scripts/wilson.min.js";class VectorFields extends AnimationFrameApplet{loadPromise;resolution=500;subpixelWorldCenterMovement=[0,0];lastWorldCenterX;lastWorldCenterY;lastWorldWidth;lastScale=1;needTemporaryDim=!1;lastGeneratedCanvasWidth;lastGeneratedCanvasHeight;numParticles=0;maxParticles=5e3;loopEdges=!1;particleDilation;needStepSize=!0;dt=.00375;lifetime=150;particles=[];freeParticleSlots=[];updateTexture;panZoomDimTexture;updateCanvas;panZoomDimCanvas;wilsonUpdate;wilsonPanZoomDim;timeElapsedHistoryLength=60;lastTimeElapsed=new Array(this.timeElapsedHistoryLength);averageTimeElapsed;frame=0;drawFrameCallback=()=>{};constructor({canvas,loopEdges=!1}){super(canvas),this.loopEdges=loopEdges,this.panZoomDimCanvas=this.createHiddenCanvas(),this.updateCanvas=this.createHiddenCanvas();var e={shader:tempShader,canvasWidth:100,canvasHeight:100,verbose:window.DEBUG},e=(this.wilsonUpdate=new WilsonGPU(this.updateCanvas,e),{shader:`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;
			
			uniform float dimAmount;
			uniform float scale;
			uniform vec2 uvStep;
			uniform float temporaryDimFactor;
			
			void main(void)
			{
				vec2 texCoord = ((scale * uv + vec2(1.0, 1.0)) / 2.0) + uvStep;
				
				if (texCoord.x >= 0.0 && texCoord.x < 1.0 && texCoord.y >= 0.0 && texCoord.y < 1.0)
				{
					vec3 v = texture2D(uTexture, texCoord).xyz;
					
					gl_FragColor = vec4(
						(v.x - dimAmount) * temporaryDimFactor,
						v.y,
						v.z,
						1.0
					);
					
					return;
				}
				
				gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
			}
		`,uniforms:{dimAmount:1/255,scale:1,uvStep:[0,0],temporaryDimFactor:1},canvasWidth:this.resolution,fullscreenOptions:{fillScreen:!0,animate:!1,closeWithEscape:!1,restoreScroll:!1},verbose:window.DEBUG}),e=(this.wilsonPanZoomDim=new WilsonGPU(this.panZoomDimCanvas,e),this.wilsonPanZoomDim.canvas.parentElement.parentElement.parentElement.style.setProperty("display","none","important"),{shader:tempShader,canvasWidth:this.resolution,worldWidth:2*Math.PI,minWorldWidth:.5,maxWorldWidth:20,minWorldHeight:.5,maxWorldHeight:20,useResetButton:!0,resetButtonIconPath:"/graphics/general-icons/reset.png",onResizeCanvas:()=>this.generateNewField({delayResuing:!0}),interactionOptions:{useForPanAndZoom:!0,onPanAndZoom:()=>this.needNewFrame=!0},draggableOptions:{draggables:{draggableArg:[0,0]},callbacks:{drag:this.onDragDraggable.bind(this)}},fullscreenOptions:{fillScreen:!0,beforeSwitch:this.beforeSwitchFullscreen.bind(this),onSwitch:this.switchFullscreen.bind(this),useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"},verbose:window.DEBUG});this.wilson=new WilsonGPU(canvas,e),this.wilson.draggables.draggableArg.element.style.display="none",this.loadPromise=loadGlsl()}async run({generatingCode,resolution=750,maxParticles=6e3,dt=.00375,lifetime=150,worldWidth=2*Math.PI,worldCenterX=0,worldCenterY=0,particleDilation=void 0,appendGlsl=""}){await this.loadPromise,this.dt=dt,this.resolution=resolution,this.particleDilation=particleDilation;var e=-1!==generatingCode.indexOf("draggableArg"),t=(this.wilson.resizeCanvas({width:this.resolution}),this.wilsonPanZoomDim.resizeCanvas({width:this.resolution}),`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;
			
			uniform float dt;
			
			uniform vec2 draggableArg;
			
			
			
			${getGlslBundle(generatingCode)}
		
			
			vec2 f(float x, float y)
			{
				${appendGlsl}

				return vec2${generatingCode};
			}
			
			
			
			void main(void)
			{
				vec4 sample = texture2D(uTexture, (uv + vec2(1.0, 1.0)) / 2.0);
				
				if (int(sample.z) == 0)
				{
					return;
				}
				
				vec2 d = f(sample.x, sample.y);

				gl_FragColor = vec4(
					dt * d.x + sample.x,
					dt * d.y + sample.y,
					(atan(d.y, d.x) + ${Math.PI}) / ${2*Math.PI},
					1.0 - exp(-1.2 * (d.x * d.x + d.y * d.y))
				);
			}
		`),t=(this.wilsonUpdate.loadShader({id:"update",shader:t,uniforms:{dt:this.dt,...e?{draggableArg:[0,0]}:{}}}),this.getSamplingGlsl()),i=`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;
			
			uniform float maxBrightness;

			uniform vec2 stepSize;
			
			vec3 hsvToRgb(vec3 c)
			{
				vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
				vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
				return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
			}

			vec3 getPixel(vec2 uv)
			{
				vec3 v = texture2D(uTexture, (vec2(1.0 + uv.x, 1.0 - uv.y)) / 2.0).xyz;

				return hsvToRgb(vec3(v.y, v.z, v.x / maxBrightness));
			}
			
			void main(void)
			{
				${t}
			}
		`;this.needStepSize=-1!==t.indexOf("stepSize"),this.wilson.loadShader({id:"draw",shader:i,uniforms:{maxBrightness:this.lifetime/255,...this.needStepSize?{stepSize:[2/this.resolution,2/this.resolution]}:{}}}),this.wilson.setUniforms({maxBrightness:this.lifetime/255}),this.wilson.draggables.draggableArg.element.style.display=e?"block":"none",this.wilson.resizeWorld({width:worldWidth,centerX:worldCenterX,centerY:worldCenterY}),this.generateNewField({maxParticles:maxParticles,dt:dt,lifetime:lifetime})}getSamplingGlsl(){var t=this.particleDilation??Math.max(this.resolution/500,0);let i="",s=0;for(let r=-Math.ceil(t);r<=Math.ceil(t);r++)for(let e=-Math.ceil(t);e<=Math.ceil(t);e++){var a=Math.sqrt(r*r+e*e);t+1<a||(a=1-Math.max(0,a-t),s++,i+=`
					vec3 distance${s} = ${getFloatGlsl(a)} * getPixel(
						uv + vec2(
							${getFloatGlsl(r)} * stepSize.x,
							${getFloatGlsl(e)} * stepSize.y
						)
					);
				`)}return i+=`
			gl_FragColor = vec4(${getMaxGlslString("distance",s)}, 1.0);
		`}resumeTimeout;async generateNewField({maxParticles=this.maxParticles,dt=this.dt,lifetime=this.lifetime,delayResuing=!1}){await this.loadPromise,this.animationPaused=!0,this.lastGeneratedCanvasWidth=this.wilson.canvasWidth,this.lastGeneratedCanvasHeight=this.wilson.canvasHeight,this.maxParticles=maxParticles,this.dt=dt,this.lifetime=lifetime,this.wilson.setUniforms({maxBrightness:this.lifetime/255,...this.needStepSize?{stepSize:[2/this.wilson.canvasWidth,2/this.wilson.canvasHeight]}:{}}),this.numParticles=0;var e=Math.ceil(Math.sqrt(maxParticles));this.wilsonUpdate.resizeCanvas({width:e}),this.wilsonUpdate.createFramebufferTexturePair({id:"update1",textureType:"float"}),this.wilsonUpdate.createFramebufferTexturePair({id:"update2",textureType:"float"}),this.wilsonUpdate.useTexture("update1"),this.wilsonUpdate.useFramebuffer("update2"),this.wilsonPanZoomDim.createFramebufferTexturePair({id:"panZoomDim",textureType:"unsignedByte"}),this.wilsonPanZoomDim.useFramebuffer(null),this.wilsonPanZoomDim.useTexture("panZoomDim"),this.wilson.createFramebufferTexturePair({id:"draw",textureType:"unsignedByte"}),this.wilson.useFramebuffer(null),this.wilson.useTexture("draw"),this.lastWorldCenterX=this.wilson.worldCenterX,this.lastWorldCenterY=this.wilson.worldCenterY,this.lastWorldWidth=this.wilson.worldWidth,this.particles=new Array(this.maxParticles),this.freeParticleSlots=new Array(this.maxParticles);for(let s=0;s<this.maxParticles;s++)this.particles[s]=[0,0,0],this.freeParticleSlots[s]=s;this.updateTexture=new Float32Array(this.wilsonUpdate.canvasWidth*this.wilsonUpdate.canvasHeight*4);for(let a=0;a<this.wilsonUpdate.canvasHeight;a++)for(let e=0;e<this.wilsonUpdate.canvasWidth;e++){var t=this.wilsonUpdate.canvasWidth*a+e;this.updateTexture[4*t]=0,this.updateTexture[4*t+1]=0,this.updateTexture[4*t+2]=0,this.updateTexture[4*t+3]=0}this.panZoomDimTexture=new Uint8Array(this.wilson.canvasWidth*this.wilson.canvasHeight*4);for(let r=0;r<this.wilson.canvasHeight;r++)for(let e=0;e<this.wilson.canvasWidth;e++){var i=this.wilson.canvasWidth*r+e;this.panZoomDimTexture[4*i]=0,this.panZoomDimTexture[4*i+1]=0,this.panZoomDimTexture[4*i+2]=0}clearTimeout(this.resumeTimeout),delayResuing?this.resumeTimeout=setTimeout(()=>this.resume(),100):this.resume()}drawFrame(timeElapsed){if(this.wilsonUpdate.setUniforms({dt:this.dt*timeElapsed/6.944}),this.frame<this.timeElapsedHistoryLength){if(this.lastTimeElapsed[this.frame]=Math.min(timeElapsed,16),this.frame===this.timeElapsedHistoryLength-1){let e=0;for(let t=0;t<this.timeElapsedHistoryLength;t++)e+=this.lastTimeElapsed[t];this.wilsonPanZoomDim.setUniforms({dimAmount:e/this.timeElapsedHistoryLength/1770.72})}this.frame++}if(this.numParticles<this.maxParticles){var t=Math.min(Math.ceil(this.maxParticles/80),this.maxParticles-this.numParticles);for(let e=this.freeParticleSlots.length-t;e<this.freeParticleSlots.length;e++)this.createParticle(this.freeParticleSlots[e]);this.freeParticleSlots.splice(this.freeParticleSlots.length-t,t)}this.subpixelWorldCenterMovement[0]+=(this.wilson.worldCenterX-this.lastWorldCenterX)/this.wilson.worldWidth*this.wilson.canvasWidth,this.subpixelWorldCenterMovement[1]+=(this.wilson.worldCenterY-this.lastWorldCenterY)/this.wilson.worldHeight*this.wilson.canvasHeight;var t=Math.sign(this.subpixelWorldCenterMovement[0])*Math.floor(Math.abs(this.subpixelWorldCenterMovement[0])),e=Math.sign(this.subpixelWorldCenterMovement[1])*Math.floor(Math.abs(this.subpixelWorldCenterMovement[1])),i=(this.subpixelWorldCenterMovement[0]=Math.sign(this.subpixelWorldCenterMovement[0])*(Math.abs(this.subpixelWorldCenterMovement[0])-Math.abs(t)),this.subpixelWorldCenterMovement[1]=Math.sign(this.subpixelWorldCenterMovement[1])*(Math.abs(this.subpixelWorldCenterMovement[1])-Math.abs(e)),this.wilson.worldWidth/this.lastWorldWidth);this.wilsonPanZoomDim.setUniforms({uvStep:[t/this.wilson.canvasWidth,-e/this.wilson.canvasHeight],scale:i,temporaryDimFactor:Math.min(i,1)*(this.needTemporaryDim?.96:1)}),this.lastWorldCenterX=this.wilson.worldCenterX,this.lastWorldCenterY=this.wilson.worldCenterY,this.lastWorldWidth=this.wilson.worldWidth,this.lastScale=i,this.needTemporaryDim=!1,this.drawField(timeElapsed),this.drawFrameCallback(),this.needNewFrame=!0}createParticle(index){this.particles[index][0]=this.wilson.worldCenterX+this.wilson.worldWidth*(Math.random()-.5),this.particles[index][1]=this.wilson.worldCenterY+this.wilson.worldHeight*(Math.random()-.5),this.particles[index][2]=Math.round(this.lifetime*(.5*Math.random()+.75)),this.numParticles++}destroyParticle(index){this.particles[index][2]=0,this.freeParticleSlots.push(index),this.numParticles--}updateParticles(){var i=100*Math.max(this.lastScale-1,0)+1;for(let l=0;l<this.wilsonUpdate.canvasHeight;l++)for(let e=0;e<this.wilsonUpdate.canvasWidth;e++){var t=this.wilsonUpdate.canvasWidth*l+e;t<this.particles.length&&this.particles[t][2]?(this.updateTexture[4*t]=this.particles[t][0],this.updateTexture[4*t+1]=this.particles[t][1],this.updateTexture[4*t+2]=1):this.updateTexture[4*t+2]=0}this.wilsonUpdate.setTexture({id:"update1",data:this.updateTexture}),this.wilsonUpdate.drawFrame();var s=this.wilsonUpdate.readPixels({format:"float"});for(let n=0;n<this.wilsonUpdate.canvasHeight;n++)for(let e=0;e<this.wilsonUpdate.canvasWidth;e++){var a,r=this.wilsonUpdate.canvasWidth*n+e;if(r<this.particles.length&&this.particles[r][2]){this.particles[r][0]=s[4*r],this.particles[r][1]=s[4*r+1];let[e,t]=this.wilson.interpolateWorldToCanvas(this.particles[r]);this.loopEdges&&(e>=this.wilson.canvasHeight?(e=2*this.wilson.canvasHeight-2-e,t+=Math.floor(this.wilson.canvasWidth/2)):e<0&&(e=Math.abs(e),t+=Math.floor(this.wilson.canvasWidth/2)),t>=this.wilson.canvasWidth?t-=this.wilson.canvasWidth:t<0&&(t+=this.wilson.canvasWidth)),0<=e&&e<this.wilson.canvasHeight&&0<=t&&t<this.wilson.canvasWidth&&(a=e*this.wilson.canvasWidth+t,this.panZoomDimTexture[4*a]=this.lifetime,this.panZoomDimTexture[4*a+1]=255*s[4*r+2],this.panZoomDimTexture[4*a+2]=255*s[4*r+3],this.particles[r][2]-=i,!(this.particles[r][2]<=0))||this.destroyParticle(r)}}}drawField(timeElapsed){this.wilsonPanZoomDim.setTexture({id:"panZoomDim",data:this.panZoomDimTexture}),this.wilsonPanZoomDim.drawFrame(),this.panZoomDimTexture=this.wilsonPanZoomDim.readPixels(),this.updateParticles(timeElapsed),this.wilson.setTexture({id:"draw",data:this.panZoomDimTexture}),this.wilson.drawFrame()}onDragDraggable({x,y}){this.wilsonUpdate.setUniforms({draggableArg:[x,y]}),this.needTemporaryDim=!0}switchFullscreen(isFullscreen){isFullscreen?this.wilsonPanZoomDim.enterFullscreen():this.wilsonPanZoomDim.exitFullscreen(),requestAnimationFrame(()=>this.generateNewField({}))}async beforeSwitchFullscreen(){this.pause(),await sleep(33)}}export{VectorFields};