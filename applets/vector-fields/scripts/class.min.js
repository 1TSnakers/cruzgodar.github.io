class VectorField extends Applet{loadPromise=null;resolution=500;numParticles=0;maxParticles=5E3;aspectRatio=1;zoomLevel=.6515;fixedPointX=0;fixedPointY=0;dt=.0075;lifetime=100;lastTimestamp=-1;particles=[];freeParticleSlots=[];updateTexture=null;dimTexture=null;updateCanvas=null;dimCanvas=null;wilsonUpdate=null;wilsonDim=null;panVelocityX=0;panVelocityY=0;zoomVelocity=0;nextPanVelocityX=0;nextPanVelocityY=0;nextZoomVelocity=0;lastPanVelocitiesX=[];lastPanVelocitiesY=[];lastZoomVelocities=[];panFriction=.96;panVelocityStartThreshhold=2.5E-4;panVelocityStopThreshhold=2.5E-4;zoomFriction=.9;zoomVelocityStartThreshhold=.002;zoomVelocityStopThreshhold=.002;constructor(b){super(b);
this.updateCanvas=this.createHiddenCanvas();this.dimCanvas=this.createHiddenCanvas();this.wilsonUpdate=new Wilson(this.updateCanvas,{renderer:"gpu",shader:"precision highp float; varying vec2 uv; void main(void) { gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0); }",canvasWidth:100,canvasHeight:100});this.wilsonUpdate.render.createFramebufferTexturePair();this.wilsonUpdate.gl.bindTexture(this.wilsonUpdate.gl.TEXTURE_2D,this.wilsonUpdate.render.framebuffers[0].texture);this.wilsonUpdate.gl.bindFramebuffer(this.wilsonUpdate.gl.FRAMEBUFFER,
null);this.wilsonDim=new Wilson(this.dimCanvas,{renderer:"gpu",shader:"\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec3 v = texture2D(uTexture, (uv + vec2(1.0, 1.0)) / 2.0).xyz;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(v.x - 1.0 / 255.0, v.y, v.z, 1.0);\n\t\t\t}\n\t\t",canvasWidth:this.resolution,canvasHeight:this.resolution});this.wilsonDim.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tuniform vec2 pan;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 texCoord = (uv + vec2(1.0, 1.0)) / 2.0 - pan;\n\t\t\t\t\n\t\t\t\tif (texCoord.x >= 0.0 && texCoord.x < 1.0 && texCoord.y >= 0.0 && texCoord.y < 1.0)\n\t\t\t\t{\n\t\t\t\t\tvec3 v = texture2D(uTexture, texCoord).xyz;\n\t\t\t\t\t\n\t\t\t\t\tgl_FragColor = vec4(v.x, v.y, v.z, 1.0);\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t}\n\t\t");
this.wilsonDim.render.initUniforms(["pan"],1);this.wilsonDim.gl.useProgram(this.wilsonDim.render.shaderPrograms[0]);this.wilsonDim.render.loadNewShader("\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tuniform float scale;\n\t\t\tuniform vec2 fixedPoint;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec2 texCoord = ((uv + vec2(1.0, 1.0)) / 2.0 - fixedPoint) * scale + fixedPoint;\n\t\t\t\t\n\t\t\t\tif (texCoord.x >= 0.0 && texCoord.x < 1.0 && texCoord.y >= 0.0 && texCoord.y < 1.0)\n\t\t\t\t{\n\t\t\t\t\tvec3 v = texture2D(uTexture, texCoord).xyz;\n\t\t\t\t\t\n\t\t\t\t\tgl_FragColor = vec4(v.x / 1.06, v.y, v.z, 1.0);\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t}\n\t\t");
this.wilsonDim.render.initUniforms(["scale","fixedPoint"],2);this.wilsonDim.gl.useProgram(this.wilsonDim.render.shaderPrograms[0]);this.wilsonDim.render.createFramebufferTexturePair(this.wilsonDim.gl.UNSIGNED_BYTE);this.wilsonDim.gl.bindTexture(this.wilsonDim.gl.TEXTURE_2D,this.wilsonDim.render.framebuffers[0].texture);this.wilsonDim.gl.bindFramebuffer(this.wilsonDim.gl.FRAMEBUFFER,null);this.dimTexture=new Uint8Array(this.resolution*this.resolution*4);const c={renderer:"gpu",shader:"\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\t\t\t\n\t\t\tvarying vec2 uv;\n\t\t\t\n\t\t\tuniform sampler2D uTexture;\n\t\t\t\n\t\t\tuniform float maxBrightness;\n\t\t\t\n\t\t\tvec3 hsv2rgb(vec3 c)\n\t\t\t{\n\t\t\t\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\t\t\t\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\t\t\t\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n\t\t\t}\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec3 v = texture2D(uTexture, (vec2(1.0 + uv.x, 1.0 - uv.y)) / 2.0).xyz;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(hsv2rgb(vec3(v.y, v.z, v.x / maxBrightness)), 1.0);\n\t\t\t}\n\t\t",
canvasWidth:this.resolution,canvasHeight:this.resolution,worldWidth:2*Math.PI,worldHeight:2*Math.PI,worldCenterX:0,worldCenterY:0,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:this.generateNewField.bind(this),useDraggables:!0,draggablesMousemoveCallback:this.onDragDraggable.bind(this),draggablesTouchmoveCallback:this.onDragDraggable.bind(this),
mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),touchendCallback:this.onReleaseCanvas.bind(this),wheelCallback:this.onWheelCanvas.bind(this),pinchCallback:this.onPinchCanvas.bind(this)};this.wilson=new Wilson(b,c);this.wilson.render.initUniforms(["maxBrightness"]);this.wilson.gl.uniform1f(this.wilson.uniforms.maxBrightness,
this.lifetime/255);this.wilson.render.createFramebufferTexturePair(this.wilson.gl.UNSIGNED_BYTE);this.wilson.gl.bindTexture(this.wilson.gl.TEXTURE_2D,this.wilson.render.framebuffers[0].texture);this.wilson.gl.bindFramebuffer(this.wilson.gl.FRAMEBUFFER,null);this.wilson.draggables.add(1,0);this.wilson.draggables.draggables[0].style.display="none";b=this.handleResizeEvent.bind(this);window.addEventListener("resize",b);this.handlers.push(window,"resize",b);this.loadPromise=new Promise(async(a,d)=>{await Site.loadGLSL();
a()})}run(b,c=500,a=1E4,d=.0075,g=100,f=0,h=0,k=.6515){this.dt=d;const e=`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;
			
			uniform float dt;
			
			uniform vec2 draggableArg;
			
			
			
			${Site.getGLSLBundle(b)}
			
			${Site.doubleEncodingGLSL}
			
			
			
			vec2 f(float x, float y)
			{
				return vec2${b};
			}
			
			
			
			void main(void)
			{
				vec4 sample = texture2D(uTexture, (uv + vec2(1.0, 1.0)) / 2.0);
				
				if (int(sample.z) == 0)
				{
					return;
				}
				
				vec2 d = f(sample.x, sample.y);
		`,l=`
				${e}
				
				gl_FragColor = encodeFloat(dt * d.y + sample.y);
			}
		`,m=`
				${e}
				
				gl_FragColor = encodeFloat((atan(d.y, d.x) + 3.14159265) / 6.28318531);
			}
		`,n=`
				${e}
				
				gl_FragColor = encodeFloat(1.0 - exp(-1.2 * (d.x * d.x + d.y * d.y)));
			}
		`,p=`
				${e}
				
				gl_FragColor = encodeFloat(1.0 - exp(-1.2 * .9 * (d.x * d.x + d.y * d.y)));
			}
		`;this.wilsonUpdate.render.shaderPrograms=[];this.wilsonUpdate.render.loadNewShader(`
				${e}
				
				gl_FragColor = encodeFloat(dt * d.x + sample.x);
			}
		`);this.wilsonUpdate.render.loadNewShader(l);this.wilsonUpdate.render.loadNewShader(m);this.wilsonUpdate.render.loadNewShader(n);this.wilsonUpdate.render.loadNewShader(p);this.wilsonUpdate.render.initUniforms(["dt","draggableArg"],0);this.wilsonUpdate.render.initUniforms(["dt","draggableArg"],1);this.wilsonUpdate.render.initUniforms(["dt","draggableArg"],2);this.wilsonUpdate.render.initUniforms(["dt","draggableArg"],3);this.wilsonUpdate.render.initUniforms(["dt","draggableArg"],4);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[0]);
this.wilsonUpdate.gl.uniform1f(this.wilsonUpdate.uniforms.dt[0],this.dt);this.wilsonUpdate.gl.uniform2fv(this.wilsonUpdate.uniforms.draggableArg[0],this.wilson.draggables.worldCoordinates[0]);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[1]);this.wilsonUpdate.gl.uniform1f(this.wilsonUpdate.uniforms.dt[1],this.dt);this.wilsonUpdate.gl.uniform2fv(this.wilsonUpdate.uniforms.draggableArg[1],this.wilson.draggables.worldCoordinates[0]);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[2]);
this.wilsonUpdate.gl.uniform1f(this.wilsonUpdate.uniforms.dt[2],this.dt);this.wilsonUpdate.gl.uniform2fv(this.wilsonUpdate.uniforms.draggableArg[2],this.wilson.draggables.worldCoordinates[0]);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[3]);this.wilsonUpdate.gl.uniform1f(this.wilsonUpdate.uniforms.dt[3],this.dt);this.wilsonUpdate.gl.uniform2fv(this.wilsonUpdate.uniforms.draggableArg[3],this.wilson.draggables.worldCoordinates[0]);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[4]);
this.wilsonUpdate.gl.uniform1f(this.wilsonUpdate.uniforms.dt[4],this.dt);this.wilsonUpdate.gl.uniform2fv(this.wilsonUpdate.uniforms.draggableArg[4],this.wilson.draggables.worldCoordinates[0]);-1!==b.indexOf("draggableArg")?this.wilson.draggables.draggables[0].style.display="block":this.wilson.draggables.draggables[0].style.display="none";this.generateNewField(c,a,d,g,f,h,k)}generateNewField(b=this.resolution,c=this.maxParticles,a=this.dt,d=this.lifetime,g=this.wilson.worldCenterX,f=this.wilson.worldCenterY,
h=this.zoomLevel){this.resolution=b;this.maxParticles=c;this.dt=a;this.lifetime=d;this.wilson.worldCenterX=g;this.wilson.worldCenterY=f;this.zoomLevel=h;this.wilson.gl.uniform1f(this.wilson.uniforms.maxBrightness,this.lifetime/255);this.numParticles=0;b=Math.ceil(Math.sqrt(c));this.wilsonUpdate.changeCanvasSize(b,b);this.changeAspectRatio();this.particles=Array(this.maxParticles);this.freeParticleSlots=Array(this.maxParticles);for(b=0;b<this.maxParticles;b++)this.particles[b]=[0,0,0],this.freeParticleSlots[b]=
b;this.updateTexture=new Float32Array(this.wilsonUpdate.canvasWidth*this.wilsonUpdate.canvasHeight*4);for(b=0;b<this.wilsonUpdate.canvasHeight;b++)for(c=0;c<this.wilsonUpdate.canvasWidth;c++)a=this.wilsonUpdate.canvasWidth*b+c,this.updateTexture[4*a]=0,this.updateTexture[4*a+1]=0,this.updateTexture[4*a+2]=0,this.updateTexture[4*a+3]=0;this.dimTexture=new Uint8Array(this.wilson.canvasWidth*this.wilson.canvasHeight*4);for(b=0;b<this.wilson.canvasHeight;b++)for(c=0;c<this.wilson.canvasWidth;c++)a=this.wilson.canvasWidth*
b+c,this.dimTexture[4*a]=0,this.dimTexture[4*a+1]=0,this.dimTexture[4*a+2]=0;window.requestAnimationFrame(this.drawFrame.bind(this))}resume(){this.animationPaused=!1;window.requestAnimationFrame(this.drawFrame.bind(this))}drawFrame(b){try{const c=b-this.lastTimestamp;this.lastTimestamp=b;if(0!==c){if(this.numParticles<this.maxParticles){const a=Math.min(Math.ceil(this.maxParticles/80),this.maxParticles-this.numParticles);for(let d=this.freeParticleSlots.length-a;d<this.freeParticleSlots.length;d++)this.createParticle(this.freeParticleSlots[d]);
this.freeParticleSlots.splice(this.freeParticleSlots.length-a,a)}this.lastPanVelocitiesX.push(this.nextPanVelocityX);this.lastPanVelocitiesY.push(this.nextPanVelocityY);this.lastPanVelocitiesX.shift();this.lastPanVelocitiesY.shift();if(0!==this.nextPanVelocityX||0!==this.nextPanVelocityY){let a=-this.nextPanVelocityX,d=-this.nextPanVelocityY;1>Math.abs(a/this.wilson.worldWidth*this.wilson.canvasWidth)?a=0:this.nextPanVelocityX=0;1>Math.abs(d/this.wilson.worldHeight*this.wilson.canvasHeight)?d=0:this.nextPanVelocityY=
0;if(0!==a||0!==d)this.panGrid(a,d),this.wilson.worldCenterY-=d,this.wilson.worldCenterX-=a}else if(0!==this.panVelocityX||0!==this.panVelocityY){let a=-this.panVelocityX,d=-this.panVelocityY;1>Math.abs(a/this.wilson.worldWidth*this.wilson.canvasWidth)&&(a=0);1>Math.abs(d/this.wilson.worldHeight*this.wilson.canvasHeight)&&(d=0);this.panGrid(a,d);this.wilson.worldCenterY-=d;this.panVelocityY*=this.panFriction;this.wilson.worldCenterX-=a;this.panVelocityX*=this.panFriction;this.panVelocityX*this.panVelocityX+
this.panVelocityY*this.panVelocityY<this.panVelocityStopThreshhold*this.panVelocityStopThreshhold&&(this.panVelocityY=this.panVelocityX=0)}this.lastZoomVelocities.push(this.nextZoomVelocity);this.lastZoomVelocities.shift();0!==this.nextZoomVelocity&&(this.zoomCanvas(),this.zoomGrid(this.fixedPointX,this.fixedPointY,this.nextZoomVelocity),this.nextZoomVelocity=0);0!==this.zoomVelocity&&(this.zoomCanvas(this.fixedPointX,this.fixedPointY),this.zoomGrid(this.fixedPointX,this.fixedPointY,this.zoomVelocity),
this.zoomLevel=Math.min(Math.max(this.zoomLevel+this.zoomVelocity,-3),3),this.zoomVelocity*=this.zoomFriction,Math.abs(this.zoomVelocity)<this.zoomVelocityStopThreshhold&&(this.zoomVelocity=0));this.updateParticles();this.drawField();this.animationPaused||window.requestAnimationFrame(this.drawFrame.bind(this))}}catch(c){this.generateNewField()}}createParticle(b){this.particles[b][0]=this.wilson.worldCenterX+this.wilson.worldWidth*(Math.random()-.5);this.particles[b][1]=this.wilson.worldCenterY+this.wilson.worldHeight*
(Math.random()-.5);this.particles[b][2]=Math.round(this.lifetime*(.5*Math.random()+.75));this.numParticles++}destroyParticle(b){this.particles[b][2]=0;this.freeParticleSlots.push(b);this.numParticles--}updateParticles(){for(var b=0;b<this.wilsonUpdate.canvasHeight;b++)for(var c=0;c<this.wilsonUpdate.canvasWidth;c++){var a=this.wilsonUpdate.canvasWidth*b+c;a<this.particles.length&&this.particles[a][2]?(this.updateTexture[4*a]=this.particles[a][0],this.updateTexture[4*a+1]=this.particles[a][1],this.updateTexture[4*
a+2]=1):this.updateTexture[4*a+2]=0}this.wilsonUpdate.gl.texImage2D(this.wilsonUpdate.gl.TEXTURE_2D,0,this.wilsonUpdate.gl.RGBA,this.wilsonUpdate.canvasWidth,this.wilsonUpdate.canvasHeight,0,this.wilsonUpdate.gl.RGBA,this.wilsonUpdate.gl.FLOAT,this.updateTexture);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[0]);this.wilsonUpdate.render.drawFrame();b=new Float32Array(this.wilsonUpdate.render.getPixelData().buffer);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[1]);
this.wilsonUpdate.render.drawFrame();c=new Float32Array(this.wilsonUpdate.render.getPixelData().buffer);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[2]);this.wilsonUpdate.render.drawFrame();a=new Float32Array(this.wilsonUpdate.render.getPixelData().buffer);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[3]);this.wilsonUpdate.render.drawFrame();const d=new Float32Array(this.wilsonUpdate.render.getPixelData().buffer);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[4]);
this.wilsonUpdate.render.drawFrame();const g=new Float32Array(this.wilsonUpdate.render.getPixelData().buffer);for(let h=0;h<this.wilsonUpdate.canvasHeight;h++)for(let k=0;k<this.wilsonUpdate.canvasWidth;k++){const e=this.wilsonUpdate.canvasWidth*h+k;if(e<this.particles.length&&this.particles[e][2]){this.particles[e][0]=b[e];this.particles[e][1]=c[e];var f=Math.round((.5-(this.particles[e][1]-this.wilson.worldCenterY)/this.wilson.worldHeight)*this.wilson.canvasHeight);const l=Math.round(((this.particles[e][0]-
this.wilson.worldCenterX)/this.wilson.worldWidth+.5)*this.wilson.canvasWidth);0<=f&&f<this.wilson.canvasHeight&&0<=l&&l<this.wilson.canvasWidth?(f=f*this.wilson.canvasWidth+l,this.dimTexture[4*f]=this.lifetime,this.dimTexture[4*f+1]=255*a[e],this.dimTexture[4*f+2]=255*Math.max(d[e],g[e]),this.particles[e][2]--,0>=this.particles[e][2]&&this.destroyParticle(e)):this.destroyParticle(e)}}}drawField(){this.wilsonDim.gl.texImage2D(this.wilsonDim.gl.TEXTURE_2D,0,this.wilsonDim.gl.RGBA,this.wilsonDim.canvasWidth,
this.wilsonDim.canvasHeight,0,this.wilsonDim.gl.RGBA,this.wilsonDim.gl.UNSIGNED_BYTE,this.dimTexture);this.wilsonDim.render.drawFrame();this.dimTexture=this.wilsonDim.render.getPixelData();this.wilson.gl.texImage2D(this.wilson.gl.TEXTURE_2D,0,this.wilson.gl.RGBA,this.wilson.canvasWidth,this.wilson.canvasHeight,0,this.wilson.gl.RGBA,this.wilson.gl.UNSIGNED_BYTE,this.dimTexture);this.wilson.render.drawFrame()}panGrid(b,c){this.wilsonDim.gl.useProgram(this.wilsonDim.render.shaderPrograms[1]);this.wilsonDim.gl.uniform2f(this.wilsonDim.uniforms.pan[1],
b/this.wilson.worldWidth,-c/this.wilson.worldHeight);this.drawField();this.wilsonDim.gl.useProgram(this.wilsonDim.render.shaderPrograms[0]);this.wilson.draggables.recalculateLocations()}zoomGrid(b,c,a){if(!(-3>=this.zoomLevel||3<=this.zoomLevel)){var d=Math.pow(2,a);b=(b-this.wilson.worldCenterX)/this.wilson.worldWidth+.5;c=(this.wilson.worldCenterY-c)/this.wilson.worldHeight+.5;this.wilsonDim.gl.useProgram(this.wilsonDim.render.shaderPrograms[2]);this.wilsonDim.gl.uniform1f(this.wilsonDim.uniforms.scale[2],
d);this.wilsonDim.gl.uniform2f(this.wilsonDim.uniforms.fixedPoint[2],b,c);this.drawField();this.wilsonDim.gl.useProgram(this.wilsonDim.render.shaderPrograms[0]);this.wilson.draggables.recalculateLocations();if(0<a)for(a=Math.pow(2,1.5*a),d=0;d<this.particles.length;d++)this.particles[d][2]&&1<=d%a&&this.destroyParticle(d)}}onDragDraggable(b,c,a,d){this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[0]);this.wilsonUpdate.gl.uniform2f(this.wilsonUpdate.uniforms.draggableArg[0],c,
a);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[1]);this.wilsonUpdate.gl.uniform2f(this.wilsonUpdate.uniforms.draggableArg[1],c,a);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[2]);this.wilsonUpdate.gl.uniform2f(this.wilsonUpdate.uniforms.draggableArg[2],c,a);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[3]);this.wilsonUpdate.gl.uniform2f(this.wilsonUpdate.uniforms.draggableArg[3],c,a);this.wilsonUpdate.gl.useProgram(this.wilsonUpdate.render.shaderPrograms[4]);
this.wilsonUpdate.gl.uniform2f(this.wilsonUpdate.uniforms.draggableArg[4],c,a)}onGrabCanvas(b,c,a){this.zoomVelocity=this.panVelocityY=this.panVelocityX=0;this.lastPanVelocitiesX=[0,0,0,0];this.lastPanVelocitiesY=[0,0,0,0];this.lastZoomVelocities=[0,0,0,0]}onDragCanvas(b,c,a,d,g){this.nextPanVelocityX+=-a;this.nextPanVelocityY+=-d}onReleaseCanvas(b,c,a){let d=0;this.lastPanVelocitiesX.forEach((g,f)=>{Math.abs(g)>this.panVelocityX&&(this.panVelocityX=Math.abs(g),d=f)});this.panVelocityX=this.panVelocityX<
this.panVelocityStartThreshhold?0:this.lastPanVelocitiesX[d];this.lastPanVelocitiesY.forEach((g,f)=>{Math.abs(g)>this.panVelocityY&&(this.panVelocityY=Math.abs(g),d=f)});this.panVelocityY=this.panVelocityY<this.panVelocityStartThreshhold?0:this.lastPanVelocitiesY[d];this.lastZoomVelocities.forEach((g,f)=>{Math.abs(g)>this.zoomVelocity&&(this.zoomVelocity=Math.abs(g),d=f)});this.zoomVelocity=this.zoomVelocity<this.zoomVelocityStartThreshhold?0:this.lastZoomVelocities[d]}onWheelCanvas(b,c,a,d){this.fixedPointX=
b;this.fixedPointY=c;.3>Math.abs(a/100)?(this.nextZoomVelocity=a/100,this.zoomLevel=Math.min(Math.max(this.zoomLevel+a/100,-3),3)):this.zoomVelocity+=.05*Math.sign(a)}onPinchCanvas(b,c,a,d){a=1<=this.aspectRatio?a/this.wilson.worldWidth*10:a/this.wilson.worldHeight*10;this.zoomLevel=Math.min(Math.max(this.zoomLevel-a,-3),3);this.nextZoomVelocity=-a;this.fixedPointX=b;this.fixedPointY=c}zoomCanvas(){if(1<=this.aspectRatio){var b=this.wilson.input.getZoomedWorldCenter(this.fixedPointX,this.fixedPointY,
4*Math.pow(2,this.zoomLevel)*this.aspectRatio,4*Math.pow(2,this.zoomLevel));this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel)*this.aspectRatio;this.wilson.worldHeight=4*Math.pow(2,this.zoomLevel);this.wilson.worldCenterX=b[0];this.wilson.worldCenterY=b[1]}else b=this.wilson.input.getZoomedWorldCenter(this.fixedPointX,this.fixedPointY,4*Math.pow(2,this.zoomLevel),4*Math.pow(2,this.zoomLevel)/this.aspectRatio),this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel),this.wilson.worldHeight=4*Math.pow(2,
this.zoomLevel)/this.aspectRatio,this.wilson.worldCenterX=b[0],this.wilson.worldCenterY=b[1]}changeAspectRatio(){this.wilson.fullscreen.currentlyFullscreen?(this.aspectRatio=window.innerWidth/window.innerHeight,1<=this.aspectRatio?(this.wilson.changeCanvasSize(Math.ceil(this.resolution*this.aspectRatio),this.resolution),this.wilsonDim.changeCanvasSize(Math.ceil(this.resolution*this.aspectRatio),this.resolution),this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel)*this.aspectRatio,this.wilson.worldHeight=
4*Math.pow(2,this.zoomLevel)):(this.wilson.changeCanvasSize(this.resolution,Math.ceil(this.resolution/this.aspectRatio)),this.wilsonDim.changeCanvasSize(this.resolution,Math.ceil(this.resolution/this.aspectRatio)),this.wilson.worldWidth=4*Math.pow(2,this.zoomLevel),this.wilson.worldHeight=4*Math.pow(2,this.zoomLevel)/this.aspectRatio)):(this.aspectRatio=1,this.wilson.changeCanvasSize(this.resolution,this.resolution),this.wilsonDim.changeCanvasSize(this.resolution,this.resolution),this.wilson.worldWidth=
4*Math.pow(2,this.zoomLevel),this.wilson.worldHeight=4*Math.pow(2,this.zoomLevel))}handleResizeEvent(){this.wilson.fullscreen.currentlyFullscreen&&this.generateNewField()}};
