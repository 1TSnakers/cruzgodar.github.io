!function(){"use strict";let e=500,r=0,t=5e3,a=1,n=.6515,o=0,l=0,i=.0075,d=[],s=[],c=Site.applet_process_id,$=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D u_texture;
  
  uniform float dt;
  
  
  
  //Don't know how, but this writes an honest float32 to the 32 bits of output, which JS then decodes.
  
  float shift_right(float v, float amt)
  {
   v = floor(v) + 0.5;
   return floor(v / exp2(amt));
  }
  
  float shift_left(float v, float amt)
  {
   return floor(v * exp2(amt) + 0.5);
  }
  
  float mask_last(float v, float bits)
  {
   return mod(v, shift_left(1.0, bits));
  }
  
  float extract_bits(float num, float from, float to)
  {
   from = floor(from + 0.5); to = floor(to + 0.5);
   return mask_last(shift_right(num, from), to - from);
  }
  
  vec4 encode_float(float val)
  {
   if (val == 0.0) return vec4(0, 0, 0, 0);
   float sign = val > 0.0 ? 0.0 : 1.0;
   val = abs(val);
   float exponent = floor(log2(val));
   float biased_exponent = exponent + 127.0;
   float fraction = ((val / exp2(exponent)) - 1.0) * 8388608.0;
   float t = biased_exponent / 2.0;
   float last_bit_of_biased_exponent = fract(t) * 2.0;
   float remaining_bits_of_biased_exponent = floor(t);
   float byte4 = extract_bits(fraction, 0.0, 8.0) / 255.0;
   float byte3 = extract_bits(fraction, 8.0, 16.0) / 255.0;
   float byte2 = (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;
   float byte1 = (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0; 
   return vec4(byte4, byte3, byte2, byte1);
  }
  
  
  
  void main(void)
  {
   vec4 sample = texture2D(u_texture, (uv + vec2(1.0, 1.0)) / 2.0);
   
   if (int(sample.z) == 0)
   {
    return;
   }
   
   vec2 v = sample.xy;
 `,f=`
   ${$}
   
   float dx = sin(v.y);
   
   float x = dt * dx + v.x;
   
   gl_FragColor = encode_float(x);
  }
 `,u=`
   ${$}
   
   float dy = sin(v.x + 3.14159265);
   
   float y = dt * dy + v.y;
   
   gl_FragColor = encode_float(y);
  }
 `,g=`
   ${$}
   
   float dx = sin(v.y);
   float dy = sin(v.x + 3.14159265);
   
   float h = (atan(dy, dx) + 3.14159265) / 6.28318531;
   
   gl_FragColor = encode_float(h);
  }
 `,h=`
   ${$}
   
   float dx = sin(v.y);
   float dy = sin(v.x + 3.14159265);
   
   float s = 1.0 - exp(-1.2 * (dx * dx + dy * dy));
   
   gl_FragColor = encode_float(s);
  }
 `,m=new Wilson(Page.element.querySelector("#update-canvas"),{renderer:"gpu",shader:f,canvas_width:100,canvas_height:100});m.render.load_new_shader(u),m.render.load_new_shader(g),m.render.load_new_shader(h),m.render.init_uniforms(["dt"],0),m.render.init_uniforms(["dt"],1),m.render.init_uniforms(["dt"],2),m.render.init_uniforms(["dt"],3),m.gl.useProgram(m.render.shader_programs[0]),m.gl.uniform1f(m.uniforms.dt[0],i),m.gl.useProgram(m.render.shader_programs[1]),m.gl.uniform1f(m.uniforms.dt[1],i),m.gl.useProgram(m.render.shader_programs[2]),m.gl.uniform1f(m.uniforms.dt[2],i),m.gl.useProgram(m.render.shader_programs[3]),m.gl.uniform1f(m.uniforms.dt[3],i),m.render.create_framebuffer_texture_pair();let v=null;m.gl.bindTexture(m.gl.TEXTURE_2D,m.render.framebuffers[0].texture),m.gl.bindFramebuffer(m.gl.FRAMEBUFFER,null);let p=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D u_texture;
  
  void main(void)
  {
   vec3 v = texture2D(u_texture, (uv + vec2(1.0, 1.0)) / 2.0).xyz;
   
   gl_FragColor = vec4(v.x - 1.0 / 255.0, v.y, v.z, 1.0);
  }
 `,w=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D u_texture;
  
  uniform vec2 pan;
  
  void main(void)
  {
   vec2 tex_coord = (uv + vec2(1.0, 1.0)) / 2.0 - pan;
   
   if (tex_coord.x >= 0.0 && tex_coord.x < 1.0 && tex_coord.y >= 0.0 && tex_coord.y < 1.0)
   {
    vec3 v = texture2D(u_texture, tex_coord).xyz;
    
    gl_FragColor = vec4(v.x, v.y, v.z, 1.0);
    
    return;
   }
   
   gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
  }
 `,x=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D u_texture;
  
  uniform float scale;
  uniform vec2 fixed_point;
  
  void main(void)
  {
   vec2 tex_coord = ((uv + vec2(1.0, 1.0)) / 2.0 - fixed_point) * scale + fixed_point;
   
   if (tex_coord.x >= 0.0 && tex_coord.x < 1.0 && tex_coord.y >= 0.0 && tex_coord.y < 1.0)
   {
    vec3 v = texture2D(u_texture, tex_coord).xyz;
    
    gl_FragColor = vec4(v.x / 1.06, v.y, v.z, 1.0);
    
    return;
   }
   
   gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
  }
 `,_={renderer:"gpu",shader:p,canvas_width:e,canvas_height:e},b=new Wilson(Page.element.querySelector("#dim-canvas"),_);b.gl.texParameteri(b.gl.TEXTURE_2D,b.gl.TEXTURE_MAG_FILTER,b.gl.LINEAR),b.gl.texParameteri(b.gl.TEXTURE_2D,b.gl.TEXTURE_MIN_FILTER,b.gl.LINEAR),b.render.load_new_shader(w),b.render.init_uniforms(["pan"],1),b.gl.useProgram(b.render.shader_programs[0]),b.render.load_new_shader(x),b.render.init_uniforms(["scale","fixed_point"],2),b.gl.useProgram(b.render.shader_programs[0]),b.render.create_framebuffer_texture_pair(b.gl.UNSIGNED_BYTE),b.gl.bindTexture(b.gl.TEXTURE_2D,b.render.framebuffers[0].texture),b.gl.bindFramebuffer(b.gl.FRAMEBUFFER,null);let y=new Uint8Array(e*e*4),E=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D u_texture;
  
  vec3 hsv2rgb(vec3 c)
  {
   vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
   vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
  }
  
  void main(void)
  {
   vec3 v = texture2D(u_texture, (vec2(1.0 + uv.x, 1.0 - uv.y)) / 2.0).xyz;
   
   gl_FragColor = vec4(hsv2rgb(vec3(v.y, v.z, v.x)), 1.0);
  }
 `,D={renderer:"gpu",shader:E,canvas_width:e,canvas_height:e,world_width:2*Math.PI,world_height:2*Math.PI,world_center_x:0,world_center_y:0,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:I,mousedown_callback:Z,touchstart_callback:Z,mousedrag_callback:ee,touchmove_callback:ee,mouseup_callback:er,touchend_callback:er,wheel_callback:function e(r,t,a,i){o=r,l=t,.3>Math.abs(a/100)?(Y=a/100,n=Math.min(Math.max(n+a/100,-3),3)):X+=.05*Math.sign(a)},pinch_callback:function e(r,t,i,d){let s;n=Math.min(Math.max(n-(s=a>=1?i/T.world_width*10:i/T.world_height*10),-3),3),Y=-s,o=r,l=t}},T=new Wilson(Page.element.querySelector("#output-canvas"),D);T.render.create_framebuffer_texture_pair(T.gl.UNSIGNED_BYTE),T.gl.bindTexture(T.gl.TEXTURE_2D,T.render.framebuffers[0].texture),T.gl.bindFramebuffer(T.gl.FRAMEBUFFER,null),Page.element.querySelector("#code-textarea");let F=Page.element.querySelector("#generate-button");F.addEventListener("click",()=>{T.world_center_x=0,T.world_center_y=0,T.world_width=2*Math.PI,T.world_height=2*Math.PI,n=.6515,I()});let R=Page.element.querySelector("#resolution-input");R.addEventListener("input",I);let P=Page.element.querySelector("#max-particles-input");P.addEventListener("input",I);let z=Page.element.querySelector("#speed-input");z.addEventListener("input",()=>{i=parseFloat(z.value||1)/75,m.gl.useProgram(m.render.shader_programs[0]),m.gl.uniform1f(m.uniforms.dt[0],i),m.gl.useProgram(m.render.shader_programs[1]),m.gl.uniform1f(m.uniforms.dt[1],i),m.gl.useProgram(m.render.shader_programs[2]),m.gl.uniform1f(m.uniforms.dt[2],i),m.gl.useProgram(m.render.shader_programs[3]),m.gl.uniform1f(m.uniforms.dt[3],i)});let U=Page.element.querySelector("#download-button");function I(){e=parseInt(R.value||500),r=0,t=Math.max(parseInt(P.value||3e3),100);let a=Math.ceil(Math.sqrt(t));m.change_canvas_size(a,a),i=parseFloat(z.value||1)/100,ea(),d=Array(t),s=Array(t);for(let n=0;n<t;n++)d[n]=[0,0,0],s[n]=n;v=new Float32Array(m.canvas_width*m.canvas_height*4);for(let o=0;o<m.canvas_height;o++)for(let l=0;l<m.canvas_width;l++){let c=m.canvas_width*o+l;v[4*c]=0,v[4*c+1]=0,v[4*c+2]=0,v[4*c+3]=0}y=new Uint8Array(T.canvas_width*T.canvas_height*4);for(let $=0;$<T.canvas_height;$++)for(let f=0;f<T.canvas_width;f++){let u=T.canvas_width*$+f;y[4*u]=0,y[4*u+1]=0,y[4*u+2]=0}window.requestAnimationFrame(k)}U.addEventListener("click",()=>{T.download_frame("a-vector-field.png")}),I(),Page.show();let A=-1;function k(e){try{let a=e-A;if(A=e,0===a)return;if(r<t){let i=Math.min(Math.ceil(t/80),t-r);for(let $=s.length-i;$<s.length;$++)S(s[$]);s.splice(s.length-i,i)}if(H.push(K),J.push(M),H.shift(),J.shift(),0!==K||0!==M){let f=-K,u=-M;1>Math.abs(f/T.world_width*T.canvas_width)?f=0:K=0,1>Math.abs(u/T.world_height*T.canvas_height)?u=0:M=0,G(f,u),T.world_center_y-=u,T.world_center_x-=f}else if(0!==N||0!==C){let g=-N,h=-C;1>Math.abs(g/T.world_width*T.canvas_width)&&(g=0),1>Math.abs(h/T.world_height*T.canvas_height)&&(h=0),G(g,h),T.world_center_y-=h,C*=W,T.world_center_x-=g,N*=W,Math.sqrt(N*N+C*C)<j&&(N=0,C=0)}if(O.push(Y),O.shift(),0!==Y&&(et(),L(o,l,Y),Y=0),0!==X&&(et(o,l),L(o,l,X),n=Math.min(Math.max(n+X,-3),3),X*=Q,Math.abs(X)<V&&(X=0)),function e(){for(let r=0;r<m.canvas_height;r++)for(let t=0;t<m.canvas_width;t++){let a=m.canvas_width*r+t;a<d.length&&d[a][2]?(v[4*a]=d[a][0],v[4*a+1]=d[a][1],v[4*a+2]=1):v[4*a+2]=0}m.gl.texImage2D(m.gl.TEXTURE_2D,0,m.gl.RGBA,m.canvas_width,m.canvas_height,0,m.gl.RGBA,m.gl.FLOAT,v),m.gl.useProgram(m.render.shader_programs[0]),m.render.draw_frame();let n=new Float32Array(m.render.get_pixel_data().buffer);m.gl.useProgram(m.render.shader_programs[1]),m.render.draw_frame();let o=new Float32Array(m.render.get_pixel_data().buffer);m.gl.useProgram(m.render.shader_programs[2]),m.render.draw_frame();let l=new Float32Array(m.render.get_pixel_data().buffer);m.gl.useProgram(m.render.shader_programs[3]),m.render.draw_frame();let i=new Float32Array(m.render.get_pixel_data().buffer);for(let s=0;s<m.canvas_height;s++)for(let c=0;c<m.canvas_width;c++){let $=m.canvas_width*s+c;if($<d.length&&d[$][2]){d[$][0]=n[$],d[$][1]=o[$];let f=Math.round((.5-(d[$][1]-T.world_center_y)/T.world_height)*T.canvas_height),u=Math.round(((d[$][0]-T.world_center_x)/T.world_width+.5)*T.canvas_width);if(f>=0&&f<T.canvas_height&&u>=0&&u<T.canvas_width){let g=f*T.canvas_width+u;y[4*g]=255,y[4*g+1]=255*l[$],y[4*g+2]=255*i[$],d[$][2]--,d[$][2]<=0&&q($)}else q($)}}}(),B(),c!==Site.applet_process_id){console.log("Terminated applet process");return}window.requestAnimationFrame(k)}catch(p){I()}}function S(e){d[e][0]=T.world_center_x+T.world_width*(Math.random()-.5),d[e][1]=T.world_center_y+T.world_height*(Math.random()-.5),d[e][2]=Math.round(255*(.5*Math.random()+.75)),r++}function q(e){d[e][2]=0,s.push(e),r--}function B(){b.gl.texImage2D(b.gl.TEXTURE_2D,0,b.gl.RGBA,b.canvas_width,b.canvas_height,0,b.gl.RGBA,b.gl.UNSIGNED_BYTE,y),b.render.draw_frame(),y=b.render.get_pixel_data(),T.gl.texImage2D(T.gl.TEXTURE_2D,0,T.gl.RGBA,T.canvas_width,T.canvas_height,0,T.gl.RGBA,T.gl.UNSIGNED_BYTE,y),T.render.draw_frame()}function G(e,r){b.gl.useProgram(b.render.shader_programs[1]),b.gl.uniform2f(b.uniforms.pan[1],e/T.world_width,-r/T.world_height),B(),b.gl.useProgram(b.render.shader_programs[0])}function L(e,r,t){if(n<=-3||n>=3)return;let a=(e-T.world_center_x)/T.world_width+.5,o=(T.world_center_y-r)/T.world_height+.5;if(b.gl.useProgram(b.render.shader_programs[2]),b.gl.uniform1f(b.uniforms.scale[2],Math.pow(2,t)),b.gl.uniform2f(b.uniforms.fixed_point[2],a,o),B(),b.gl.useProgram(b.render.shader_programs[0]),t>0){let l=Math.pow(2,1.5*t);for(let i=0;i<d.length;i++)d[i][2]&&i%l>=1&&q(i)}}let N=0,C=0,X=0,K=0,M=0,Y=0,H=[],J=[],O=[],W=.96,j=25e-5,Q=.9,V=.002;function Z(e,r,t){N=0,C=0,X=0,H=[0,0,0,0],J=[0,0,0,0],O=[0,0,0,0]}function ee(e,r,t,a,n){K+=-t,M+=-a}function er(e,r,t){let a=0;H.forEach((e,r)=>{Math.abs(e)>N&&(N=Math.abs(e),a=r)}),N=N<25e-5?0:H[a],J.forEach((e,r)=>{Math.abs(e)>C&&(C=Math.abs(e),a=r)}),C=C<25e-5?0:J[a],O.forEach((e,r)=>{Math.abs(e)>X&&(X=Math.abs(e),a=r)}),X=X<.002?0:O[a]}function et(){if(a>=1){let e=T.input.get_zoomed_world_center(o,l,4*Math.pow(2,n)*a,4*Math.pow(2,n));T.world_width=4*Math.pow(2,n)*a,T.world_height=4*Math.pow(2,n),T.world_center_x=e[0],T.world_center_y=e[1]}else{let r=T.input.get_zoomed_world_center(o,l,4*Math.pow(2,n),4*Math.pow(2,n)/a);T.world_width=4*Math.pow(2,n),T.world_height=4*Math.pow(2,n)/a,T.world_center_x=r[0],T.world_center_y=r[1]}}function ea(){T.fullscreen.currently_fullscreen?(a=window.innerWidth/window.innerHeight)>=1?(T.change_canvas_size(Math.ceil(e*a),e),b.change_canvas_size(Math.ceil(e*a),e),T.world_width=4*Math.pow(2,n)*a,T.world_height=4*Math.pow(2,n)):(T.change_canvas_size(e,Math.ceil(e/a)),b.change_canvas_size(e,Math.ceil(e/a)),T.world_width=4*Math.pow(2,n),T.world_height=4*Math.pow(2,n)/a):(a=1,T.change_canvas_size(e,e),b.change_canvas_size(e,e),T.world_width=4*Math.pow(2,n),T.world_height=4*Math.pow(2,n))}window.addEventListener("resize",ea),Page.temporary_handlers.resize.push(ea)}();