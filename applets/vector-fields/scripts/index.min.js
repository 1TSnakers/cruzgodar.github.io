!function(){"use strict";let e=500,r=0,t=6e3,a=1,n=.6515,l=0,o=0,i=.0075,d=[],s=[],$=[],c=Site.applet_process_id,h=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D u_texture;
  
  uniform float dt;
  
  
  
  //Don't know how, but this writes an honest float32 to the 32 bits of output, which JS then decodes.
  
  float shift_right(float v, float amt)
  {
   v = floor(v) + 0.5;
   return floor(v / exp2(amt));
  }
  
  float shift_left(float v, float amt)
  {
   return floor(v * exp2(amt) + 0.5);
  }
  
  float mask_last(float v, float bits)
  {
   return mod(v, shift_left(1.0, bits));
  }
  
  float extract_bits(float num, float from, float to)
  {
   from = floor(from + 0.5); to = floor(to + 0.5);
   return mask_last(shift_right(num, from), to - from);
  }
  
  vec4 encode_float(float val)
  {
   if (val == 0.0) return vec4(0, 0, 0, 0);
   float sign = val > 0.0 ? 0.0 : 1.0;
   val = abs(val);
   float exponent = floor(log2(val));
   float biased_exponent = exponent + 127.0;
   float fraction = ((val / exp2(exponent)) - 1.0) * 8388608.0;
   float t = biased_exponent / 2.0;
   float last_bit_of_biased_exponent = fract(t) * 2.0;
   float remaining_bits_of_biased_exponent = floor(t);
   float byte4 = extract_bits(fraction, 0.0, 8.0) / 255.0;
   float byte3 = extract_bits(fraction, 8.0, 16.0) / 255.0;
   float byte2 = (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;
   float byte1 = (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0; 
   return vec4(byte4, byte3, byte2, byte1);
  }
  
  
  
  void main(void)
  {
   vec4 sample = texture2D(u_texture, (uv + vec2(1.0, 1.0)) / 2.0);
   
   if (int(sample.z) == 0)
   {
    return;
   }
   
   vec2 v = sample.xy;
 `,f=`
   ${h}
   
   float dx = sin(v.y);
   
   float x = dt * dx + v.x;
   
   gl_FragColor = encode_float(x);
  }
 `,u=`
   ${h}
   
   float dy = sin(v.x + 3.14159265);
   
   float y = dt * dy + v.y;
   
   gl_FragColor = encode_float(y);
  }
 `,g=`
   ${h}
   
   float dx = sin(v.y);
   float dy = sin(v.x + 3.14159265);
   
   float h = (atan(dy, dx) + 3.14159265) / 6.28318531;
   
   gl_FragColor = encode_float(h);
  }
 `,v=`
   ${h}
   
   float dx = sin(v.y);
   float dy = sin(v.x + 3.14159265);
   
   float s = 1.0 - exp(-1.2 * (dx * dx + dy * dy));
   
   gl_FragColor = encode_float(s);
  }
 `,w=new Wilson(Page.element.querySelector("#update-canvas"),{renderer:"gpu",shader:f,canvas_width:100,canvas_height:100});w.render.load_new_shader(u),w.render.load_new_shader(g),w.render.load_new_shader(v),w.render.init_uniforms(["dt"],0),w.render.init_uniforms(["dt"],1),w.render.init_uniforms(["dt"],2),w.render.init_uniforms(["dt"],3),w.gl.useProgram(w.render.shader_programs[0]),w.gl.uniform1f(w.uniforms.dt[0],i),w.gl.useProgram(w.render.shader_programs[1]),w.gl.uniform1f(w.uniforms.dt[1],i),w.gl.useProgram(w.render.shader_programs[2]),w.gl.uniform1f(w.uniforms.dt[2],i),w.gl.useProgram(w.render.shader_programs[3]),w.gl.uniform1f(w.uniforms.dt[3],i),w.render.create_framebuffer_texture_pair();let m=null;w.gl.bindTexture(w.gl.TEXTURE_2D,w.render.framebuffers[0].texture),w.gl.bindFramebuffer(w.gl.FRAMEBUFFER,null);let p=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D u_texture;
  
  void main(void)
  {
   vec3 v = texture2D(u_texture, (uv + vec2(1.0, 1.0)) / 2.0).xyz;
   
   gl_FragColor = vec4(v.x - 1.0 / 255.0, v.y, v.z, 1.0);
  }
 `,x={renderer:"gpu",shader:p,canvas_width:e,canvas_height:e},_=new Wilson(Page.element.querySelector("#dim-canvas"),x);_.render.create_framebuffer_texture_pair(_.gl.UNSIGNED_BYTE),_.gl.bindTexture(_.gl.TEXTURE_2D,_.render.framebuffers[0].texture),_.gl.bindFramebuffer(_.gl.FRAMEBUFFER,null);let b=new Uint8Array(e*e*4),y=`
  precision highp float;
  precision highp sampler2D;
  
  varying vec2 uv;
  
  uniform sampler2D u_texture;
  
  vec3 hsv2rgb(vec3 c)
  {
   vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
   vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
  }
  
  void main(void)
  {
   vec3 v = texture2D(u_texture, (vec2(1.0 + uv.x, 1.0 - uv.y)) / 2.0).xyz;
   
   gl_FragColor = vec4(hsv2rgb(vec3(v.y, v.z, v.x)), 1.0);
  }
 `,E={renderer:"gpu",shader:y,canvas_width:e,canvas_height:e,world_width:2*Math.PI,world_height:2*Math.PI,world_center_x:0,world_center_y:0,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:k,mousedown_callback:Q,touchstart_callback:Q,mousedrag_callback:V,touchmove_callback:V,mouseup_callback:Z,touchend_callback:Z,wheel_callback:function e(r,t,a,i){l=r,o=t,.3>Math.abs(a/100)?(I(r,t,a/100),n=Math.min(Math.max(n+a/100,-3),3)):L+=.05*Math.sign(a),ee()},pinch_callback:function e(r,t,i,d){let s;I(r,t,-(s=a>=1?i/D.world_width*10:i/D.world_height*10)),n=Math.min(Math.max(n-s,-3),3),K=-s,l=r,o=t,ee()}},D=new Wilson(Page.element.querySelector("#output-canvas"),E);D.render.create_framebuffer_texture_pair(D.gl.UNSIGNED_BYTE),D.gl.bindTexture(D.gl.TEXTURE_2D,D.render.framebuffers[0].texture),D.gl.bindFramebuffer(D.gl.FRAMEBUFFER,null),Page.element.querySelector("#code-textarea");let F=Page.element.querySelector("#generate-button");F.addEventListener("click",()=>{D.world_center_x=0,D.world_center_y=0,D.world_width=2*Math.PI,D.world_height=2*Math.PI,n=.6515,k()});let T=Page.element.querySelector("#resolution-input");T.addEventListener("input",k);let z=Page.element.querySelector("#max-particles-input");z.addEventListener("input",k);let R=Page.element.querySelector("#speed-input");R.addEventListener("input",()=>{i=parseFloat(R.value||1)/75,w.gl.useProgram(w.render.shader_programs[0]),w.gl.uniform1f(w.uniforms.dt[0],i),w.gl.useProgram(w.render.shader_programs[1]),w.gl.uniform1f(w.uniforms.dt[1],i),w.gl.useProgram(w.render.shader_programs[2]),w.gl.uniform1f(w.uniforms.dt[2],i),w.gl.useProgram(w.render.shader_programs[3]),w.gl.uniform1f(w.uniforms.dt[3],i)});let P=Page.element.querySelector("#download-button");function k(){e=parseInt(T.value||500),r=0,t=Math.max(parseInt(z.value||3e3),100);let a=Math.ceil(Math.sqrt(t));w.change_canvas_size(a,a),i=parseFloat(R.value||1)/100,er(),s=Array(t),$=Array(t);for(let n=0;n<t;n++)s[n]=[0,0,0],$[n]=n;m=new Float32Array(w.canvas_width*w.canvas_height*4);for(let l=0;l<w.canvas_height;l++)for(let o=0;o<w.canvas_width;o++){let d=w.canvas_width*l+o;m[4*d]=0,m[4*d+1]=0,m[4*d+2]=0,m[4*d+3]=0}b=new Uint8Array(D.canvas_width*D.canvas_height*4);for(let c=0;c<D.canvas_height;c++)for(let h=0;h<D.canvas_width;h++){let f=D.canvas_width*c+h;b[4*f]=0,b[4*f+1]=0,b[4*f+2]=0}window.requestAnimationFrame(q)}P.addEventListener("click",()=>{D.download_frame("a-vector-field.png")}),k(),Page.show();let S=-1;function q(e){try{let a=e-S;if(S=e,0===a)return;if(r<t){let i=Math.min(Math.ceil(t/80),t-r);for(let d=$.length-i;d<$.length;d++)B($[d]);$.splice($.length-i,i)}if(function e(){for(let r=0;r<w.canvas_height;r++)for(let t=0;t<w.canvas_width;t++){let a=w.canvas_width*r+t;a<s.length&&s[a][2]?(m[4*a]=s[a][0],m[4*a+1]=s[a][1],m[4*a+2]=1):m[4*a+2]=0}w.gl.texImage2D(w.gl.TEXTURE_2D,0,w.gl.RGBA,w.canvas_width,w.canvas_height,0,w.gl.RGBA,w.gl.FLOAT,m),w.gl.useProgram(w.render.shader_programs[0]),w.render.draw_frame();let n=new Float32Array(w.render.get_pixel_data().buffer);w.gl.useProgram(w.render.shader_programs[1]),w.render.draw_frame();let l=new Float32Array(w.render.get_pixel_data().buffer);w.gl.useProgram(w.render.shader_programs[2]),w.render.draw_frame();let o=new Float32Array(w.render.get_pixel_data().buffer);w.gl.useProgram(w.render.shader_programs[3]),w.render.draw_frame();let i=new Float32Array(w.render.get_pixel_data().buffer);for(let d=0;d<w.canvas_height;d++)for(let $=0;$<w.canvas_width;$++){let c=w.canvas_width*d+$;if(c<s.length&&s[c][2]){s[c][0]=n[c],s[c][1]=l[c];let h=Math.round((.5-(s[c][1]-D.world_center_y)/D.world_height)*D.canvas_height),f=Math.round(((s[c][0]-D.world_center_x)/D.world_width+.5)*D.canvas_width);if(h>=0&&h<D.canvas_height&&f>=0&&f<D.canvas_width){let u=h*D.canvas_width+f;b[4*u]=255,b[4*u+1]=255*o[c],b[4*u+2]=255*i[c],s[c][2]--,s[c][2]<=0&&U(c)}else{U(c);continue}}}}(),_.gl.texImage2D(_.gl.TEXTURE_2D,0,_.gl.RGBA,_.canvas_width,_.canvas_height,0,_.gl.RGBA,_.gl.UNSIGNED_BYTE,b),_.render.draw_frame(),b=_.render.get_pixel_data(),D.gl.texImage2D(D.gl.TEXTURE_2D,0,D.gl.RGBA,D.canvas_width,D.canvas_height,0,D.gl.RGBA,D.gl.UNSIGNED_BYTE,b),D.render.draw_frame(),Y.push(C),M.push(X),Y.shift(),M.shift(),C=0,X=0,0!==G||0!==N){let h=-G*D.world_width,f=-N*D.world_height,u=Math.round(-f/D.world_height*D.canvas_height),g=Math.round(h/D.world_width*D.canvas_width);A(u,g),u?(D.world_center_y-=f,N*=J):N=0,g?(D.world_center_x-=h,G*=J):G=0,Math.sqrt(G*G+N*N)<O&&(G=0,N=0)}if(H.push(K),H.shift(),K=0,0!==L&&(n+=L,n=Math.min(Math.max(n,-3),3),ee(l,o),L*=W,Math.abs(L)<j&&(L=0)),c!==Site.applet_process_id){console.log("Terminated applet process");return}window.requestAnimationFrame(q)}catch(v){k()}}function B(e){s[e][0]=D.world_center_x+D.world_width*(Math.random()-.5),s[e][1]=D.world_center_y+D.world_height*(Math.random()-.5),s[e][2]=Math.round(255*(.5*Math.random()+.75)),r++}function U(e){s[e][2]=0,$.push(e),r--}function A(e,r){if(e<=0&&r<=0)for(let t=0;t<D.canvas_height;t++)for(let a=0;a<D.canvas_width;a++)t-e<D.canvas_height&&a-r<D.canvas_width?d[t][a]=d[t-e][a-r]:d[t][a]=[0,0,0];else if(e>0&&r<=0)for(let n=D.canvas_height-1;n>=0;n--)for(let l=0;l<D.canvas_width;l++)n-e>=0&&l-r<D.canvas_width?d[n][l]=d[n-e][l-r]:d[n][l]=[0,0,0];else if(e<=0&&r>0)for(let o=0;o<D.canvas_height;o++)for(let i=D.canvas_width-1;i>=0;i--)o-e<D.canvas_height&&i-r>=0?d[o][i]=d[o-e][i-r]:d[o][i]=[0,0,0];else for(let s=D.canvas_height-1;s>=0;s--)for(let $=D.canvas_width-1;$>=0;$--)s-e>=0&&$-r>=0?d[s][$]=d[s-e][$-r]:d[s][$]=[0,0,0]}function I(e,r,t){if(n<=-3||n>=3)return;let a=Math.pow(2,t),l=Math.round((.5-(r-D.world_center_y)/D.world_height)*D.canvas_height),o=Math.round(((e-D.world_center_x)/D.world_width+.5)*D.canvas_width),i=Array(D.canvas_height);for(let $=0;$<D.canvas_height;$++){i[$]=Array(D.canvas_width);for(let c=0;c<D.canvas_width;c++){let h=Math.round(($-l)*a+l),f=Math.round((c-o)*a+o);h>=0&&h<D.canvas_height&&f>=0&&f<D.canvas_width?i[$][c]=[Math.ceil(d[h][f][0]/1.08),d[h][f][1],d[h][f][2]]:i[$][c]=[0,0,0]}}let u=Math.pow(2,2*t),g=0;if(t>0)for(let v=0;v<s.length;v++)s[v][2]&&v%u>=1&&(U(v),g++);d=i}let G=0,N=0,L=0,C=0,X=0,K=0,Y=[],M=[],H=[],J=.96,O=.002,W=.93,j=.002;function Q(e,r,t){G=0,N=0,L=0,Y=[0,0,0,0],M=[0,0,0,0],H=[0,0,0,0]}function V(e,r,t,a,n){let l=Math.round(-a/D.world_height*D.canvas_height),o=Math.round(t/D.world_width*D.canvas_width);A(l,o),l?(D.world_center_y-=a,X=-a/D.world_height):X=0,o?(D.world_center_x-=t,C=-t/D.world_width):C=0}function Z(e,r,t){let a=0;Y.forEach((e,r)=>{Math.abs(e)>G&&(G=Math.abs(e),a=r)}),G=G<.002?0:Y[a],M.forEach((e,r)=>{Math.abs(e)>N&&(N=Math.abs(e),a=r)}),N=N<.002?0:M[a],H.forEach((e,r)=>{Math.abs(e)>L&&(L=Math.abs(e),a=r)}),L=L<.002?0:H[a]}function ee(){if(a>=1){let e=D.input.get_zoomed_world_center(l,o,4*Math.pow(2,n)*a,4*Math.pow(2,n));D.world_width=4*Math.pow(2,n)*a,D.world_height=4*Math.pow(2,n),D.world_center_x=e[0],D.world_center_y=e[1]}else{let r=D.input.get_zoomed_world_center(l,o,4*Math.pow(2,n),4*Math.pow(2,n)/a);D.world_width=4*Math.pow(2,n),D.world_height=4*Math.pow(2,n)/a,D.world_center_x=r[0],D.world_center_y=r[1]}}function er(){D.fullscreen.currently_fullscreen?(a=window.innerWidth/window.innerHeight)>=1?(D.change_canvas_size(Math.ceil(e*a),e),_.change_canvas_size(Math.ceil(e*a),e),D.world_width=4*Math.pow(2,n)*a,D.world_height=4*Math.pow(2,n)):(D.change_canvas_size(e,Math.ceil(e/a)),_.change_canvas_size(e,Math.ceil(e/a)),D.world_width=4*Math.pow(2,n),D.world_height=4*Math.pow(2,n)/a):(a=1,D.change_canvas_size(e,e),_.change_canvas_size(e,e),D.world_width=4*Math.pow(2,n),D.world_height=4*Math.pow(2,n))}window.addEventListener("resize",er),Page.temporary_handlers.resize.push(er)}();