onmessage=async function(a){grid_size=a.data[0],num_grains=a.data[1],maximum_speed=a.data[2],await draw_sandpile_graph(),postMessage(["done"])};let grid_size=null,num_grains=null,maximum_speed=null,sandpile_graph=[],old_sandpile_graph=[];async function draw_sandpile_graph(){sandpile_graph=[],old_sandpile_graph=[];for(let a=0;a<grid_size;a++){sandpile_graph[a]=[],old_sandpile_graph[a]=[];for(let e=0;e<grid_size;e++)sandpile_graph[a][e]=0,old_sandpile_graph[a][e]=0}sandpile_graph[Math.floor(grid_size/2)][Math.floor(grid_size/2)]=num_grains;let a=0,e=!0;for(;e;){e=!1;for(let a=1;a<grid_size-1;a++)for(let i=1;i<grid_size-1;i++)sandpile_graph[a][i]>=4&&(sandpile_graph[a][i]-=4,sandpile_graph[a-1][i]++,sandpile_graph[a][i+1]++,sandpile_graph[a+1][i]++,sandpile_graph[a][i-1]++,e=!0);a%Math.floor(num_grains/100)==0&&(maximum_speed?color_piles():await color_piles()),a++}maximum_speed?color_piles():await color_piles()}function color_piles(){return new Promise(function(a,e){let i=0;for(let a=1;a<grid_size-1;a++)for(let e=1;e<grid_size-1;e++)sandpile_graph[a][e]>i&&(i=sandpile_graph[a][e]);for(let a=1;a<grid_size-1;a++)for(let e=1;e<grid_size-1;e++)if(sandpile_graph[a][e]!=old_sandpile_graph[a][e]){let s=sandpile_graph[a][e]/i*255;0==sandpile_graph[a][e]?postMessage([e,a,"rgb(0, 0, 0)"]):1==sandpile_graph[a][e]?postMessage([e,a,"rgb(0, 127, 255)"]):2==sandpile_graph[a][e]?postMessage([e,a,"rgb(92, 0, 255)"]):3==sandpile_graph[a][e]?postMessage([e,a,"rgb(255, 255, 0)"]):postMessage([e,a,`rgb(${s}, ${s}, ${s})`])}for(let a=1;a<grid_size-1;a++)for(let e=1;e<grid_size-1;e++)old_sandpile_graph[a][e]=sandpile_graph[a][e];setTimeout(a,50)})}