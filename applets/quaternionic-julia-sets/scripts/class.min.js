import{dotProduct4,qmul,RaymarchApplet}from"/scripts/applets/raymarchApplet.min.js";import{animate}from"/scripts/src/utils.min.js";class QuaternionicJuliaSets extends RaymarchApplet{constructor({canvas}){super({canvas:canvas,distanceEstimatorGlsl:`
			vec4 z = vec4(pos, 0.0);
			vec4 zPrime = vec4(1.0, 0.0, 0.0, 0.0);
			float r;
			
			for (int iteration = 0; iteration < 16; iteration++)
			{
				r = length(z);
				
				if (r > 16.0)
				{
					break;
				}
				
				zPrime = 2.0 * qmul(z, zPrime);
				
				z = qmul(z, z);
				
				z += mix(vec4(pos, 0.0), vec4(c, 0.0), juliaProportion);
			}
			
			
			r = length(z);
			return .5 * r * log(r) / length(zPrime);
		`,getColorGlsl:`
			vec4 z = vec4(pos, 0.0);
			vec4 zPrime = vec4(1.0, 0.0, 0.0, 0.0);
			float r;
			
			vec3 color = vec3(1.0, 1.0, 1.0);
			float colorScale = .5;
			
			for (int iteration = 0; iteration < 16; iteration++)
			{
				r = length(z);
				
				if (r > 16.0)
				{
					break;
				}
				
				zPrime = 2.0 * qmul(z, zPrime);
				
				z = qmul(z, z);
				
				z += mix(vec4(pos, 0.0), vec4(c, 0.0), juliaProportion);
				
				color = mix(color, abs(normalize(z.xyz)), colorScale);
				
				colorScale *= .5;
			}
			
			color /= max(max(color.x, color.y), color.z);
			
			return color;
		`,addGlsl:`
			vec4 qmul(vec4 z, vec4 w)
			{
				return vec4(z.x*w.x - z.y*w.y - z.z*w.z - z.w*w.w, z.x*w.y + z.y*w.x + z.z*w.w - z.w*w.z, z.x*w.z - z.y*w.w + z.z*w.x + z.w*w.y, z.x*w.w + z.y*w.z - z.z*w.y + z.w*w.x);
			}
		`,uniformsGlsl:`
			uniform vec3 c;
			uniform float juliaProportion;
		`,uniforms:{c:[-.54,-.25,-.668],juliaProportion:1},stepFactor:.75,theta:1.3094,phi:1.9975,cameraPos:[-.736138,-2.75197,1.29509],lightPos:[-5,-5,5],lightBrightness:1.25})}distanceEstimator(x,y,z){var o=this.uniforms.c,r=this.uniforms.juliaProportion;let t=[x,y,z,0],i=[1,0,0,0],e=0;for(let a=0;a<16&&!(16<(e=Math.sqrt(dotProduct4(t,t))));a++)(i=qmul(...t,...i))[0]*=2,i[1]*=2,i[2]*=2,i[3]*=2,(t=qmul(...t,...t))[0]+=(1-r)*x+r*o[0],t[1]+=(1-r)*y+r*o[1],t[2]+=(1-r)*z+r*o[2];return.5*Math.log(e)*e/Math.sqrt(dotProduct4(i,i))}switchBulb(instant){var o=this.uniforms.juliaProportion;if(Math.floor(o)===o){const r=o,i=1-o;animate(t=>{this.setUniforms({juliaProportion:(1-t)*r+t*i}),this.needNewFrame=!0},instant?0:1e3,"easeInOutQuad")}}downloadFrame(){this.uniforms.juliaProportion<.5?this.wilson.downloadFrame("the-quaternionic-mandelbrot-set.png"):this.wilson.downloadFrame("a-quaternionic-julia-set.png")}downloadHighResFrame(filename,resolutionMultiplier=1){this.uniforms.juliaProportion<.5?super.downloadHighResFrame("the-quaternionic-mandelbrot-set.png",resolutionMultiplier):super.downloadHighResFrame("a-quaternionic-julia-set.png",resolutionMultiplier)}}export{QuaternionicJuliaSets};