!function(){"use strict";let t={renderer:"gpu",shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio_x;\n\t\tuniform float aspect_ratio_y;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 1.5;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\tuniform int draw_sphere;\n\t\t\n\t\tuniform int max_iterations;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 1000.0;\n\t\tuniform int max_marches;\n\t\tuniform float step_factor;\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .1;\n\t\t\n\t\tuniform float k_slice;\n\t\t\n\t\t\n\t\tuniform vec3 c;\n\t\tuniform float julia_proportion;\n\t\t\n\t\t\n\t\t\n\t\tvec4 qmul(vec4 z, vec4 w)\n\t\t{\n\t\t\treturn vec4(z.x*w.x - z.y*w.y - z.z*w.z - z.w*w.w, z.x*w.y + z.y*w.x + z.z*w.w - z.w*w.z, z.x*w.z - z.y*w.w + z.z*w.x + z.w*w.y, z.x*w.w + z.y*w.z - z.z*w.y + z.w*w.x);\n\t\t}\n\t\t\n\t\t\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec4 z = vec4(pos, k_slice);\n\t\t\tvec4 z_prime = vec4(1.0, 0.0, 0.0, 0.0);\n\t\t\tfloat r;\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tr = length(z);\n\t\t\t\t\n\t\t\t\tif (r > 16.0 || iteration >= max_iterations)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tz_prime = 2.0 * qmul(z, z_prime);\n\t\t\t\t\n\t\t\t\tz = qmul(z, z);\n\t\t\t\t\n\t\t\t\tz += mix(vec4(pos, k_slice), vec4(c, k_slice), julia_proportion);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tr = length(z);\n\t\t\tfloat distance_1 = .5 * r * log(r) / length(z_prime);\n\t\t\tfloat distance_2 = length(pos - c) - .05;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (distance_2 < distance_1 && draw_sphere == 1)\n\t\t\t{\n\t\t\t\treturn distance_2;\n\t\t\t}\n\t\t\t\n\t\t\treturn distance_1;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_color(vec3 pos)\n\t\t{\n\t\t\tvec4 z = vec4(pos, k_slice);\n\t\t\tvec4 z_prime = vec4(1.0, 0.0, 0.0, 0.0);\n\t\t\tfloat r;\n\t\t\t\n\t\t\tvec3 color = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tr = length(z);\n\t\t\t\t\n\t\t\t\tif (r > 16.0 || iteration >= max_iterations)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tz_prime = 2.0 * qmul(z, z_prime);\n\t\t\t\t\n\t\t\t\tz = qmul(z, z);\n\t\t\t\t\n\t\t\t\tz += mix(vec4(pos, k_slice), vec4(c, k_slice), julia_proportion);\n\t\t\t\t\n\t\t\t\tcolor = mix(color, abs(normalize(z.xyz)), color_scale);\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\tcolor /= max(max(color.x, color.y), color.z);\n\t\t\t\n\t\t\t\n\t\t\tr = length(z);\n\t\t\tfloat distance_1 = .5 * r * log(r) / length(z_prime);\n\t\t\tfloat distance_2 = length(pos - c) - .05;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (distance_2 < distance_1 && draw_sphere == 1)\n\t\t\t{\n\t\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\t}\n\t\t\t\n\t\t\treturn color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat x_step_1 = distance_estimator(pos + vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step_1 = distance_estimator(pos + vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step_1 = distance_estimator(pos + vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\tfloat x_step_2 = distance_estimator(pos - vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step_2 = distance_estimator(pos - vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step_2 = distance_estimator(pos - vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step_1 - x_step_2, y_step_1 - y_step_2, z_step_1 - z_step_2));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat dot_product = dot(surface_normal, light_direction);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot_product, -.25 * dot_product);\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tvec3 color = get_color(pos) * light_intensity * max((1.0 - float(iteration) / float(max_marches)), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\treturn mix(color, fog_color, 1.0 - exp(-distance(pos, camera_pos) * fog_scaling));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 raymarch(vec3 start_pos)\n\t\t{\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9 / step_factor;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = 0.0;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\tfloat last_distance = 1000.0;\n\t\t\t\n\t\t\t//int slowed_down = 0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 1024; iteration++)\n\t\t\t{\n\t\t\t\tif (iteration == max_marches)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\t//This prevents overstepping, and is honestly a pretty clever fix.\n\t\t\t\tfloat distance = min(distance_estimator(pos), last_distance);\n\t\t\t\tlast_distance = distance;\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tepsilon = max(.0000006, .5 * t / float(image_size));\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Uncomment to add aggressive understepping when close to the fractal boundary, which helps to prevent flickering but is a significant performance hit.\n\t\t\t\t/*\n\t\t\t\telse if (last_distance / distance > .9999 && slowed_down == 0)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .125;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (last_distance / distance <= .9999 && slowed_down == 1)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 0;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn final_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\t//Uncomment to use 2x antialiasing.\n\t\t\t//vec3 final_color = (raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size)))) / 4.0;\n\t\t\t\n\t\t\tgl_FragColor = vec4(raymarch(image_plane_center_pos + right_vec * uv.x * aspect_ratio_x + up_vec * uv.y / aspect_ratio_y), 1.0);\n\t\t}\n\t",canvas_width:500,canvas_height:500,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:ht,mousedown_callback:_t,touchstart_callback:_t,mousedrag_callback:mt,touchmove_callback:mt,mouseup_callback:ft,touchend_callback:ft},e=new Wilson(document.querySelector("#output-canvas"),t);e.render.init_uniforms(["aspect_ratio_x","aspect_ratio_y","image_size","camera_pos","image_plane_center_pos","forward_vec","right_vec","up_vec","focal_length","light_pos","draw_sphere","c","julia_proportion","max_marches","step_factor","max_iterations","k_slice"]);let n=!1,o=!1,i=!1,a=!1,r=!1,s=!1,c=!1,l=!1,u=!1,_=!1,m=0,f=[0,0,0,0],p=[0,0,0,0];const d=.94,h=5e-4;let g=1,v=-1,y=1.4824,w=1.9469,z=0,x=0,k=0,M=0;const q=.94,b=.005,C=5e-4;let P=500,I=500,S=500,L=16,F=100,E=[],T=[],A=[],j=[],N=[-.3796,-3.4871,1.4271],U=2,B=[-.528783,.123638,.672392],J=[0,0,0],W=[0,0,0],D=0,G=0,H=0,K=1,O=0,Q=0,R=0,V=0,X=document.querySelector("#resolution-input");X.addEventListener("input",ht);let Y=document.querySelector("#iterations-input");Y.addEventListener("input",()=>{L=parseInt(Y.value||16),e.gl.uniform1i(e.uniforms.max_iterations,L),window.requestAnimationFrame(st)});let Z=document.querySelector("#view-distance-input");Z.addEventListener("input",()=>{F=Math.max(parseInt(Z.value||100),32),e.gl.uniform1i(e.uniforms.max_marches,F),window.requestAnimationFrame(st)}),document.querySelector("#download-button").addEventListener("click",()=>{0===K?e.download_frame("the-quaternionic-mandelbrot-set.png"):e.download_frame("a-quaternionic-julia-set.png")});let $=document.querySelector("#c-x-input"),tt=document.querySelector("#c-y-input"),et=document.querySelector("#c-z-input"),nt=document.querySelector("#c-w-input"),ot=[$,tt,et,nt];for(let t=0;t<ot.length;t++)ot[t].addEventListener("input",gt);let it=document.querySelector("#randomize-c-button");it.addEventListener("click",function(t=!0){if(n)return;J[0]=B[0],J[1]=B[1],J[2]=B[2],W[0]=2*Math.random()-1-J[0],W[1]=2*Math.random()-1-J[1],W[2]=2*Math.random()-1-J[2],$.value=Math.round(1e6*(J[0]+W[0]))/1e6,tt.value=Math.round(1e6*(J[1]+W[1]))/1e6,et.value=Math.round(1e6*(J[2]+W[2]))/1e6,Q=K,R=0,G=D,H=0,t?vt():(B[0]=J[0]+W[0],B[1]=J[1]+W[1],B[2]=J[2]+W[2])});let at=document.querySelector("#switch-bulb-button");at.addEventListener("click",function(){if(n)return;at.style.opacity=0,setTimeout(()=>{at.textContent=0===Q?"Switch to Mandelbrot Set":"Switch to Julia Set",Page.Load.TextButtons.equalize(),at.style.opacity=1},Site.opacity_animation_time),0===K?(e.gl.uniform3fv(e.uniforms.c,B),O||e.gl.uniform1i(e.uniforms.draw_sphere,1),setTimeout(()=>{rt.style.opacity=1,it.style.opacity=1},Site.opacity_animation_time)):(O=!0,e.gl.uniform1i(e.uniforms.draw_sphere,0),rt.style.opacity=0,it.style.opacity=0);R=1-2*(Q=K),G=D,H=0,J[0]=B[0],J[1]=B[1],J[2]=B[2],W[0]=0,W[1]=0,W[2]=0,vt()});let rt=document.querySelector("#switch-movement-button");function st(t){let _=t-v;if(v=t,0===_)return;e.render.draw_frame();let b=!1;n&&(!function(){let t=.5*Math.sin(Math.PI*V/120-Math.PI/2)+.5;B[0]=J[0]+W[0]*t,B[1]=J[1]+W[1]*t,B[2]=J[2]+W[2]*t,e.gl.uniform3fv(e.uniforms.c,B),K=Q+R*t,e.gl.uniform1f(e.uniforms.julia_proportion,K),D=G+H*t,e.gl.uniform1f(e.uniforms.k_slice,D),121==++V&&(n=!1)}(),b=!0),o||i||a||r||l||u||s||c?(!function(){if(m=Math.min(Math.max(1e-6,g/20),.02),O){let t=[...N];o||l?(N[0]+=m*T[0],N[1]+=m*T[1],N[2]+=m*T[2]):(i||u)&&(N[0]-=m*T[0],N[1]-=m*T[1],N[2]-=m*T[2]),a?(N[0]+=m*A[0]/U,N[1]+=m*A[1]/U,N[2]+=m*A[2]/U):r&&(N[0]-=m*A[0]/U,N[1]-=m*A[1]/U,N[2]-=m*A[2]/U),f[0]=N[0]-t[0],f[1]=N[1]-t[1],f[2]=N[2]-t[2]}else{let t=[...B],n=D;o||l?(B[0]+=.5*m*T[0],B[1]+=.5*m*T[1],B[2]+=.5*m*T[2]):(i||u)&&(B[0]-=.5*m*T[0],B[1]-=.5*m*T[1],B[2]-=.5*m*T[2]),a?(B[0]+=.5*m*A[0]/U,B[1]+=.5*m*A[1]/U,B[2]+=.5*m*A[2]/U):r&&(B[0]-=.5*m*A[0]/U,B[1]-=.5*m*A[1]/U,B[2]-=.5*m*A[2]/U),s?D+=.5*m:c&&(D-=.5*m),$.value=Math.round(1e6*B[0])/1e6,tt.value=Math.round(1e6*B[1])/1e6,et.value=Math.round(1e6*B[2])/1e6,nt.value=Math.round(1e6*D)/1e6,e.gl.uniform3fv(e.uniforms.c,B),e.gl.uniform1f(e.uniforms.k_slice,D),f[0]=B[0]-t[0],f[1]=B[1]-t[1],f[2]=B[2]-t[2],f[3]=D-n}ct()}(),b=!0):_>=50&&(z=0,x=0,k=0,M=0,l=!1,u=!1,p[0]=0,p[1]=0,p[2]=0,p[3]=0,f[0]=0,f[1]=0,f[2]=0,f[3]=0),0===k&&0===M||(w+=M,(y+=k)>=2*Math.PI?y-=2*Math.PI:y<0&&(y+=2*Math.PI),w>Math.PI-.01?w=Math.PI-.01:w<.01&&(w=.01),k*=q,M*=q,Math.sqrt(k*k+M*M)<C&&(k=0,M=0),ct(),b=!0),0===p[0]&&0===p[1]&&0===p[2]&&0===p[3]||(O?(N[0]+=p[0],N[1]+=p[1],N[2]+=p[2]):(B[0]+=p[0],B[1]+=p[1],B[2]+=p[2],D+=p[3],$.value=Math.round(1e6*B[0])/1e6,tt.value=Math.round(1e6*B[1])/1e6,et.value=Math.round(1e6*B[2])/1e6,nt.value=Math.round(1e6*D)/1e6,e.gl.uniform3fv(e.uniforms.c,B),e.gl.uniform1f(e.uniforms.k_slice,D)),p[0]*=d,p[1]*=d,p[2]*=d,p[3]*=d,Math.sqrt(p[0]*p[0]+p[1]*p[1]+p[2]*p[2]+p[3]*p[3])<h*m&&(p[0]=0,p[1]=0,p[2]=0,p[3]=0),ct(),b=!0),b&&window.requestAnimationFrame(st)}function ct(){var t,n;T=[Math.cos(y)*Math.sin(w),Math.sin(y)*Math.sin(w),Math.cos(w)],A=function(t){let e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/e,t[1]/e,t[2]/e]}([T[1],-T[0],0]),n=T,j=[(t=A)[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]],g=function(t,e,n){let o=[t,e,n,D],i=[1,0,0,0],a=0;for(let r=0;r<4*L&&!((a=Math.sqrt(lt(o,o)))>16);r++)(i=ut(...o,...i))[0]*=2,i[1]*=2,i[2]*=2,i[3]*=2,(o=ut(...o,...o))[0]+=(1-K)*t+K*B[0],o[1]+=(1-K)*e+K*B[1],o[2]+=(1-K)*n+K*B[2],o[3]+=D;return.5*Math.log(a)*a/Math.sqrt(lt(i,i))}(N[0],N[1],N[2]),U=g/2,A[0]*=U/2,A[1]*=U/2,j[0]*=U/2,j[1]*=U/2,j[2]*=U/2,E=[N[0]+U*T[0],N[1]+U*T[1],N[2]+U*T[2]],e.gl.uniform3fv(e.uniforms.camera_pos,N),e.gl.uniform3fv(e.uniforms.image_plane_center_pos,E),e.gl.uniform3fv(e.uniforms.forward_vec,T),e.gl.uniform3fv(e.uniforms.right_vec,A),e.gl.uniform3fv(e.uniforms.up_vec,j),e.gl.uniform1f(e.uniforms.focal_length,U)}function lt(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3]}function ut(t,e,n,o,i,a,r,s){return[t*i-e*a-n*n-o*s,t*a+e*i+n*s-o*r,t*r-e*s+n*i+o*a,t*s+e*r-n*a+o*i]}function _t(t,e,n){z=0,x=0,k=0,M=0,"touchstart"===n.type&&(2===n.touches.length?(l=!0,u=!1,p[0]=0,p[1]=0,p[2]=0,p[3]=0,f[0]=0,f[1]=0,f[2]=0,f[3]=0,window.requestAnimationFrame(st)):3===n.touches.length?(l=!1,u=!0,p[0]=0,p[1]=0,p[2]=0,p[3]=0,f[0]=0,f[1]=0,f[2]=0,f[3]=0,window.requestAnimationFrame(st)):(l=!1,u=!1),_=!1)}function mt(t,e,n,o,i){"touchmove"===i.type&&_?_=!1:(y+=n*Math.PI/2,z=n*Math.PI/2,y>=2*Math.PI?y-=2*Math.PI:y<0&&(y+=2*Math.PI),w+=o*Math.PI/2,x=o*Math.PI/2,w>Math.PI-.01?w=Math.PI-.01:w<.01&&(w=.01),ct(),window.requestAnimationFrame(st))}function ft(t,e,n){"touchend"===n.type&&(l=!1,u=!1,_=!0,0===p[0]&&0===p[1]&&0===p[2]&&(p[0]=f[0],p[1]=f[1],p[2]=f[2],p[3]=f[3],f[0]=0,f[1]=0,f[2]=0,f[3]=0)),"touchend"===n.type&&n.touches,(0===length||"mouseup"===n.type)&&Math.sqrt(z*z+x*x)>=b&&(k=z,M=x)}function pt(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode&&69!==t.keyCode&&81!==t.keyCode||(f=[0,0,0,0],p=[0,0,0,0],87===t.keyCode?o=!0:83===t.keyCode&&(i=!0),68===t.keyCode?a=!0:65===t.keyCode&&(r=!0),69===t.keyCode?s=!0:81===t.keyCode&&(c=!0),window.requestAnimationFrame(st))}function dt(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode&&69!==t.keyCode&&81!==t.keyCode||(0===p[0]&&0===p[1]&&0===p[2]&&0===p[3]&&(p[0]=f[0],p[1]=f[1],p[2]=f[2],p[3]=f[3],f[0]=0,f[1]=0,f[2]=0,f[3]=0),87===t.keyCode?o=!1:83===t.keyCode&&(i=!1),68===t.keyCode?a=!1:65===t.keyCode&&(r=!1),69===t.keyCode?s=!1:81===t.keyCode&&(c=!1))}function ht(){P=Math.max(100,parseInt(X.value||500)),e.fullscreen.currently_fullscreen?Page.Layout.aspect_ratio>=1?(I=P,S=Math.floor(P/Page.Layout.aspect_ratio)):(I=Math.floor(P*Page.Layout.aspect_ratio),S=P):(I=P,S=P),e.change_canvas_size(I,S),I>=S?(e.gl.uniform1f(e.uniforms.aspect_ratio_x,I/S),e.gl.uniform1f(e.uniforms.aspect_ratio_y,1)):(e.gl.uniform1f(e.uniforms.aspect_ratio_x,1),e.gl.uniform1f(e.uniforms.aspect_ratio_y,I/S)),e.gl.uniform1i(e.uniforms.image_size,P),window.requestAnimationFrame(st)}function gt(){J[0]=B[0],J[1]=B[1],J[2]=B[2],W[0]=(parseFloat($.value||0)||0)-J[0],W[1]=(parseFloat(tt.value||0)||0)-J[1],W[2]=(parseFloat(et.value||0)||0)-J[2],Q=K,R=0,G=D,H=(parseFloat(nt.value||0)||0)-G,vt()}function vt(){n||(n=!0,V=0,window.requestAnimationFrame(st))}rt.addEventListener("click",function(){O=!O,rt.style.opacity=0,setTimeout(()=>{rt.textContent=O?"Change Julia Set":"Move Camera",Page.Load.TextButtons.equalize(),rt.style.opacity=1},Site.opacity_animation_time),O?e.gl.uniform1i(e.uniforms.draw_sphere,0):e.gl.uniform1i(e.uniforms.draw_sphere,1)}),Page.Load.TextButtons.equalize(),ct(),I>=S?(e.gl.uniform1f(e.uniforms.aspect_ratio_x,I/S),e.gl.uniform1f(e.uniforms.aspect_ratio_y,1)):(e.gl.uniform1f(e.uniforms.aspect_ratio_x,1),e.gl.uniform1f(e.uniforms.aspect_ratio_y,I/S)),e.gl.uniform1i(e.uniforms.image_size,P),e.gl.uniform3fv(e.uniforms.camera_pos,N),e.gl.uniform3fv(e.uniforms.image_plane_center_pos,E),e.gl.uniform3fv(e.uniforms.light_pos,[-5,-5,5]),e.gl.uniform3fv(e.uniforms.forward_vec,T),e.gl.uniform3fv(e.uniforms.right_vec,A),e.gl.uniform3fv(e.uniforms.up_vec,j),e.gl.uniform1f(e.uniforms.focal_length,U),e.gl.uniform1i(e.uniforms.draw_sphere,0),e.gl.uniform3fv(e.uniforms.c,B),e.gl.uniform1f(e.uniforms.julia_proportion,1),e.gl.uniform1i(e.uniforms.k_slice,0),e.gl.uniform1i(e.uniforms.max_marches,F),e.gl.uniform1f(e.uniforms.step_factor,1),e.gl.uniform1i(e.uniforms.max_iterations,L),window.requestAnimationFrame(st),document.documentElement.addEventListener("keydown",pt),Page.temporary_handlers.keydown.push(pt),document.documentElement.addEventListener("keyup",dt),Page.temporary_handlers.keydown.push(dt)}();