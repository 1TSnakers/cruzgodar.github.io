!function(){"use strict";let e=`
  precision highp float;
  
  varying vec2 uv;
  
  uniform float aspectRatioX;
  uniform float aspectRatioY;
  
  uniform vec3 cameraPos;
  uniform vec3 imagePlaneCenterPos;
  uniform vec3 forwardVec;
  uniform vec3 rightVec;
  uniform vec3 upVec;
  
  uniform float focalLength;
  
  uniform vec3 lightPos;
  const float lightBrightness = 1.5;
  
  uniform int imageSize;
  
  uniform int drawSphere;
  
  uniform int maxIterations;
  
  
  
  const float clipDistance = 1000.0;
  uniform int maxMarches;
  uniform float stepFactor;
  const vec3 fogColor = vec3(0.0, 0.0, 0.0);
  const float fogScaling = .1;
  
  uniform float kSlice;
  
  
  uniform vec3 c;
  uniform float juliaProportion;
  
  
  
  vec4 qmul(vec4 z, vec4 w)
  {
   return vec4(z.x*w.x - z.y*w.y - z.z*w.z - z.w*w.w, z.x*w.y + z.y*w.x + z.z*w.w - z.w*w.z, z.x*w.z - z.y*w.w + z.z*w.x + z.w*w.y, z.x*w.w + z.y*w.z - z.z*w.y + z.w*w.x);
  }
  
  
  float distanceEstimator(vec3 pos)
  {
   vec4 z = vec4(pos, kSlice);
   vec4 zPrime = vec4(1.0, 0.0, 0.0, 0.0);
   float r;
   
   for (int iteration = 0; iteration < 100; iteration++)
   {
    r = length(z);
    
    if (r > 16.0 || iteration >= maxIterations)
    {
     break;
    }
    
    zPrime = 2.0 * qmul(z, zPrime);
    
    z = qmul(z, z);
    
    z += mix(vec4(pos, kSlice), vec4(c, kSlice), juliaProportion);
   }
   
   
   r = length(z);
   float distance1 = .5 * r * log(r) / length(zPrime);
   float distance2 = length(pos - c) - .05;
   
   
   
   if (distance2 < distance1 && drawSphere == 1)
   {
    return distance2;
   }
   
   return distance1;
  }
  
  
  
  vec3 getColor(vec3 pos)
  {
   vec4 z = vec4(pos, kSlice);
   vec4 zPrime = vec4(1.0, 0.0, 0.0, 0.0);
   float r;
   
   vec3 color = vec3(1.0, 1.0, 1.0);
   float colorScale = .5;
   
   for (int iteration = 0; iteration < 100; iteration++)
   {
    r = length(z);
    
    if (r > 16.0 || iteration >= maxIterations)
    {
     break;
    }
    
    zPrime = 2.0 * qmul(z, zPrime);
    
    z = qmul(z, z);
    
    z += mix(vec4(pos, kSlice), vec4(c, kSlice), juliaProportion);
    
    color = mix(color, abs(normalize(z.xyz)), colorScale);
    
    colorScale *= .5;
   }
   
   color /= max(max(color.x, color.y), color.z);
   
   
   r = length(z);
   float distance1 = .5 * r * log(r) / length(zPrime);
   float distance2 = length(pos - c) - .05;
   
   
   
   if (distance2 < distance1 && drawSphere == 1)
   {
    color = vec3(1.0, 1.0, 1.0);
   }
   
   return color;
  }
  
  
  
  vec3 getSurfaceNormal(vec3 pos)
  {
   float xStep1 = distanceEstimator(pos + vec3(.000001, 0.0, 0.0));
   float yStep1 = distanceEstimator(pos + vec3(0.0, .000001, 0.0));
   float zStep1 = distanceEstimator(pos + vec3(0.0, 0.0, .000001));
   
   float xStep2 = distanceEstimator(pos - vec3(.000001, 0.0, 0.0));
   float yStep2 = distanceEstimator(pos - vec3(0.0, .000001, 0.0));
   float zStep2 = distanceEstimator(pos - vec3(0.0, 0.0, .000001));
   
   return normalize(vec3(xStep1 - xStep2, yStep1 - yStep2, zStep1 - zStep2));
  }
  
  
  
  vec3 computeShading(vec3 pos, int iteration)
  {
   vec3 surfaceNormal = getSurfaceNormal(pos);
   
   vec3 lightDirection = normalize(lightPos - pos);
   
   float dotProduct = dot(surfaceNormal, lightDirection);
   
   float lightIntensity = lightBrightness * max(dotProduct, -.25 * dotProduct);
   
   //The last factor adds ambient occlusion.
   vec3 color = getColor(pos) * lightIntensity * max((1.0 - float(iteration) / float(maxMarches)), 0.0);
   
   
   
   //Apply fog.
   return mix(color, fogColor, 1.0 - exp(-distance(pos, cameraPos) * fogScaling));
  }
  
  
  
  vec3 raymarch(vec3 startPos)
  {
   //That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.
   vec3 rayDirectionVec = normalize(startPos - cameraPos) * .9 / stepFactor;
   
   vec3 finalColor = fogColor;
   
   float epsilon = 0.0;
   
   float t = 0.0;
   
   float lastDistance = 1000.0;
   
   //int slowedDown = 0;
   
   
   
   for (int iteration = 0; iteration < 1024; iteration++)
   {
    if (iteration == maxMarches)
    {
     break;
    }
    
    
    
    vec3 pos = startPos + t * rayDirectionVec;
    
    //This prevents overstepping, and is honestly a pretty clever fix.
    float distance = min(distanceEstimator(pos), lastDistance);
    lastDistance = distance;
    
    //This lowers the detail far away, which makes everything run nice and fast.
    epsilon = max(.0000006, .5 * t / float(imageSize));
    
    
    
    if (distance < epsilon)
    {
     finalColor = computeShading(pos, iteration);
     break;
    }
    
    //Uncomment to add aggressive understepping when close to the fractal boundary, which helps to prevent flickering but is a significant performance hit.
    /*
    else if (lastDistance / distance > .9999 && slowedDown == 0)
    {
     rayDirectionVec = normalize(startPos - cameraPos) * .125;
     
     slowedDown = 1;
    }
    
    else if (lastDistance / distance <= .9999 && slowedDown == 1)
    {
     rayDirectionVec = normalize(startPos - cameraPos) * .9;
     
     slowedDown = 0;
    }
    */
    
    else if (t > clipDistance)
    {
     break;
    }
    
    
    
    t += distance;
   }
   
   
   
   return finalColor;
  }
  
  
  
  void main(void)
  {
   //Uncomment to use 2x antialiasing.
   //vec3 finalColor = (raymarch(imagePlaneCenterPos + rightVec * (uv.x * aspectRatio + .5 / float(imageSize)) + upVec * (uv.y + .5 / float(imageSize))) + raymarch(imagePlaneCenterPos + rightVec * (uv.x * aspectRatio + .5 / float(imageSize)) + upVec * (uv.y - .5 / float(imageSize))) + raymarch(imagePlaneCenterPos + rightVec * (uv.x * aspectRatio - .5 / float(imageSize)) + upVec * (uv.y + .5 / float(imageSize))) + raymarch(imagePlaneCenterPos + rightVec * (uv.x * aspectRatio - .5 / float(imageSize)) + upVec * (uv.y - .5 / float(imageSize)))) / 4.0;
   
   gl_FragColor = vec4(raymarch(imagePlaneCenterPos + rightVec * (uv.x) * aspectRatioX + upVec * (uv.y) / aspectRatioY), 1.0);
  }
 `,t=new Wilson(Page.element.querySelector("#output-canvas"),{renderer:"gpu",shader:e,canvasWidth:500,canvasHeight:500,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:e_,mousedownCallback:ec,touchstartCallback:ec,mousedragCallback:el,touchmoveCallback:el,mouseupCallback:es,touchendCallback:es});t.render.initUniforms(["aspectRatioX","aspectRatioY","imageSize","cameraPos","imagePlaneCenterPos","forwardVec","rightVec","upVec","focalLength","lightPos","drawSphere","c","juliaProportion","maxMarches","stepFactor","maxIterations","kSlice"]);let o=!1,i=!1,$=!1,n=!1,a=!1,r=!1,c=!1,l=!1,s=!1,u=!1,m=0,_=[0,0,0,0],f=[0,0,0,0],p=1,g=-1,d=1.21557,v=2.10801,y=0,h=0,z=0,w=0,S=500,P=500,k=500,C=16,x=100,q=[],A=[],I=[],V=[],b=[-1.11619,-2.63802,1.67049],F=2,E=[-.54,-.25,-.668],R=[0,0,0],L=[0,0,0],T=0,D=0,B=0,M=1,N=0,O=0,j=0,X=0,Y=Page.element.querySelector("#resolution-input");Y.addEventListener("input",e_);let U=Page.element.querySelector("#iterations-input");U.addEventListener("input",()=>{C=parseInt(U.value||16),t.gl.uniform1i(t.uniforms.maxIterations,C),window.requestAnimationFrame(ei)});let H=Page.element.querySelector("#view-distance-input");H.addEventListener("input",()=>{x=Math.max(parseInt(H.value||100),32),t.gl.uniform1i(t.uniforms.maxMarches,x),window.requestAnimationFrame(ei)});Page.element.querySelector("#download-button").addEventListener("click",()=>{0===M?t.downloadFrame("the-quaternionic-mandelbrot-set.png"):t.downloadFrame("a-quaternionic-julia-set.png")});let J=Page.element.querySelector("#c-x-input"),W=Page.element.querySelector("#c-y-input"),G=Page.element.querySelector("#c-z-input"),K=Page.element.querySelector("#c-w-input"),Q=[J,W,G,K];for(let Z=0;Z<Q.length;Z++)Q[Z].addEventListener("input",ef);let ee=Page.element.querySelector("#randomize-c-button");ee.style.opacity=1,ee.addEventListener("click",function e(t=!0){!o&&(R[0]=E[0],R[1]=E[1],R[2]=E[2],L[0]=2*Math.random()-1-R[0],L[1]=2*Math.random()-1-R[1],L[2]=2*Math.random()-1-R[2],J.value=Math.round((R[0]+L[0])*1e6)/1e6,W.value=Math.round((R[1]+L[1])*1e6)/1e6,G.value=Math.round((R[2]+L[2])*1e6)/1e6,O=M,j=0,D=T,B=0,t?ep():(E[0]=R[0]+L[0],E[1]=R[1]+L[1],E[2]=R[2]+L[2]))});let et=Page.element.querySelector("#switch-bulb-button");et.style.opacity=1,et.addEventListener("click",function e(){!o&&(Page.Animate.changeOpacity(et,0,Site.opacityAnimationTime),setTimeout(()=>{0===O?et.textContent="Switch to Mandelbrot Set":et.textContent="Switch to Julia Set",Page.Load.TextButtons.equalize(),Page.Animate.changeOpacity(et,1,Site.opacityAnimationTime)},Site.opacityAnimationTime),0===M?(t.gl.uniform3fv(t.uniforms.c,E),N||t.gl.uniform1i(t.uniforms.drawSphere,1),setTimeout(()=>{Page.Animate.changeOpacity(eo,1,Site.opacityAnimationTime),Page.Animate.changeOpacity(ee,1,Site.opacityAnimationTime)},Site.opacityAnimationTime)):(N=!0,t.gl.uniform1i(t.uniforms.drawSphere,0),Page.Animate.changeOpacity(eo,0,Site.opacityAnimationTime),Page.Animate.changeOpacity(ee,0,Site.opacityAnimationTime)),j=1-2*(O=M),D=T,B=0,R[0]=E[0],R[1]=E[1],R[2]=E[2],L[0]=0,L[1]=0,L[2]=0,ep())});let eo=Page.element.querySelector("#switch-movement-button");function ei(e){let u=e-g;if(g=e,0===u)return;t.render.drawFrame();let S=!1,P;o&&(P=.5*Math.sin(Math.PI*X/120-Math.PI/2)+.5,E[0]=R[0]+L[0]*P,E[1]=R[1]+L[1]*P,E[2]=R[2]+L[2]*P,t.gl.uniform3fv(t.uniforms.c,E),M=O+j*P,t.gl.uniform1f(t.uniforms.juliaProportion,M),T=D+B*P,t.gl.uniform1f(t.uniforms.kSlice,T),121==++X&&(o=!1),S=!0),i||$||n||a||l||s||r||c?(function e(){if(m=Math.min(Math.max(1e-6,p/20),.02),N){let o=[...b];i||l?(b[0]+=m*A[0],b[1]+=m*A[1],b[2]+=m*A[2]):($||s)&&(b[0]-=m*A[0],b[1]-=m*A[1],b[2]-=m*A[2]),n?(b[0]+=m*I[0]/F,b[1]+=m*I[1]/F,b[2]+=m*I[2]/F):a&&(b[0]-=m*I[0]/F,b[1]-=m*I[1]/F,b[2]-=m*I[2]/F),_[0]=b[0]-o[0],_[1]=b[1]-o[1],_[2]=b[2]-o[2]}else{let u=[...E],f=T;i||l?(E[0]+=.5*m*A[0],E[1]+=.5*m*A[1],E[2]+=.5*m*A[2]):($||s)&&(E[0]-=.5*m*A[0],E[1]-=.5*m*A[1],E[2]-=.5*m*A[2]),n?(E[0]+=.5*m*I[0]/F,E[1]+=.5*m*I[1]/F,E[2]+=.5*m*I[2]/F):a&&(E[0]-=.5*m*I[0]/F,E[1]-=.5*m*I[1]/F,E[2]-=.5*m*I[2]/F),r?T+=.5*m:c&&(T-=.5*m),J.value=Math.round(1e6*E[0])/1e6,W.value=Math.round(1e6*E[1])/1e6,G.value=Math.round(1e6*E[2])/1e6,K.value=Math.round(1e6*T)/1e6,t.gl.uniform3fv(t.uniforms.c,E),t.gl.uniform1f(t.uniforms.kSlice,T),_[0]=E[0]-u[0],_[1]=E[1]-u[1],_[2]=E[2]-u[2],_[3]=T-f}e$()}(),S=!0):u>=50&&(y=0,h=0,z=0,w=0,l=!1,s=!1,f[0]=0,f[1]=0,f[2]=0,f[3]=0,_[0]=0,_[1]=0,_[2]=0,_[3]=0),(0!==z||0!==w)&&(d+=z,v+=w,d>=2*Math.PI?d-=2*Math.PI:d<0&&(d+=2*Math.PI),v>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),5e-4>Math.sqrt((z*=.94)*z+(w*=.94)*w)&&(z=0,w=0),e$(),S=!0),(0!==f[0]||0!==f[1]||0!==f[2]||0!==f[3])&&(N?(b[0]+=f[0],b[1]+=f[1],b[2]+=f[2]):(E[0]+=f[0],E[1]+=f[1],E[2]+=f[2],T+=f[3],J.value=Math.round(1e6*E[0])/1e6,W.value=Math.round(1e6*E[1])/1e6,G.value=Math.round(1e6*E[2])/1e6,K.value=Math.round(1e6*T)/1e6,t.gl.uniform3fv(t.uniforms.c,E),t.gl.uniform1f(t.uniforms.kSlice,T)),f[0]*=.94,f[1]*=.94,f[2]*=.94,f[3]*=.94,Math.sqrt(f[0]*f[0]+f[1]*f[1]+f[2]*f[2]+f[3]*f[3])<5e-4*m&&(f[0]=0,f[1]=0,f[2]=0,f[3]=0),e$(),S=!0),S&&window.requestAnimationFrame(ei)}function e$(){var e,o,i;let $;V=(o=I=(e=[(A=[Math.cos(d)*Math.sin(v),Math.sin(d)*Math.sin(v),Math.cos(v)])[1],-A[0],0],$=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]),[e[0]/$,e[1]/$,e[2]/$]),i=A,[o[1]*i[2]-o[2]*i[1],o[2]*i[0]-o[0]*i[2],o[0]*i[1]-o[1]*i[0]]),F=(p=function e(t,o,i){let $=[t,o,i,T],n=[1,0,0,0],a=0;for(let r=0;r<4*C&&!((a=Math.sqrt(ea($,$)))>16);r++)n=er(...$,...n),n[0]*=2,n[1]*=2,n[2]*=2,n[3]*=2,$=er(...$,...$),$[0]+=(1-M)*t+M*E[0],$[1]+=(1-M)*o+M*E[1],$[2]+=(1-M)*i+M*E[2],$[3]+=T;return .5*Math.log(a)*a/Math.sqrt(ea(n,n))}(b[0],b[1],b[2]))/2,I[0]*=F/2,I[1]*=F/2,V[0]*=F/2,V[1]*=F/2,V[2]*=F/2,q=[b[0]+F*A[0],b[1]+F*A[1],b[2]+F*A[2]],t.gl.uniform3fv(t.uniforms.cameraPos,b),t.gl.uniform3fv(t.uniforms.imagePlaneCenterPos,q),t.gl.uniform3fv(t.uniforms.forwardVec,A),t.gl.uniform3fv(t.uniforms.rightVec,I),t.gl.uniform3fv(t.uniforms.upVec,V),t.gl.uniform1f(t.uniforms.focalLength,F)}function en(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function ea(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function er(e,t,o,i,$,n,a,r){return[e*$-t*n-o*o-i*r,e*n+t*$+o*r-i*a,e*a-t*r+o*$+i*n,e*r+t*a-o*n+i*$]}function ec(e,t,o){y=0,h=0,z=0,w=0,"touchstart"===o.type&&(2===o.touches.length?(l=!0,s=!1,f[0]=0,f[1]=0,f[2]=0,f[3]=0,_[0]=0,_[1]=0,_[2]=0,_[3]=0,window.requestAnimationFrame(ei)):3===o.touches.length?(l=!1,s=!0,f[0]=0,f[1]=0,f[2]=0,f[3]=0,_[0]=0,_[1]=0,_[2]=0,_[3]=0,window.requestAnimationFrame(ei)):(l=!1,s=!1),u=!1)}function el(e,t,o,i,$){if("touchmove"===$.type&&u){u=!1;return}d+=o*Math.PI/2,y=o*Math.PI/2,d>=2*Math.PI?d-=2*Math.PI:d<0&&(d+=2*Math.PI),v+=i*Math.PI/2,h=i*Math.PI/2,v>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),e$(),window.requestAnimationFrame(ei)}function es(e,t,o){"touchend"===o.type&&(l=!1,s=!1,u=!0,0===f[0]&&0===f[1]&&0===f[2]&&(f[0]=_[0],f[1]=_[1],f[2]=_[2],f[3]=_[3],_[0]=0,_[1]=0,_[2]=0,_[3]=0)),"touchend"===o.type&&o.touches,(0===length||"mouseup"===o.type)&&Math.sqrt(y*y+h*h)>=.005&&(z=y,w=h)}function eu(e){"INPUT"!==document.activeElement.tagName&&(87===e.keyCode||83===e.keyCode||68===e.keyCode||65===e.keyCode||69===e.keyCode||81===e.keyCode)&&(_=[0,0,0,0],f=[0,0,0,0],87===e.keyCode?i=!0:83===e.keyCode&&($=!0),68===e.keyCode?n=!0:65===e.keyCode&&(a=!0),69===e.keyCode?r=!0:81===e.keyCode&&(c=!0),window.requestAnimationFrame(ei))}function em(e){"INPUT"!==document.activeElement.tagName&&(87===e.keyCode||83===e.keyCode||68===e.keyCode||65===e.keyCode||69===e.keyCode||81===e.keyCode)&&(0===f[0]&&0===f[1]&&0===f[2]&&0===f[3]&&(f[0]=_[0],f[1]=_[1],f[2]=_[2],f[3]=_[3],_[0]=0,_[1]=0,_[2]=0,_[3]=0),87===e.keyCode?i=!1:83===e.keyCode&&($=!1),68===e.keyCode?n=!1:65===e.keyCode&&(a=!1),69===e.keyCode?r=!1:81===e.keyCode&&(c=!1))}function e_(){S=Math.max(100,parseInt(Y.value||500)),t.fullscreen.currentlyFullscreen?Page.Layout.aspectRatio>=1?(P=S,k=Math.floor(S/Page.Layout.aspectRatio)):(P=Math.floor(S*Page.Layout.aspectRatio),k=S):(P=S,k=S),t.changeCanvasSize(P,k),P>=k?(t.gl.uniform1f(t.uniforms.aspectRatioX,P/k),t.gl.uniform1f(t.uniforms.aspectRatioY,1)):(t.gl.uniform1f(t.uniforms.aspectRatioX,1),t.gl.uniform1f(t.uniforms.aspectRatioY,P/k)),t.gl.uniform1i(t.uniforms.imageSize,S),window.requestAnimationFrame(ei)}function ef(){R[0]=E[0],R[1]=E[1],R[2]=E[2],L[0]=(parseFloat(J.value||0)||0)-R[0],L[1]=(parseFloat(W.value||0)||0)-R[1],L[2]=(parseFloat(G.value||0)||0)-R[2],O=M,j=0,D=T,B=(parseFloat(K.value||0)||0)-D,ep()}function ep(){o||(o=!0,X=0,window.requestAnimationFrame(ei))}eo.style.opacity=1,eo.addEventListener("click",function e(){N=!N,Page.Animate.changeOpacity(eo,0,Site.opacityAnimationTime),setTimeout(()=>{N?eo.textContent="Change Julia Set":eo.textContent="Move Camera",Page.Load.TextButtons.equalize(),Page.Animate.changeOpacity(eo,1,Site.opacityAnimationTime)},Site.opacityAnimationTime),N?t.gl.uniform1i(t.uniforms.drawSphere,0):t.gl.uniform1i(t.uniforms.drawSphere,1)}),Page.Load.TextButtons.equalize(),e$(),P>=k?(t.gl.uniform1f(t.uniforms.aspectRatioX,P/k),t.gl.uniform1f(t.uniforms.aspectRatioY,1)):(t.gl.uniform1f(t.uniforms.aspectRatioX,1),t.gl.uniform1f(t.uniforms.aspectRatioY,P/k)),t.gl.uniform1i(t.uniforms.imageSize,S),t.gl.uniform3fv(t.uniforms.cameraPos,b),t.gl.uniform3fv(t.uniforms.imagePlaneCenterPos,q),t.gl.uniform3fv(t.uniforms.lightPos,[-5,-5,5]),t.gl.uniform3fv(t.uniforms.forwardVec,A),t.gl.uniform3fv(t.uniforms.rightVec,I),t.gl.uniform3fv(t.uniforms.upVec,V),t.gl.uniform1f(t.uniforms.focalLength,F),t.gl.uniform1i(t.uniforms.drawSphere,0),t.gl.uniform3fv(t.uniforms.c,E),t.gl.uniform1f(t.uniforms.juliaProportion,1),t.gl.uniform1i(t.uniforms.kSlice,0),t.gl.uniform1i(t.uniforms.maxMarches,x),t.gl.uniform1f(t.uniforms.stepFactor,1),t.gl.uniform1i(t.uniforms.maxIterations,C),window.requestAnimationFrame(ei),Page.show(),document.documentElement.addEventListener("keydown",eu),Page.temporaryHandlers.keydown.push(eu),document.documentElement.addEventListener("keyup",em),Page.temporaryHandlers.keydown.push(em)}();