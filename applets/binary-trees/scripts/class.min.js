import{Applet,getEqualPixelFullScreen}from"../../../scripts/applets/applet.min.js";import{opacityAnimationTime}from"/scripts/src/animation.min.js";import{convertColor}from"/scripts/src/browser.min.js";import{$$,addTemporaryInterval,addTemporaryWorker}from"/scripts/src/main.min.js";import{Wilson}from"/scripts/wilson.min.js";class BinaryTree extends Applet{root=[];branchPoints=[];numPreviewIterations=5;webWorker;constructor({canvas}){super(canvas);var t={renderer:"cpu",canvasWidth:2e3,canvasHeight:2e3,useDraggables:!0,draggablesMousedownCallback:this.onGrabDraggable.bind(this),draggablesTouchstartCallback:this.onGrabDraggable.bind(this),draggablesMousemoveCallback:this.onDragDraggable.bind(this),draggablesTouchmoveCallback:this.onDragDraggable.bind(this),draggablesMouseupCallback:this.onReleaseDraggable.bind(this),draggablesTouchendCallback:this.onReleaseDraggable.bind(this),useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:()=>this.changeAspectRatio()};this.wilson=new Wilson(canvas,t),this.wilson.ctx.fillStyle=convertColor(0,0,0),this.wilson.ctx.fillRect(0,0,this.wilson.canvasWidth,this.wilson.canvasHeight),this.initBranchMarkers()}preview(root,branchPoints){this.root=root,this.branchPoints=branchPoints,this.wilson.ctx.fillStyle=convertColor(0,0,0),this.wilson.ctx.fillRect(0,0,this.wilson.canvasWidth,this.wilson.canvasHeight);let s=[Math.atan2(this.branchPoints[0][0]-this.root[0],this.branchPoints[0][1]-this.root[1]),Math.atan2(this.branchPoints[1][0]-this.root[0],this.branchPoints[1][1]-this.root[1])];var i=(s[0]-s[1])/2,o=[Math.sqrt((this.branchPoints[0][0]-this.root[0])*(this.branchPoints[0][0]-this.root[0])+(this.branchPoints[0][1]-this.root[1])*(this.branchPoints[0][1]-this.root[1])),Math.sqrt((this.branchPoints[1][0]-this.root[0])*(this.branchPoints[1][0]-this.root[0])+(this.branchPoints[1][1]-this.root[1])*(this.branchPoints[1][1]-this.root[1]))];let e=[this.root],a=1;for(let t=0;t<this.numPreviewIterations;t++){var n=[],r=[],l=(this.wilson.ctx.lineWidth=20*a+1,139*Math.sqrt(a)),h=69*Math.sqrt(a)+128*(1-Math.sqrt(a)),c=19*Math.sqrt(a);this.wilson.ctx.strokeStyle=convertColor(l,h,c);for(let t=0;t<e.length;t++){var b=e[t][1],w=e[t][0],g=e[t][1]+o[0]*a*Math.cos(s[2*t]),d=e[t][0]+o[0]*a*Math.sin(s[2*t]);this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(b,w),this.wilson.ctx.lineTo(g,d),this.wilson.ctx.stroke(),n.push([d,g]),r.push(s[2*t]-i),r.push(s[2*t]+i),b=e[t][1],w=e[t][0],g=e[t][1]+o[1]*a*Math.cos(s[2*t+1]),d=e[t][0]+o[1]*a*Math.sin(s[2*t+1]),this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(b,w),this.wilson.ctx.lineTo(g,d),this.wilson.ctx.stroke(),n.push([d,g]),r.push(s[2*t+1]-i),r.push(s[2*t+1]+i)}e=n,s=r,a*=.675}}animate(root,branchPoints){this.root=root,this.branchPoints=branchPoints,this.webWorker=addTemporaryWorker("/applets/binary-trees/scripts/worker.js"),this.webWorker.onmessage=e=>{var t;"done"===e.data[0]?(t=setTimeout(()=>{$$(".wilson-draggable").forEach(element=>element.style.opacity=1)},500),this.timeoutIds.push(t)):(this.wilson.ctx.strokeStyle=convertColor(...e.data[4]),this.wilson.ctx.lineWidth=e.data[5],this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(e.data[0],e.data[1]),this.wilson.ctx.lineTo(e.data[2],e.data[3]),this.wilson.ctx.stroke())},this.webWorker.postMessage([this.root,this.branchPoints])}initBranchMarkers(){this.wilson.draggables.add(-1/7,-1/3),this.wilson.draggables.add(1/7,-1/3),this.root=this.wilson.utils.interpolate.worldToCanvas(0,-.8),this.branchPoints[0]=this.wilson.utils.interpolate.worldToCanvas(-1/7,-1/3),this.branchPoints[1]=this.wilson.utils.interpolate.worldToCanvas(1/7,-1/3),this.preview(this.root,this.branchPoints)}onGrabDraggable(){this.webWorker?.terminate&&this.webWorker.terminate(),$$(".wilson-draggable").forEach(element=>element.style.opacity=1),this.wilson.ctx.fillStyle=convertColor(0,0,0),this.wilson.ctx.fillRect(0,0,this.wilson.canvasWidth,this.wilson.canvasHeight),this.preview(this.root,this.branchPoints)}onDragDraggable(activeDraggable,x,y){this.branchPoints[activeDraggable]=this.wilson.utils.interpolate.worldToCanvas(x,y),this.preview(this.root,this.branchPoints)}onReleaseDraggable(){document.body.style.WebkitUserSelect="",$$(".wilson-draggable").forEach(element=>element.style.opacity=0);let s=0;const i=this;const t=addTemporaryInterval({callback:()=>{var t=s/37;i.wilson.ctx.fillStyle=convertColor(0,0,0,t),i.wilson.ctx.fillRect(0,0,i.wilson.canvasWidth,i.wilson.canvasHeight),s++},delay:8});var o=setTimeout(()=>{clearInterval(t),i.wilson.ctx.fillStyle=convertColor(0,0,0),i.wilson.ctx.fillRect(0,0,i.wilson.canvasWidth,i.wilson.canvasHeight),i.animate(i.root,i.branchPoints)},opacityAnimationTime);this.timeoutIds.push(o)}changeAspectRatio(){this.webWorker?.terminate&&this.webWorker.terminate(),$$(".wilson-draggable").forEach(element=>element.style.opacity=1),this.wilson.fullscreen.currentlyFullscreen?this.wilson.changeCanvasSize(...getEqualPixelFullScreen(2e3)):this.wilson.changeCanvasSize(2e3,2e3),this.wilson.draggables.recalculateLocations(),this.root=this.wilson.utils.interpolate.worldToCanvas(0,-.8),this.branchPoints[0]=this.wilson.utils.interpolate.worldToCanvas(...this.wilson.draggables.worldCoordinates[0]),this.branchPoints[1]=this.wilson.utils.interpolate.worldToCanvas(...this.wilson.draggables.worldCoordinates[1]),this.preview(this.root,this.branchPoints)}}export{BinaryTree};