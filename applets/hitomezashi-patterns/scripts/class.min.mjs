import{Applet}from"/scripts/src/applets.mjs";class HitomezashiPattern extends Applet{doDrawBoundaries=!0;doDrawRegions=!0;maximumSpeed=!1;resolution=null;gridSize=null;rowProb=null;colProb=null;patternRows=[];patternCols=[];regions=[];regionsOrdered=[];regionSizes=[];numRegions=0;numUniqueRegionSizes=0;cellsByRadius=[];currentRow=1;currentCol=1;currentRegion=0;lineWidth=null;constructor(i){super(i);this.wilson=new Wilson(i,{renderer:"cpu",canvasWidth:1e3,canvasHeight:1e3,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"})}run(i=2e3,t=50,s=.5,e=.5,r=!0,o=!0,n=!1){this.resolution=i,this.gridSize=t,this.rowProb=s,this.colProb=e,this.doDrawBoundaries=r,this.doDrawRegions=o,this.maximumSpeed=n,this.wilson.changeCanvasSize(this.resolution,this.resolution),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.wilson.ctx.strokeStyle="rgb(127, 127, 127)",this.lineWidth=this.resolution/this.gridSize/20,this.wilson.ctx.lineWidth=this.lineWidth,this.patternRows=new Array(this.gridSize+1),this.patternCols=new Array(this.gridSize+1),this.regions=new Array(this.gridSize),this.regionsOrdered=[],this.regionSizes=[],this.numRegions=0,this.cellsByRadius=new Array(this.gridSize+1);for(let t=0;t<this.gridSize+1;t++){this.patternRows[t]=new Array(this.gridSize+1),this.patternCols[t]=new Array(this.gridSize+1);for(let i=0;i<this.gridSize+1;i++)this.patternRows[t][i]=0,this.patternCols[t][i]=0}for(let t=0;t<this.gridSize;t++){this.regions[t]=new Array(this.gridSize);for(let i=0;i<this.gridSize;i++)this.regions[t][i]=-1}for(let i=0;i<this.gridSize+1;i++)this.cellsByRadius[i]=[];var h=Math.floor(this.gridSize/2);for(let t=0;t<this.gridSize;t++)for(let i=0;i<this.gridSize;i++)this.cellsByRadius[Math.abs(t-h)+Math.abs(i-h)].push([t,i]);for(let t=0;t<this.gridSize+1;t++)for(let i=Math.random()<this.rowProb?1:0;i<this.gridSize;i+=2)this.patternRows[t][i]=1;for(let t=0;t<this.gridSize+1;t++)for(let i=Math.random()<this.colProb?1:0;i<this.gridSize;i+=2)this.patternCols[i][t]=1;this.maximumSpeed?(this.doDrawBoundaries&&this.drawBoundaries(),this.doDrawRegions&&(this.identifyRegions(),this.drawRegions())):this.doDrawBoundaries?(this.currentRow=1,this.currentCol=1,this.drawBoundaryRowStep()):this.doDrawRegions&&(this.identifyRegions(),this.currentRegion=0,this.drawRegionsStep())}drawBoundaries(){for(let t=1;t<this.gridSize;t++)for(let i=0;i<this.gridSize;i++)this.patternRows[t][i]&&(this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.resolution/this.gridSize*i,this.resolution/this.gridSize*t),this.wilson.ctx.lineTo(this.resolution/this.gridSize*(i+1),this.resolution/this.gridSize*t),this.wilson.ctx.stroke());for(let t=0;t<this.gridSize;t++)for(let i=1;i<this.gridSize;i++)this.patternCols[t][i]&&(this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.resolution/this.gridSize*i,this.resolution/this.gridSize*t),this.wilson.ctx.lineTo(this.resolution/this.gridSize*i,this.resolution/this.gridSize*(t+1)),this.wilson.ctx.stroke())}drawBoundaryRowStep(){for(let i=0;i<this.gridSize;i++)this.patternRows[this.currentRow][i]&&(this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.resolution/this.gridSize*i,this.resolution/this.gridSize*this.currentRow),this.wilson.ctx.lineTo(this.resolution/this.gridSize*(i+1),this.resolution/this.gridSize*this.currentRow),this.wilson.ctx.stroke());this.currentRow++,this.currentRow<this.gridSize?this.animationPaused||window.requestAnimationFrame(this.drawBoundaryRowStep.bind(this)):this.animationPaused||window.requestAnimationFrame(this.drawBoundaryColStep.bind(this))}drawBoundaryColStep(){for(let i=0;i<this.gridSize;i++)this.patternCols[i][this.currentCol]&&(this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.resolution/this.gridSize*this.currentCol,this.resolution/this.gridSize*i),this.wilson.ctx.lineTo(this.resolution/this.gridSize*this.currentCol,this.resolution/this.gridSize*(i+1)),this.wilson.ctx.stroke());this.currentCol++,this.currentCol<this.gridSize?this.animationPaused||window.requestAnimationFrame(this.drawBoundaryColStep.bind(this)):this.doDrawRegions&&(this.identifyRegions(),this.currentRegion=0,setTimeout(this.drawRegionsStep.bind(this),1e3))}identifyRegions(){let e=0,r=0;for(;;){var t=[[e,r]];for(this.regions[e][r]=this.numRegions,this.regionsOrdered.push([[e,r]]);0!==t.length;){var o=t.length;for(let i=0;i<o;i++){var n=t[i][0],h=t[i][1];0<n&&-1===this.regions[n-1][h]&&!this.patternRows[n][h]&&(t.push([n-1,h]),this.regions[n-1][h]=this.numRegions,this.regionsOrdered[this.numRegions].push([n-1,h])),n<this.gridSize-1&&-1===this.regions[n+1][h]&&!this.patternRows[n+1][h]&&(t.push([n+1,h]),this.regions[n+1][h]=this.numRegions,this.regionsOrdered[this.numRegions].push([n+1,h])),0<h&&-1===this.regions[n][h-1]&&!this.patternCols[n][h]&&(t.push([n,h-1]),this.regions[n][h-1]=this.numRegions,this.regionsOrdered[this.numRegions].push([n,h-1])),h<this.gridSize-1&&-1===this.regions[n][h+1]&&!this.patternCols[n][h+1]&&(t.push([n,h+1]),this.regions[n][h+1]=this.numRegions,this.regionsOrdered[this.numRegions].push([n,h+1]))}t.splice(0,o)}this.regionSizes.push(this.regionsOrdered[this.numRegions].length);let s=!1;for(let t=0;t<=this.gridSize;t++){for(let i=0;i<this.cellsByRadius[t].length;i++){var l=this.cellsByRadius[t][i][0],d=this.cellsByRadius[t][i][1];if(-1===this.regions[l][d]){e=l,r=d,s=!0;break}}if(s)break}if(this.numRegions++,!s)break}this.regionSizes=[...new Set(this.regionSizes)],this.regionSizes.sort((i,t)=>t-i),this.numUniqueRegionSizes=this.regionSizes.length}drawRegions(){this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution);for(let t=0;t<this.numRegions;t++){var s=this.regionsOrdered[t].length,i=t%(2*this.gridSize)/(2*this.gridSize),e=1===s?.5:Math.sqrt(this.regionSizes.indexOf(s)/(this.numUniqueRegionSizes-2)),i=this.wilson.utils.hsvToRgb(i,1,e);this.wilson.ctx.fillStyle=`rgb(${i[0]}, ${i[1]}, ${i[2]})`;for(let i=0;i<s;i++){var r=this.regionsOrdered[t][i][0],o=this.regionsOrdered[t][i][1];this.wilson.ctx.fillRect(this.resolution/this.gridSize*o+this.lineWidth/2,this.resolution/this.gridSize*r+this.lineWidth/2,this.resolution/this.gridSize-this.lineWidth,this.resolution/this.gridSize-this.lineWidth)}}}drawRegionsStep(){for(let i=0;i<Math.ceil(this.gridSize/50);i++){var t=this.regionsOrdered[this.currentRegion].length,s=this.currentRegion%(2*this.gridSize)/(2*this.gridSize),e=1===t?.5:Math.sqrt(this.regionSizes.indexOf(t)/(this.numUniqueRegionSizes-2)),s=this.wilson.utils.hsvToRgb(s,1,e);this.wilson.ctx.fillStyle="rgb(0, 0, 0)";for(let i=0;i<t;i++){var r=this.regionsOrdered[this.currentRegion][i][0],o=this.regionsOrdered[this.currentRegion][i][1];this.wilson.ctx.fillRect(this.resolution/this.gridSize*o,this.resolution/this.gridSize*r,this.resolution/this.gridSize,this.resolution/this.gridSize)}this.wilson.ctx.fillStyle=`rgb(${s[0]}, ${s[1]}, ${s[2]})`;for(let i=0;i<t;i++){var n=this.regionsOrdered[this.currentRegion][i][0],h=this.regionsOrdered[this.currentRegion][i][1];this.wilson.ctx.fillRect(this.resolution/this.gridSize*h+this.lineWidth/2,this.resolution/this.gridSize*n+this.lineWidth/2,this.resolution/this.gridSize-this.lineWidth,this.resolution/this.gridSize-this.lineWidth)}if(this.currentRegion++,this.currentRegion===this.numRegions)return}this.currentRegion<this.numRegions&&(this.animationPaused||window.requestAnimationFrame(this.drawRegionsStep.bind(this)))}}export{HitomezashiPattern};