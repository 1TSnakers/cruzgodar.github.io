"use strict";class HitomezashiPattern extends Applet{do_draw_boundaries=!0;do_draw_regions=!0;maximum_speed=!1;resolution=null;grid_size=null;row_prob=null;col_prob=null;pattern_rows=[];pattern_cols=[];regions=[];regions_ordered=[];region_sizes=[];num_regions=0;num_unique_region_sizes=0;cells_by_radius=[];current_row=1;current_col=1;current_region=0;line_width=null;constructor(i){super(i);let s={renderer:"cpu",canvas_width:1e3,canvas_height:1e3,use_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png"};this.wilson=new Wilson(i,s)}run(i=2e3,s=50,t=.5,e=.5,r=!0,o=!0,n=!1){this.resolution=i,this.grid_size=s,this.row_prob=t,this.col_prob=e,this.do_draw_boundaries=r,this.do_draw_regions=o,this.maximum_speed=n,this.wilson.change_canvas_size(this.resolution,this.resolution),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.wilson.ctx.strokeStyle="rgb(127, 127, 127)",this.line_width=this.resolution/this.grid_size/20,this.wilson.ctx.lineWidth=this.line_width,this.pattern_rows=Array(this.grid_size+1),this.pattern_cols=Array(this.grid_size+1),this.regions=Array(this.grid_size),this.regions_ordered=[],this.region_sizes=[],this.num_regions=0,this.cells_by_radius=Array(this.grid_size+1);for(let h=0;h<this.grid_size+1;h++){this.pattern_rows[h]=Array(this.grid_size+1),this.pattern_cols[h]=Array(this.grid_size+1);for(let l=0;l<this.grid_size+1;l++)this.pattern_rows[h][l]=0,this.pattern_cols[h][l]=0}for(let d=0;d<this.grid_size;d++){this.regions[d]=Array(this.grid_size);for(let g=0;g<this.grid_size;g++)this.regions[d][g]=-1}for(let u=0;u<this.grid_size+1;u++)this.cells_by_radius[u]=[];let c=Math.floor(this.grid_size/2);for(let a=0;a<this.grid_size;a++)for(let w=0;w<this.grid_size;w++)this.cells_by_radius[Math.abs(a-c)+Math.abs(w-c)].push([a,w]);for(let z=0;z<this.grid_size+1;z++){let $=Math.random()<this.row_prob?1:0;for(let _=$;_<this.grid_size;_+=2)this.pattern_rows[z][_]=1}for(let p=0;p<this.grid_size+1;p++){let f=Math.random()<this.col_prob?1:0;for(let b=f;b<this.grid_size;b+=2)this.pattern_cols[b][p]=1}this.maximum_speed?(this.do_draw_boundaries&&this.draw_boundaries(),this.do_draw_regions&&(this.identify_regions(),this.draw_regions())):this.do_draw_boundaries?(this.current_row=1,this.current_col=1,this.draw_boundary_row_step()):this.do_draw_regions&&(this.identify_regions(),this.current_region=0,this.draw_regions_step())}draw_boundaries(){for(let i=1;i<this.grid_size;i++)for(let s=0;s<this.grid_size;s++)this.pattern_rows[i][s]&&(this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.resolution/this.grid_size*s,this.resolution/this.grid_size*i),this.wilson.ctx.lineTo(this.resolution/this.grid_size*(s+1),this.resolution/this.grid_size*i),this.wilson.ctx.stroke());for(let t=0;t<this.grid_size;t++)for(let e=1;e<this.grid_size;e++)this.pattern_cols[t][e]&&(this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.resolution/this.grid_size*e,this.resolution/this.grid_size*t),this.wilson.ctx.lineTo(this.resolution/this.grid_size*e,this.resolution/this.grid_size*(t+1)),this.wilson.ctx.stroke())}draw_boundary_row_step(){for(let i=0;i<this.grid_size;i++)this.pattern_rows[this.current_row][i]&&(this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.resolution/this.grid_size*i,this.resolution/this.grid_size*this.current_row),this.wilson.ctx.lineTo(this.resolution/this.grid_size*(i+1),this.resolution/this.grid_size*this.current_row),this.wilson.ctx.stroke());this.current_row++,this.current_row<this.grid_size?window.requestAnimationFrame(this.draw_boundary_row_step.bind(this)):window.requestAnimationFrame(this.draw_boundary_col_step.bind(this))}draw_boundary_col_step(){for(let i=0;i<this.grid_size;i++)this.pattern_cols[i][this.current_col]&&(this.wilson.ctx.beginPath(),this.wilson.ctx.moveTo(this.resolution/this.grid_size*this.current_col,this.resolution/this.grid_size*i),this.wilson.ctx.lineTo(this.resolution/this.grid_size*this.current_col,this.resolution/this.grid_size*(i+1)),this.wilson.ctx.stroke());this.current_col++,this.current_col<this.grid_size?window.requestAnimationFrame(this.draw_boundary_col_step.bind(this)):this.do_draw_regions&&(this.identify_regions(),this.current_region=0,setTimeout(this.draw_regions_step.bind(this),1e3))}identify_regions(){let i=0,s=0;for(;;){let t=[[i,s]];for(this.regions[i][s]=this.num_regions,this.regions_ordered.push([[i,s]]);0!==t.length;){let e=t.length;for(let r=0;r<e;r++){let o=t[r][0],n=t[r][1];o>0&&-1===this.regions[o-1][n]&&!this.pattern_rows[o][n]&&(t.push([o-1,n]),this.regions[o-1][n]=this.num_regions,this.regions_ordered[this.num_regions].push([o-1,n])),o<this.grid_size-1&&-1===this.regions[o+1][n]&&!this.pattern_rows[o+1][n]&&(t.push([o+1,n]),this.regions[o+1][n]=this.num_regions,this.regions_ordered[this.num_regions].push([o+1,n])),n>0&&-1===this.regions[o][n-1]&&!this.pattern_cols[o][n]&&(t.push([o,n-1]),this.regions[o][n-1]=this.num_regions,this.regions_ordered[this.num_regions].push([o,n-1])),n<this.grid_size-1&&-1===this.regions[o][n+1]&&!this.pattern_cols[o][n+1]&&(t.push([o,n+1]),this.regions[o][n+1]=this.num_regions,this.regions_ordered[this.num_regions].push([o,n+1]))}t.splice(0,e)}this.region_sizes.push(this.regions_ordered[this.num_regions].length);let h=!1;for(let l=0;l<=this.grid_size;l++){for(let d=0;d<this.cells_by_radius[l].length;d++){let g=this.cells_by_radius[l][d][0],u=this.cells_by_radius[l][d][1];if(-1===this.regions[g][u]){i=g,s=u,h=!0;break}}if(h)break}if(this.num_regions++,!h)break}this.region_sizes=[...new Set(this.region_sizes)],this.region_sizes.sort((i,s)=>s-i),this.num_unique_region_sizes=this.region_sizes.length}draw_regions(){this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution);for(let i=0;i<this.num_regions;i++){let s=this.regions_ordered[i].length,t=i%(2*this.grid_size)/(2*this.grid_size),e=1===s?.5:Math.sqrt(this.region_sizes.indexOf(s)/(this.num_unique_region_sizes-2)),r=this.wilson.utils.hsv_to_rgb(t,1,e);this.wilson.ctx.fillStyle=`rgb(${r[0]}, ${r[1]}, ${r[2]})`;for(let o=0;o<s;o++){let n=this.regions_ordered[i][o][0],h=this.regions_ordered[i][o][1];this.wilson.ctx.fillRect(this.resolution/this.grid_size*h+this.line_width/2,this.resolution/this.grid_size*n+this.line_width/2,this.resolution/this.grid_size-this.line_width,this.resolution/this.grid_size-this.line_width)}}}draw_regions_step(){for(let i=0;i<Math.ceil(this.grid_size/50);i++){let s=this.regions_ordered[this.current_region].length,t=this.current_region%(2*this.grid_size)/(2*this.grid_size),e=1===s?.5:Math.sqrt(this.region_sizes.indexOf(s)/(this.num_unique_region_sizes-2)),r=this.wilson.utils.hsv_to_rgb(t,1,e);this.wilson.ctx.fillStyle="rgb(0, 0, 0)";for(let o=0;o<s;o++){let n=this.regions_ordered[this.current_region][o][0],h=this.regions_ordered[this.current_region][o][1];this.wilson.ctx.fillRect(this.resolution/this.grid_size*h,this.resolution/this.grid_size*n,this.resolution/this.grid_size,this.resolution/this.grid_size)}this.wilson.ctx.fillStyle=`rgb(${r[0]}, ${r[1]}, ${r[2]})`;for(let l=0;l<s;l++){let d=this.regions_ordered[this.current_region][l][0],g=this.regions_ordered[this.current_region][l][1];this.wilson.ctx.fillRect(this.resolution/this.grid_size*g+this.line_width/2,this.resolution/this.grid_size*d+this.line_width/2,this.resolution/this.grid_size-this.line_width,this.resolution/this.grid_size-this.line_width)}if(this.current_region++,this.current_region===this.num_regions)return}this.current_region<this.num_regions&&window.requestAnimationFrame(this.draw_regions_step.bind(this))}}