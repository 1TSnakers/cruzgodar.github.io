!function(){"use strict";let t={renderer:"gpu",shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio_x;\n\t\tuniform float aspect_ratio_y;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 3.0;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 100.0;\n\t\tconst int max_marches = 100; //Change to 512 to eliminate flickering in animations\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .1;\n\t\tconst int num_iterations = 32;\n\t\t\n\t\t\n\t\t\n\t\tuniform float klein_r;\n\t\tuniform float klein_i;\n\t\t\n\t\tuniform float box_size;\n\t\t\n\t\tconst vec3 inversion_center = vec3(0.0, 0.0, 0.0);\n\t\tconst vec3 re_center = vec3(0.0, 0.0, 0.0);\n\t\tconst float inversion_radius = 1.0;\n\t\t\n\t\tuniform float rotate_factor;\n\t\t\n\t\t\n\t\t\n\t\tvec3 color;\n\t\t\n\t\t\n\t\t\n\t\tvec2 wrap(vec2 x, vec2 a, vec2 s)\n\t\t{\n\t\t\tx -= s; \n\t\t\t\n\t\t\treturn (x - a * floor(x / a)) + s;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid trans_a(inout vec3 z, inout float DF, float a, float b)\n\t\t{\n\t\t\tfloat iR = 1.0 / dot(z, z);\n\t\t\tz *= -iR;\n\t\t\tz.x = -b - z.x;\n\t\t\tz.y = a + z.y; \n\t\t\tDF *= iR;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tfloat jos_kleinian(vec3 z)\n\t\t{\n\t\t\tvec3 lz = z + vec3(1.0), llz = z + vec3(-1.0);\n\t\t\t\n\t\t\tfloat DE = 1000.0;\n\t\t\tfloat DF = 1.0;\n\t\t\t\n\t\t\tfloat a = klein_r, b = klein_i;\n\t\t\t\n\t\t\tfloat f = sign(b);\n\t\t\t\n\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int i = 0; i < num_iterations; i++) \n\t\t\t{\n\t\t\t\tz.x = z.x + b / a * z.y;\n\t\t\t\t\n\t\t\t\tz.xz = wrap(z.xz, vec2(2.0 * box_size, 2.0 * box_size), vec2(-box_size, -box_size));\n\t\t\t\t\n\t\t\t\tz.x = z.x - b / a * z.y;\n\n\t\t\t\t//If above the separation line, rotate by 180 deg about (-b/2, a/2)\n\t\t\t\tif (z.y >= a * (0.5 + f * 0.25 * sign(z.x + b * 0.5) * (1.0 - exp(-rotate_factor * abs(z.x + b * 0.5)))))\n\t\t\t\t{\n\t\t\t\t\tz = vec3(-b, a, 0.0) - z;\n\t\t\t\t\t//z.xy = vec2(-b, a) - z.xy;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t//Apply transformation a\n\t\t\t\ttrans_a(z, DF, a, b);\n\t\t\t\t\n\t\t\t\tif (dot(z - llz, z - llz) < .0000001)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tllz = lz;\n\t\t\t\tlz = z;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tcolor = mix(color, abs(z), color_scale);\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int i = 0; i < 5; i++)\n\t\t\t{\n\t\t\t\tfloat y = min(z.y, a - z.y);\n\t\t\t\t\n\t\t\t\tDE = min(DE, min(y, 1.0) / max(DF, 1.0));\n\t\t\t\t\n\t\t\t\ttrans_a(z, DF, a, b);\n\t\t\t}\n\t\t\t\n\t\t\t\n\n\t\t\tfloat y = min(z.y, a - z.y);\n\n\t\t\tDE = min(DE, min(y, 1.0) / max(DF, 1.0));\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tcolor /= max(max(color.x, color.y), color.z);\n\t\t\t\n\t\t\t\n\n\t\t\treturn DE;\n\t\t}\n\n\n\n\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec3 p = pos.xzy;\n\t\t\t\n\t\t\treturn jos_kleinian(p);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat base = distance_estimator(pos);\n\t\t\t\n\t\t\tfloat x_step = distance_estimator(pos + vec3(.0001, 0.0, 0.0));\n\t\t\tfloat y_step = distance_estimator(pos + vec3(0.0, .0001, 0.0));\n\t\t\tfloat z_step = distance_estimator(pos + vec3(0.0, 0.0, .0001));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step - base, y_step - base, z_step - base));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat dot_product = dot(surface_normal, light_direction);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot_product, -.25 * dot_product);\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tcolor = color * light_intensity * max(1.0 - float(iteration) / float(max_marches), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\tfloat distance_from_camera = distance(pos, camera_pos);\n\t\t\t\n\t\t\tfloat fog_amount = 1.0 - exp(-distance_from_camera * fog_scaling);\n\t\t\t\n\t\t\treturn mix(color, fog_color, fog_amount);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 raymarch(vec3 start_pos)\n\t\t{\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = 0.0;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\tfloat last_distance = 1000.0;\n\t\t\t\n\t\t\tint slowed_down = 0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < max_marches; iteration++)\n\t\t\t{\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\t//This prevents overstepping, and is honestly a pretty clever fix.\n\t\t\t\tfloat distance = min(distance_estimator(pos), last_distance);\n\t\t\t\tlast_distance = distance;\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tepsilon = max(.0000006, .5 * t / float(image_size));\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (last_distance / distance > .9999 && slowed_down == 0)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .1;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (last_distance / distance <= .9999 && slowed_down == 1)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn final_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\t//Uncomment to use 2x antialiasing.\n\t\t\t//vec3 final_color = (raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size)))) / 4.0;\n\t\t\t\n\t\t\tvec3 final_color = raymarch(image_plane_center_pos + right_vec * uv.x * aspect_ratio_x + up_vec * uv.y / aspect_ratio_y);\n\t\t\t\t\n\t\t\tgl_FragColor = vec4(final_color.xyz, 1.0);\n\t\t}\n\t",canvas_width:500,canvas_height:500,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:function(){n.fullscreen.currently_fullscreen?Page.Layout.aspect_ratio>=1?(I=P,q=Math.floor(P/Page.Layout.aspect_ratio)):(I=Math.floor(P*Page.Layout.aspect_ratio),q=P):(I=P,q=P);n.change_canvas_size(I,q),I>=q?(n.gl.uniform1f(n.uniforms.aspect_ratio_x,I/q),n.gl.uniform1f(n.uniforms.aspect_ratio_y,1)):(n.gl.uniform1f(n.uniforms.aspect_ratio_x,1),n.gl.uniform1f(n.uniforms.aspect_ratio_y,I/q));n.gl.uniform1i(n.uniforms.image_size,P),window.requestAnimationFrame(Z)},mousedown_callback:nt,touchstart_callback:nt,mousedrag_callback:et,touchmove_callback:et,mouseup_callback:ot,touchend_callback:ot},n=new Wilson(document.querySelector("#output-canvas"),t);n.render.init_uniforms(["aspect_ratio_x","aspect_ratio_y","camera_pos","image_plane_center_pos","forward_vec","right_vec","up_vec","focal_length","light_pos","image_size","klein_r","klein_i","box_size","rotate_factor"]);let e=!1,o=!1,a=!1,i=!1,r=!1,s=!1,c=!1,l=!1,_=0,f=[0,0,0],u=[0,0,0];const m=.94,p=5e-4;let d=1,h=-1,g=Math.PI/2,v=Math.PI/2,y=0,z=0,x=0,b=0;const M=.94,w=.005,k=5e-4;let P=500,I=500,q=500,F=48,C=[],E=[],D=[],A=[],L=[3.98,.25,.95],S=1.902,T=.042,j=1,N=6,R=1.902,U=1.902,W=.042,B=.042,G=1,H=1,J=2,K=0,O=document.querySelector("#resolution-input"),Q=document.querySelector("#klein-r-input"),V=document.querySelector("#klein-i-input"),X=document.querySelector("#box-size-input"),Y=[O,Q,V,X];for(let t=0;t<4;t++)Y[t].addEventListener("input",rt);function Z(t){let l=t-h;if(h=t,0===l)return;n.render.draw_frame();let w=!1;e&&(!function(){let t=.5*Math.sin(Math.PI*K/120-Math.PI/2)+.5;S=R+U*t,T=W+B*t,j=G+H*t,n.gl.uniform1f(n.uniforms.klein_r,S),n.gl.uniform1f(n.uniforms.klein_i,T),n.gl.uniform1f(n.uniforms.box_size,j),121==++K&&(e=!1)}(),w=!0),o||a||i||r||s||c?(!function(){_=Math.min(Math.max(2e-6,d/50),.02);let t=[...L];o||s?(L[0]+=_*E[0],L[1]+=_*E[1],L[2]+=_*E[2]):(a||c)&&(L[0]-=_*E[0],L[1]-=_*E[1],L[2]-=_*E[2]);i?(L[0]+=_*D[0]/J,L[1]+=_*D[1]/J,L[2]+=_*D[2]/J):r&&(L[0]-=_*D[0]/J,L[1]-=_*D[1]/J,L[2]-=_*D[2]/J);f[0]=L[0]-t[0],f[1]=L[1]-t[1],f[2]=L[2]-t[2],$()}(),w=!0):l>=50&&(y=0,z=0,x=0,b=0,s=!1,c=!1,u[0]=0,u[1]=0,u[2]=0,f[0]=0,f[1]=0,f[2]=0),0===x&&0===b||(v+=b,(g+=x)>=2*Math.PI?g-=2*Math.PI:g<0&&(g+=2*Math.PI),v>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),x*=M,b*=M,Math.sqrt(x*x+b*b)<k&&(x=0,b=0),$(),w=!0),0===u[0]&&0===u[1]&&0===u[2]||(L[0]+=u[0],L[1]+=u[1],L[2]+=u[2],u[0]*=m,u[1]*=m,u[2]*=m,Math.sqrt(u[0]*u[0]+u[1]*u[1]+u[2]*u[2])<p*_&&(u[0]=0,u[1]=0,u[2]=0),$(),w=!0),w&&window.requestAnimationFrame(Z)}function $(){var t,e;E=[Math.cos(g)*Math.sin(v),Math.sin(g)*Math.sin(v),Math.cos(v)],D=function(t){let n=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/n,t[1]/n,t[2]/n]}([E[1],-E[0],0]),e=E,A=[(t=D)[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]],d=function(t,n,e){let o=[t,e,n],a=[o[0]+1,o[1]+1,o[2]+1],i=[o[0]-1,o[1]-1,o[2]-1],r=1e3,s=1,c=S,l=T,_=Math.sign(l);for(let t=0;t<F;t++){o[0]=o[0]+l/c*o[1],o[0]+=j,o[2]+=j,o[0]=o[0]-2*j*Math.floor(o[0]/(2*j))-j,o[2]=o[2]-2*j*Math.floor(o[2]/(2*j))-j,o[0]=o[0]-l/c*o[1],o[1]>=c*(.5+.25*_*Math.sign(o[0]+.5*l)*(1-Math.exp(-N*Math.abs(o[0]+.5*l))))&&(o[0]=-l-o[0],o[1]=c-o[1],o[2]=-o[2]);let t=1/tt(o,o);if(o[0]*=-t,o[1]*=-t,o[2]*=-t,o[0]=-l-o[0],o[1]=c+o[1],s*=t,(o[0]-i[0])*(o[0]-i[0])+(o[1]-i[1])*(o[1]-i[1])+(o[2]-i[2])*(o[2]-i[2])<1e-7)break;i[0]=a[0],i[1]=a[1],i[2]=a[2],a[0]=o[0],a[1]=o[1],a[2]=o[2]}for(let t=0;t<5;t++){let t=Math.min(o[1],c-o[1]);r=Math.min(r,Math.min(t,1)/Math.max(s,1));let n=1/tt(o,o);o[0]*=-n,o[1]*=-n,o[2]*=-n,o[0]=-l-o[0],o[1]=c+o[1],s*=n}let f=Math.min(o[1],c-o[1]);return r=Math.min(r,Math.min(f,1)/Math.max(s,1))}(L[0],L[1],L[2]),J=d/20,D[0]*=J/2,D[1]*=J/2,A[0]*=J/2,A[1]*=J/2,A[2]*=J/2,C=[L[0]+J*E[0],L[1]+J*E[1],L[2]+J*E[2]],n.gl.uniform3fv(n.uniforms.camera_pos,L),n.gl.uniform3fv(n.uniforms.image_plane_center_pos,C),n.gl.uniform3fv(n.uniforms.forward_vec,E),n.gl.uniform3fv(n.uniforms.right_vec,D),n.gl.uniform3fv(n.uniforms.up_vec,A),n.gl.uniform1f(n.uniforms.focal_length,J)}function tt(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function nt(t,n,e){y=0,z=0,x=0,b=0,"touchstart"===e.type&&(2===e.touches.length?(s=!0,c=!1,u[0]=0,u[1]=0,u[2]=0,f[0]=0,f[1]=0,f[2]=0,window.requestAnimationFrame(Z)):3===e.touches.length?(s=!1,c=!0,u[0]=0,u[1]=0,u[2]=0,f[0]=0,f[1]=0,f[2]=0,window.requestAnimationFrame(Z)):(s=!1,c=!1),l=!1)}function et(t,n,e,o,a){"touchmove"===a.type&&l?l=!1:(g+=e*Math.PI/2,y=e*Math.PI/2,g>=2*Math.PI?g-=2*Math.PI:g<0&&(g+=2*Math.PI),v+=o*Math.PI/2,z=o*Math.PI/2,v>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),$(),window.requestAnimationFrame(Z))}function ot(t,n,e){"touchend"===e.type&&(s=!1,c=!1,l=!0,0===u[0]&&0===u[1]&&0===u[2]&&(u[0]=f[0],u[1]=f[1],u[2]=f[2],f[0]=0,f[1]=0,f[2]=0)),"touchend"===e.type&&e.touches,(0===length||"mouseup"===e.type)&&Math.sqrt(y*y+z*z)>=w&&(x=y,b=z)}function at(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode||(f=[0,0,0],u=[0,0,0],87===t.keyCode?o=!0:83===t.keyCode&&(a=!0),68===t.keyCode?i=!0:65===t.keyCode&&(r=!0),window.requestAnimationFrame(Z))}function it(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode||(0===u[0]&&0===u[1]&&0===u[2]&&(u[0]=f[0],u[1]=f[1],u[2]=f[2],f[0]=0,f[1]=0,f[2]=0),87===t.keyCode?o=!1:83===t.keyCode&&(a=!1),68===t.keyCode?i=!1:65===t.keyCode&&(r=!1))}function rt(){R=S,U=(parseFloat(Q.value||2)||2)-R,W=T,B=(parseFloat(V.value||0)||0)-W,G=j,H=(parseFloat(X.value||1)||1)-G,st()}function st(){e||(e=!0,K=0,window.requestAnimationFrame(Z))}document.querySelector("#randomize-parameters-button").addEventListener("click",function(t=!0){if(e)return;R=S,U=.1*Math.random()-.075+2-R,W=T,B=.1*Math.random()-.05-W,G=j,H=.2*Math.random()-.1+1-G,Q.value=Math.round(1e6*(R+U))/1e6,V.value=Math.round(1e6*(W+B))/1e6,X.value=Math.round(1e6*(G+H))/1e6,st()}),document.querySelector("#download-button").addEventListener("click",()=>{0===julia_proportion?n.download_frame("the-mandelbulb.png"):n.download_frame("a-juliabulb.png")}),$(),I>=q?(n.gl.uniform1f(n.uniforms.aspect_ratio_x,I/q),n.gl.uniform1f(n.uniforms.aspect_ratio_y,1)):(n.gl.uniform1f(n.uniforms.aspect_ratio_x,1),n.gl.uniform1f(n.uniforms.aspect_ratio_y,I/q)),n.gl.uniform1i(n.uniforms.image_size,P),n.gl.uniform3fv(n.uniforms.camera_pos,L),n.gl.uniform3fv(n.uniforms.image_plane_center_pos,C),n.gl.uniform3fv(n.uniforms.light_pos,[0,0,5]),n.gl.uniform3fv(n.uniforms.forward_vec,E),n.gl.uniform3fv(n.uniforms.right_vec,D),n.gl.uniform3fv(n.uniforms.up_vec,A),n.gl.uniform1f(n.uniforms.focal_length,J),n.gl.uniform1f(n.uniforms.klein_r,S),n.gl.uniform1f(n.uniforms.klein_i,T),n.gl.uniform1f(n.uniforms.box_size,j),n.gl.uniform1f(n.uniforms.rotate_factor,N),window.requestAnimationFrame(Z),document.documentElement.addEventListener("keydown",at),Page.temporary_handlers.keydown.push(at),document.documentElement.addEventListener("keyup",it),Page.temporary_handlers.keydown.push(it)}();