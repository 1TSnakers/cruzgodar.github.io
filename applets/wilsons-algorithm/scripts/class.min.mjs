import{Applet}from"/scripts/src/applets.min.mjs";import{addTemporaryWorker}from"/scripts/src/main.min.mjs";import{Wilson}from"/scripts/wilson.min.mjs";class WilsonsAlgorithm extends Applet{webWorker=null;constructor(e){super(e);this.wilson=new Wilson(e,{renderer:"cpu",canvasWidth:1e3,canvasHeight:1e3,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"})}run({gridSize:e,maximumSpeed:r,noBorders:t,reverseGenerateSkeleton:s=!1}){let i=null;var n=t?e:2*e+1,o=Math.min(window.innerWidth,window.innerHeight);const l=Math.ceil(o/n);this.wilson.changeCanvasSize(n*l,n*l),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,n*l,n*l),this.webWorker=addTemporaryWorker("/applets/wilsons-algorithm/scripts/worker.js"),this.webWorker.onmessage=e=>{clearTimeout(i),this.wilson.ctx.fillStyle=e.data[4],this.wilson.ctx.fillRect(e.data[0]*l,e.data[1]*l,e.data[2]*l,e.data[3]*l)},s||(i=setTimeout(()=>{this.webWorker?.terminate&&this.webWorker.terminate(),this.run({gridSize:e,maximumSpeed:r,noBorders:t,reverseGenerateSkeleton:!0})},3e3)),this.webWorker.postMessage([e,r,t,s])}}export{WilsonsAlgorithm};