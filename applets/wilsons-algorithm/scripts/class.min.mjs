import{Applet}from"/scripts/src/applets.min.mjs";import{addTemporaryWorker}from"/scripts/src/main.min.mjs";import{Wilson}from"/scripts/wilson.min.mjs";class WilsonsAlgorithm extends Applet{webWorker=null;constructor(canvas){super(canvas);this.wilson=new Wilson(canvas,{renderer:"cpu",canvasWidth:1e3,canvasHeight:1e3,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"})}run({gridSize,maximumSpeed,noBorders,reverseGenerateSkeleton=!1}){let timeoutId=null;var canvasDim=noBorders?gridSize:2*gridSize+1,canvasPixels=Math.min(window.innerWidth,window.innerHeight);const canvasScaleFactor=Math.ceil(canvasPixels/canvasDim);this.wilson.changeCanvasSize(canvasDim*canvasScaleFactor,canvasDim*canvasScaleFactor),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,canvasDim*canvasScaleFactor,canvasDim*canvasScaleFactor),this.webWorker=addTemporaryWorker("/applets/wilsons-algorithm/scripts/worker.js"),this.webWorker.onmessage=e=>{clearTimeout(timeoutId),this.wilson.ctx.fillStyle=e.data[4],this.wilson.ctx.fillRect(e.data[0]*canvasScaleFactor,e.data[1]*canvasScaleFactor,e.data[2]*canvasScaleFactor,e.data[3]*canvasScaleFactor)},reverseGenerateSkeleton||(timeoutId=setTimeout(()=>{this.webWorker?.terminate&&this.webWorker.terminate(),this.run({gridSize:gridSize,maximumSpeed:maximumSpeed,noBorders:noBorders,reverseGenerateSkeleton:!0})},3e3)),this.webWorker.postMessage([gridSize,maximumSpeed,noBorders,reverseGenerateSkeleton])}}export{WilsonsAlgorithm};