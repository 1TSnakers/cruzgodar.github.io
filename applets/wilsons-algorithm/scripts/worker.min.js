"use strict";onmessage=async function(e){grid_size=e.data[0],maximum_speed=e.data[1],await draw_wilson_graph(),await color_graph()};let grid_size=null,maximum_speed=null,edges_in_tree=[],vertices_not_in_tree=[],new_vertices=[],current_row=null,current_column=null;function draw_wilson_graph(){return new Promise(async function(e,r){edges_in_tree=[],vertices_not_in_tree=[];for(let e=0;e<grid_size;e++)for(let r=0;r<grid_size;r++)vertices_not_in_tree[grid_size*e+r]=[e,r];for(;vertices_not_in_tree.length>0;)await wilson_step();e()})}function wilson_step(){return new Promise(async function(e,r){new_vertices=[];let t=Math.floor(Math.random()*vertices_not_in_tree.length);new_vertices.push(vertices_not_in_tree[t]),current_row=new_vertices[0][0],current_column=new_vertices[0][1],0==edges_in_tree.length?random_walk(2*grid_size):random_walk();for(let e=0;e<new_vertices.length-1;e++)maximum_speed?draw_line(new_vertices[e][0],new_vertices[e][1],new_vertices[e+1][0],new_vertices[e+1][1],"rgb(255, 255, 255)",0):await draw_line(new_vertices[e][0],new_vertices[e][1],new_vertices[e+1][0],new_vertices[e+1][1],"rgb(255, 255, 255)",8);for(let e=0;e<new_vertices.length;e++){let r=vertex_in_array(new_vertices[e],vertices_not_in_tree);-1!=r&&vertices_not_in_tree.splice(r,1),e!=new_vertices.length-1&&edges_in_tree.push([new_vertices[e],new_vertices[e+1]])}e()})}function random_walk(e=-1){for(;-1!=vertex_in_array([current_row,current_column],vertices_not_in_tree)&&(-1==e||new_vertices.length!=e);){let e=[],r=(e=0==current_row&&0==current_column?[1,2]:current_row==grid_size-1&&0==current_column?[0,1]:0==current_row&&current_column==grid_size-1?[2,3]:current_row==grid_size-1&&current_column==grid_size-1?[0,3]:0==current_row?[1,2,3]:current_row==grid_size-1?[0,1,3]:0==current_column?[0,1,2]:current_column==grid_size-1?[0,2,3]:[0,1,2,3])[Math.floor(Math.random()*e.length)];0==r?current_row--:1==r?current_column++:2==r?current_row++:current_column--;let t=vertex_in_array([current_row,current_column],new_vertices);-1!=t?(current_row=new_vertices[t][0],current_column=new_vertices[t][1],new_vertices=new_vertices.slice(0,t+1)):new_vertices.push([current_row,current_column])}}function color_graph(){return new Promise(async function(e,r){let t=[];for(let e=0;e<grid_size;e++){t[e]=[];for(let r=0;r<grid_size;r++)t[e][r]=[]}for(let e=0;e<edges_in_tree.length;e++){let r=edges_in_tree[e][0][0],n=edges_in_tree[e][0][1],i=edges_in_tree[e][1][0],_=edges_in_tree[e][1][1];r==i?(t[r][Math.min(n,_)].includes(1)||t[r][Math.min(n,_)].push(1),t[i][Math.max(n,_)].includes(3)||t[i][Math.max(n,_)].push(3)):(t[Math.min(r,i)][n].includes(2)||t[Math.min(r,i)][n].push(2),t[Math.max(r,i)][n].includes(0)||t[Math.max(r,i)][_].push(0))}let n=[],i=[];i=grid_size%2==1?[[Math.floor(grid_size/2),Math.floor(grid_size/2),0]]:[[Math.floor(grid_size/2)-1,Math.floor(grid_size/2)-1,0],[Math.floor(grid_size/2)-1,Math.floor(grid_size/2),0],[Math.floor(grid_size/2),Math.floor(grid_size/2)-1,0],[Math.floor(grid_size/2),Math.floor(grid_size/2),0]];let _=[];for(let e=0;e<grid_size;e++){_[e]=[];for(let r=0;r<grid_size;r++)_[e][r]=-1}for(;i.length>0;){let e=i.length;for(let r=0;r<e;r++){let e=i[r][0],s=i[r][1],o=i[r][2];_[e][s]=o,t[e][s].includes(0)&&-1==_[e-1][s]&&(i.push([e-1,s,o+1]),n.push([[e,s],[e-1,s],o])),t[e][s].includes(1)&&-1==_[e][s+1]&&(i.push([e,s+1,o+1]),n.push([[e,s],[e,s+1],o])),t[e][s].includes(2)&&-1==_[e+1][s]&&(i.push([e+1,s,o+1]),n.push([[e,s],[e+1,s],o])),t[e][s].includes(3)&&-1==_[e][s-1]&&(i.push([e,s-1,o+1]),n.push([[e,s],[e,s-1],o]))}i.splice(0,e)}n.sort((e,r)=>e[2]-r[2]);let s=7*n[n.length-1][2]/6,o=[0],c=0;for(let e=0;e<n.length;e++)n[e][2]>c&&(o.push(e),c++);o.push(n.length);for(let e=0;e<o.length;e++){let r=0;for(r=o[e];r<o[e+1]-1;r++){let e=HSVtoRGB(n[r][2]/s,1,1);draw_line(n[r][0][0],n[r][0][1],n[r][1][0],n[r][1][1],`rgb(${e[0]}, ${e[1]}, ${e[2]})`,0)}let t=HSVtoRGB(n[r][2]/s,1,1);await draw_line(n[r][0][0],n[r][0][1],n[r][1][0],n[r][1][1],`rgb(${t[0]}, ${t[1]}, ${t[2]})`,24)}e()})}function draw_line(e,r,t,n,i,_){return new Promise(function(s,o){if(r==n){let n=r,_=Math.min(e,t);postMessage([2*n+1,2*_+1,1,3,i])}else{let t=Math.min(r,n);postMessage([2*t+1,2*e+1,3,1,i])}setTimeout(s,_)})}function vertex_in_array(e,r){for(let t=0;t<r.length;t++)if(r[t][0]==e[0]&&r[t][1]==e[1])return t;return-1}function HSVtoRGB(e,r,t){let n,i,_,s,o,c,l,u;switch(c=t*(1-r),l=t*(1-(o=6*e-(s=Math.floor(6*e)))*r),u=t*(1-(1-o)*r),s%6){case 0:n=t,i=u,_=c;break;case 1:n=l,i=t,_=c;break;case 2:n=c,i=t,_=u;break;case 3:n=c,i=l,_=t;break;case 4:n=u,i=c,_=t;break;case 5:n=t,i=c,_=l}return[Math.round(255*n),Math.round(255*i),Math.round(255*_)]}