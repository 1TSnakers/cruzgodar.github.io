"use strict";onmessage=async function(e){grid_size=e.data[0],maximum_speed=e.data[1],importScripts("/applets/wilsons-algorithm/scripts/random-walk.js"),Module.onRuntimeInitialized=async function(){importScripts("/scripts/wasm-arrays.min.js"),await draw_wilson_graph(),await color_graph(),postMessage(["done"])}};let grid_size=null,maximum_speed=null,edges_in_tree=[],vertices_not_in_tree=[],grid=[],new_vertices=[],current_row=null,current_column=null,last_direction=null;function draw_wilson_graph(){return new Promise(async function(e,r){edges_in_tree=[],vertices_not_in_tree=[];for(let e=0;e<grid_size;e++)for(let r=0;r<grid_size;r++)vertices_not_in_tree[grid_size*e+r]=[e,r],grid[grid_size*e+r]=0;for(;vertices_not_in_tree.length>0;)await wilson_step();e()})}function wilson_step(){return new Promise(async function(e,r){new_vertices=[];let t=Math.floor(Math.random()*vertices_not_in_tree.length);current_row=vertices_not_in_tree[t][0],current_column=vertices_not_in_tree[t][1],0===edges_in_tree.length?wasm_random_walk(2*grid_size):wasm_random_walk();for(let e=0;e<new_vertices.length-1;e++)maximum_speed?draw_line(new_vertices[e][0],new_vertices[e][1],new_vertices[e+1][0],new_vertices[e+1][1],"rgb(255, 255, 255)",0):await draw_line(new_vertices[e][0],new_vertices[e][1],new_vertices[e+1][0],new_vertices[e+1][1],"rgb(255, 255, 255)",300/grid_size);for(let e=0;e<new_vertices.length;e++){grid[grid_size*new_vertices[e][0]+new_vertices[e][1]]=1;let r=vertex_in_array(new_vertices[e],vertices_not_in_tree);-1!==r&&vertices_not_in_tree.splice(r,1),e!==new_vertices.length-1&&edges_in_tree.push([new_vertices[e],new_vertices[e+1]])}e()})}function wasm_random_walk(e=0){let r=ccallArrays("random_walk","number",["number","array","number","number","number"],[grid_size,grid,e,current_row,current_column],{heapIn:"HEAPU32"}),t=Module.HEAPU32[r/Uint32Array.BYTES_PER_ELEMENT];for(let e=2;e<2*t;e+=2)new_vertices.push([Module.HEAPU32[r/Uint32Array.BYTES_PER_ELEMENT+e],Module.HEAPU32[r/Uint32Array.BYTES_PER_ELEMENT+e+1]]);Module.ccall("free_from_js",null,["number"],[r])}function color_graph(){return new Promise(async function(e,r){let t=[];for(let e=0;e<grid_size;e++){t[e]=[];for(let r=0;r<grid_size;r++)t[e][r]=[]}for(let e=0;e<edges_in_tree.length;e++){let r=edges_in_tree[e][0][0],i=edges_in_tree[e][0][1],n=edges_in_tree[e][1][0],s=edges_in_tree[e][1][1];r===n?(t[r][Math.min(i,s)].includes(1)||t[r][Math.min(i,s)].push(1),t[n][Math.max(i,s)].includes(3)||t[n][Math.max(i,s)].push(3)):(t[Math.min(r,n)][i].includes(2)||t[Math.min(r,n)][i].push(2),t[Math.max(r,n)][i].includes(0)||t[Math.max(r,n)][s].push(0))}let i=[],n=[];n=grid_size%2==1?[[Math.floor(grid_size/2),Math.floor(grid_size/2),0]]:[[Math.floor(grid_size/2)-1,Math.floor(grid_size/2)-1,0],[Math.floor(grid_size/2)-1,Math.floor(grid_size/2),0],[Math.floor(grid_size/2),Math.floor(grid_size/2)-1,0],[Math.floor(grid_size/2),Math.floor(grid_size/2),0]];let s=[];for(let e=0;e<grid_size;e++){s[e]=[];for(let r=0;r<grid_size;r++)s[e][r]=-1}for(;n.length>0;){let e=n.length;for(let r=0;r<e;r++){let e=n[r][0],_=n[r][1],l=n[r][2];s[e][_]=l,t[e][_].includes(0)&&-1===s[e-1][_]&&(n.push([e-1,_,l+1]),i.push([[e,_],[e-1,_],l])),t[e][_].includes(1)&&-1===s[e][_+1]&&(n.push([e,_+1,l+1]),i.push([[e,_],[e,_+1],l])),t[e][_].includes(2)&&-1===s[e+1][_]&&(n.push([e+1,_,l+1]),i.push([[e,_],[e+1,_],l])),t[e][_].includes(3)&&-1===s[e][_-1]&&(n.push([e,_-1,l+1]),i.push([[e,_],[e,_-1],l]))}n.splice(0,e)}i.sort((e,r)=>e[2]-r[2]);let _=7*i[i.length-1][2]/6,l=[0],a=0;for(let e=0;e<i.length;e++)i[e][2]>a&&(l.push(e),a++);l.push(i.length);for(let e=0;e<l.length;e++){let r=0;for(r=l[e];r<l[e+1]-1;r++){let e=HSVtoRGB(i[r][2]/_,1,1);draw_line(i[r][0][0],i[r][0][1],i[r][1][0],i[r][1][1],`rgb(${e[0]}, ${e[1]}, ${e[2]})`,0)}let t=HSVtoRGB(i[r][2]/_,1,1);await draw_line(i[r][0][0],i[r][0][1],i[r][1][0],i[r][1][1],`rgb(${t[0]}, ${t[1]}, ${t[2]})`,24)}e()})}function draw_line(e,r,t,i,n,s){return new Promise(function(_,l){if(r===i){let i=r,s=Math.min(e,t);postMessage([2*i+1,2*s+1,1,3,n])}else{let t=Math.min(r,i);postMessage([2*t+1,2*e+1,3,1,n])}setTimeout(_,s)})}function vertex_in_array(e,r){for(let t=0;t<r.length;t++)if(r[t][0]===e[0]&&r[t][1]===e[1])return t;return-1}function HSVtoRGB(e,r,t){let i,n,s,_,l,a,o,c;switch(a=t*(1-r),o=t*(1-(l=6*e-(_=Math.floor(6*e)))*r),c=t*(1-(1-l)*r),_%6){case 0:i=t,n=c,s=a;break;case 1:i=o,n=t,s=a;break;case 2:i=a,n=t,s=c;break;case 3:i=a,n=o,s=t;break;case 4:i=c,n=a,s=t;break;case 5:i=t,n=a,s=o}return[Math.round(255*i),Math.round(255*n),Math.round(255*s)]}