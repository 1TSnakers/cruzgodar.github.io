!function(){"use strict";let e=new Wilson(document.querySelector("#output-canvas"),{renderer:"cpu",canvas_width:1e3,canvas_height:1e3,use_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png"}),t=null,n=null,o=null,r=null;document.querySelector("#generate-button").addEventListener("click",()=>{u(!1)});let a=document.querySelector("#grid-size-input");a.addEventListener("keydown",e=>{13===e.keyCode&&u(!1)}),document.querySelector("#download-button").addEventListener("click",()=>{e.download_frame("wilsons-algorithm.png")});let l=document.querySelector("#toggle-maximum-speed-checkbox"),s=document.querySelector("#no-borders-checkbox"),c=document.querySelector("#progress-bar"),i=document.querySelector("#progress-bar span");function u(d){t=parseInt(a.value||50);let g=l.checked;n=s.checked;let m=null,p=2*t+1;n&&(p=t);let h=Math.min(Page.Layout.window_width,Page.Layout.window_height);if(o=Math.ceil(h/p),n?(e.change_canvas_size(t*o,t*o),e.ctx.fillStyle="rgb(0, 0, 0)",e.ctx.fillRect(0,0,t*o,t*o)):(e.change_canvas_size((2*t+1)*o,(2*t+1)*o),e.ctx.fillStyle="rgb(0, 0, 0)",e.ctx.fillRect(0,0,(2*t+1)*o,(2*t+1)*o)),!d)try{c.style.opacity=0,setTimeout(()=>{c.style.marginTop=0,c.style.marginBottom=0,c.style.height=0},600)}catch(e){}document.querySelector("#progress-bar span").insertAdjacentHTML("afterend","<span></span>"),document.querySelector("#progress-bar span").remove();try{r.terminate()}catch(e){}r=DEBUG?new Worker("/applets/wilsons-algorithm/scripts/worker.js"):new Worker("/applets/wilsons-algorithm/scripts/worker.min.js"),Page.temporary_web_workers.push(r),r.onmessage=function(t){return"log"===t.data[0]?(clearTimeout(m),void console.log(...t.data.slice(1))):"progress"===t.data[0]?(i.style.width=t.data[1]+"%",void(100===t.data[1]&&setTimeout(()=>{c.style.opacity=0,setTimeout(()=>{c.style.marginTop=0,c.style.marginBottom=0,c.style.height=0},300)},600))):(e.ctx.fillStyle=t.data[4],void e.ctx.fillRect(t.data[0]*o,t.data[1]*o,t.data[2]*o,t.data[3]*o))},r.postMessage([t,g,n,d]),d||(m=setTimeout(()=>{console.log("Didn't draw anything within three seconds -- attempting to reverse-generate a skeleton."),r.terminate(),c.style.marginTop="10vh",c.style.marginBottom="-5vh",c.style.height="5vh",setTimeout(()=>{c.style.opacity=1},600),u(!0)},3e3))}}();