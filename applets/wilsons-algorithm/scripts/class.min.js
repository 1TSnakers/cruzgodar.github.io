import{Applet}from"../../../scripts/applets/applet.min.js";import{addTemporaryWorker}from"/scripts/src/main.min.js";import{Wilson}from"/scripts/wilson.min.js";class WilsonsAlgorithm extends Applet{webWorker=null;constructor({canvas}){super(canvas);this.wilson=new Wilson(canvas,{renderer:"cpu",canvasWidth:1e3,canvasHeight:1e3,useFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"})}run({gridSize,maximumSpeed,noBorders,reverseGenerateSkeleton=!1}){let r=null;var s=noBorders?gridSize:2*gridSize+1,t=Math.min(window.innerWidth,window.innerHeight);const i=Math.ceil(t/s);this.wilson.changeCanvasSize(s*i,s*i),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,s*i,s*i),this.webWorker=addTemporaryWorker("/applets/wilsons-algorithm/scripts/worker.js"),this.webWorker.onmessage=e=>{clearTimeout(r),this.wilson.ctx.fillStyle=e.data[4],this.wilson.ctx.fillRect(e.data[0]*i,e.data[1]*i,e.data[2]*i,e.data[3]*i)},reverseGenerateSkeleton||(r=setTimeout(()=>{this.webWorker?.terminate&&this.webWorker.terminate(),this.run({gridSize:gridSize,maximumSpeed:maximumSpeed,noBorders:noBorders,reverseGenerateSkeleton:!0})},3e3)),this.webWorker.postMessage([gridSize,maximumSpeed,noBorders,reverseGenerateSkeleton])}}export{WilsonsAlgorithm};