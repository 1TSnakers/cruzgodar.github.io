!function(){"use strict";let t=document.querySelector("#output-canvas").getContext("webgl"),n=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight),e=!1,o=!1,a=!1,i=0,r=0,c=0,u=!1,s=!1,l=!1,m=!1,f=!1,_=!1,p=0,d=1,h=4.6601,v=2.272,g=500,w=500,y=500,M=500,b=32,S=[],q=[],z=[],A=[],x=[.0828,2.17,1.8925],L=8,P=[0,0,0],E=0,I=0,F=0,k=0,U=8,T=0,C=0,R=0,D=0,j=0,Y=0,H=0,N=0,X=0,B=2,W=[0,0,5],G=0;document.querySelector("#output-canvas").setAttribute("width",w),document.querySelector("#output-canvas").setAttribute("height",y),document.querySelector("#dim-input").addEventListener("input",et),document.querySelector("#generate-high-res-image-button").addEventListener("click",function(){let n=g;g=parseInt(document.querySelector("#high-res-dim-input").value||2e3),document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",g),t.viewport(0,0,g,g),t.uniform1i(J.antialiasing_uniform,1),Q();let e=document.createElement("a");e.download=0===k?"the-mandelbulb.png":"a-juliabulb.png";e.href=document.querySelector("#output-canvas").toDataURL(),e.click(),e.remove(),g=n,document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",g),t.viewport(0,0,g,g),t.uniform1i(J.antialiasing_uniform,0),Q()});let O=document.querySelectorAll("#power-input, #rotation-angle-x-input, #rotation-angle-y-input, #rotation-angle-z-input");for(let t=0;t<O.length;t++)O[t].addEventListener("input",ot);document.querySelector("#randomize-parameters-button").addEventListener("click",function(t=!0){if(o)return;D=E,j=I,Y=F,H=2*Math.random()-1-D,N=2*Math.random()-1-j,X=2*Math.random()-1-Y,document.querySelector("#rotation-angle-x-input").value=Math.round(1e6*(D+H))/1e6,document.querySelector("#rotation-angle-y-input").value=Math.round(1e6*(j+N))/1e6,document.querySelector("#rotation-angle-z-input").value=Math.round(1e6*(Y+X))/1e6,C=k,R=0,U=L,T=0,at()}),document.querySelector("#switch-bulb-button").addEventListener("click",function(){if(o)return;document.querySelector("#switch-bulb-button").style.opacity=0,setTimeout(function(){document.querySelector("#switch-bulb-button").textContent=0===C?"Switch to Mandelbulb":"Switch to Juliabulb",document.querySelector("#switch-bulb-button").style.opacity=1},300),0===k&&(P=[...x],t.uniform3fv(J.c_uniform,P));R=1-2*(C=k),U=L,T=0,D=E,j=I,Y=F,H=0,N=0,X=0,at()}),window.addEventListener("resize",nt),setTimeout(nt,500),applet_canvases_to_resize=[document.querySelector("#output-canvas")],applet_canvas_resize_callback=function(){canvas_is_fullscreen?aspect_ratio>=1?(w=g,y=Math.floor(g/aspect_ratio)):(w=Math.floor(g*aspect_ratio),y=g):(w=g,y=g),n=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight),document.querySelector("#output-canvas").setAttribute("width",w),document.querySelector("#output-canvas").setAttribute("height",y),t.uniform1f(J.aspect_ratio_uniform,w/y),t.uniform1i(J.image_size_uniform,g),t.viewport(0,0,w,y),nt(),window.requestAnimationFrame(Q)},applet_canvas_true_fullscreen=!0,set_up_canvas_resizer(),document.querySelector("#output-canvas").addEventListener("mousedown",function(n){a=!0,i=Date.now(),r=n.clientX,c=n.clientY,e||o||(e=!0,et(g=M),t.uniform1i(J.antialiasing_uniform,0),window.requestAnimationFrame(Q))}),document.querySelector("#output-canvas").addEventListener("mousemove",function(t){if(a){t.preventDefault();let e=t.clientX,o=t.clientY,a=e-r,i=o-c;(h+=a/n*Math.PI)>=2*Math.PI?h-=2*Math.PI:h<0&&(h+=2*Math.PI),(v-=i/n*Math.PI)>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),r=e,c=o,Z()}}),document.documentElement.addEventListener("mouseup",function(n){!(e=(a=!1)||u||s||l||m||f||_)&&Date.now()-i>300&&(M=g,et(g*=2),t.uniform1i(J.antialiasing_uniform,1),window.requestAnimationFrame(Q))}),document.querySelector("#output-canvas").addEventListener("touchstart",function(n){a=!0,i=Date.now(),r=n.touches[0].clientX,c=n.touches[0].clientY,2===n.touches.length?(f=!0,_=!1):3===n.touches.length&&(_=!0,f=!1),e||o||(e=!0,et(g=M),t.uniform1i(J.antialiasing_uniform,0),window.requestAnimationFrame(Q))}),document.querySelector("#output-canvas").addEventListener("touchmove",function(t){t.preventDefault();let e=t.touches[0].clientX,o=t.touches[0].clientY,a=e-r,i=o-c;Math.abs(a)>20||Math.abs(i)>20||((h+=a/n*Math.PI)>=2*Math.PI?h-=2*Math.PI:h<0&&(h+=2*Math.PI),(v-=i/n*Math.PI)>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),r=e,c=o,Z())}),document.querySelector("#output-canvas").addEventListener("touchend",function(n){2===n.touches.length?(f=!0,_=!1):3===n.touches.length?(_=!0,f=!1):(f=!1,_=!1,0===n.touches.length&&(a=!1)),!(e=a||u||s||l||m||f||_)&&Date.now()-i>300&&(M=g,et(g*=2),t.uniform1i(J.antialiasing_uniform,1),window.requestAnimationFrame(Q))}),document.documentElement.addEventListener("keydown",function(n){"INPUT"!==document.activeElement.tagName&&(i=Date.now(),87===n.keyCode?u=!0:83===n.keyCode&&(s=!0),68===n.keyCode?l=!0:65===n.keyCode&&(m=!0),e||o||(e=!0,et(g=M),t.uniform1i(J.antialiasing_uniform,0),window.requestAnimationFrame(Q)))}),document.documentElement.addEventListener("keyup",function(n){87===n.keyCode?u=!1:83===n.keyCode&&(s=!1),68===n.keyCode?l=!1:65===n.keyCode&&(m=!1),!(e=a||u||s||l||m||f||_)&&Date.now()-i>300&&(M=g,et(g*=2),t.uniform1i(J.antialiasing_uniform,1),window.requestAnimationFrame(Q))}),setTimeout(function(){let n=K(t,t.VERTEX_SHADER,V),e=K(t,t.FRAGMENT_SHADER,$);J=t.createProgram(),t.attachShader(J,n),t.attachShader(J,e),t.linkProgram(J),t.getProgramParameter(J,t.LINK_STATUS)||(console.log(`Couldn't link shader program: ${t.getShaderInfoLog(shader)}`),t.deleteProgram(J));t.useProgram(J);let o=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,0,-1,1,0,1,-1,0,1,1,0]),t.STATIC_DRAW),J.position_attribute=t.getAttribLocation(J,"position"),t.enableVertexAttribArray(J.position_attribute),t.vertexAttribPointer(J.position_attribute,3,t.FLOAT,!1,0,0),J.aspect_ratio_uniform=t.getUniformLocation(J,"aspect_ratio"),J.image_size_uniform=t.getUniformLocation(J,"image_size"),J.camera_pos_uniform=t.getUniformLocation(J,"camera_pos"),J.image_plane_center_pos_uniform=t.getUniformLocation(J,"image_plane_center_pos"),J.forward_vec_uniform=t.getUniformLocation(J,"forward_vec"),J.right_vec_uniform=t.getUniformLocation(J,"right_vec"),J.up_vec_uniform=t.getUniformLocation(J,"up_vec"),J.focal_length_uniform=t.getUniformLocation(J,"focal_length"),J.light_pos_uniform=t.getUniformLocation(J,"light_pos"),J.power_uniform=t.getUniformLocation(J,"power"),J.c_uniform=t.getUniformLocation(J,"c"),J.rotation_matrix_uniform=t.getUniformLocation(J,"rotation_matrix"),J.julia_proportion_uniform=t.getUniformLocation(J,"julia_proportion"),J.antialiasing_uniform=t.getUniformLocation(J,"antialiasing"),t.uniform1f(J.aspect_ratio_uniform,w/y),t.uniform1i(J.image_size_uniform,g),t.uniform3fv(J.camera_pos_uniform,x),t.uniform3fv(J.image_plane_center_pos_uniform,S),t.uniform3fv(J.forward_vec_uniform,q),t.uniform3fv(J.right_vec_uniform,z),t.uniform3fv(J.up_vec_uniform,A),t.uniform1f(J.focal_length_uniform,B),t.uniformMatrix3fv(J.rotation_matrix_uniform,!1,[1,0,0,0,1,0,0,0,1]),t.uniform3fv(J.light_pos_uniform,W),t.uniform1f(J.power_uniform,L),t.uniform3fv(J.c_uniform,P),t.uniform1f(J.julia_proportion_uniform,k),t.uniform1i(J.antialiasing_uniform,0),t.viewport(0,0,w,y),Z(),window.requestAnimationFrame(Q)},500);const V="\n\t\tattribute vec3 position;\n\t\tvarying vec2 uv;\n\n\t\tvoid main(void)\n\t\t{\n\t\t\tgl_Position = vec4(position, 1.0);\n\n\t\t\t//Interpolate quad coordinates in the fragment shader.\n\t\t\tuv = position.xy;\n\t\t}\n\t",$="\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 2.0;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\tuniform int antialiasing;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 1000.0;\n\t\tconst int max_marches = 64; //Change to 512 to eliminate flickering in animations\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .2;\n\t\tconst int num_iterations = 32;\n\t\t\n\t\tuniform float power;\n\t\tuniform vec3 c;\n\t\tuniform float julia_proportion;\n\t\t\n\t\tvec3 color;\n\t\t\n\t\t\n\t\t\n\t\tuniform mat3 rotation_matrix;\n\t\t\n\t\t\n\t\t\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec3 z = pos;\n\t\t\t\n\t\t\tfloat r = length(z);\n\t\t\tfloat dr = 1.0;\n\t\t\t\n\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < num_iterations; iteration++)\n\t\t\t{\n\t\t\t\tif (r > 16.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat theta = acos(z.z / r);\n\t\t\t\t\n\t\t\t\tfloat phi = atan(z.y, z.x);\n\t\t\t\t\n\t\t\t\tdr = pow(r, power - 1.0) * power * dr + 1.0;\n\t\t\t\t\n\t\t\t\ttheta *= power;\n\t\t\t\t\n\t\t\t\tphi *= power;\n\t\t\t\t\n\t\t\t\tz = pow(r, power) * vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\t\t\t\n\t\t\t\tz += mix(pos, c, julia_proportion);\n\t\t\t\t\n\t\t\t\tz = rotation_matrix * z;\n\t\t\t\t\n\t\t\t\tr = length(z);\n\t\t\t\t\n\t\t\t\tcolor = mix(color, abs(z / r), color_scale);\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\tcolor /= max(max(color.x, color.y), color.z);\n\t\t\t\n\t\t\treturn .5 * log(r) * r / dr;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat base = distance_estimator(pos);\n\t\t\t\n\t\t\tfloat x_step = distance_estimator(pos + vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step = distance_estimator(pos + vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step = distance_estimator(pos + vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step - base, y_step - base, z_step - base));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat dot_product = dot(surface_normal, light_direction);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot_product, -.25 * dot_product);\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tcolor = color * light_intensity * max(1.0 - float(iteration) / float(max_marches), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\tfloat distance_from_camera = length(pos - camera_pos);\n\t\t\t\n\t\t\tfloat fog_amount = 1.0 - exp(-distance_from_camera * fog_scaling);\n\t\t\t\n\t\t\treturn mix(color, fog_color, fog_amount);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 raymarch(vec3 start_pos)\n\t\t{\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = 0.0;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\tfloat last_distance = 1000.0;\n\t\t\t\n\t\t\t//int slowed_down = 0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < max_marches; iteration++)\n\t\t\t{\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\t//This prevents overstepping, and is honestly a pretty clever fix.\n\t\t\t\tfloat distance = min(distance_estimator(pos), last_distance);\n\t\t\t\tlast_distance = distance;\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tif (distance / float(image_size) * 1.5 > epsilon)\n\t\t\t\t{\n\t\t\t\t\tepsilon = distance / float(image_size) * 1.5;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Uncomment to add aggressive understepping when close to the fractal boundary, which helps to prevent flickering but is a significant performance hit.\n\t\t\t\t/*\n\t\t\t\telse if (last_distance / distance > .9999 && slowed_down == 0)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .125;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (last_distance / distance <= .9999 && slowed_down == 1)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 0;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn final_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tif (antialiasing == 1)\n\t\t\t{\n\t\t\t\tvec3 final_color = (raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size)))) / 4.0;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(final_color.xyz, 1.0);\n\t\t\t}\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tvec3 final_color = raymarch(image_plane_center_pos + right_vec * uv.x * aspect_ratio + up_vec * uv.y);\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(final_color.xyz, 1.0);\n\t\t\t}\n\t\t}\n\t";let J=null;function K(t,n,e){let o=t.createShader(n);return t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)||(console.log(`Couldn't load shader: ${t.getProgramInfoLog(shaderProgram)}`),t.deleteShader(o)),o}function Q(){t.drawArrays(t.TRIANGLE_STRIP,0,4),o?(!function(){let n=.5*Math.sin(Math.PI*G/120-Math.PI/2)+.5;L=U+T*n,k=C+R*n,E=D+H*n,I=j+N*n,F=Y+X*n;let e=[[Math.cos(F),-Math.sin(F),0],[Math.sin(F),Math.cos(F),0],[0,0,1]],a=[[Math.cos(I),0,-Math.sin(I)],[0,1,0],[Math.sin(I),0,Math.cos(I)]],i=[[1,0,0],[0,Math.cos(E),-Math.sin(E)],[0,Math.sin(E),Math.cos(E)]],r=tt(tt(e,a),i);t.uniformMatrix3fv(J.rotation_matrix_uniform,!1,[r[0][0],r[1][0],r[2][0],r[0][1],r[1][1],r[2][1],r[0][2],r[1][2],r[2][2]]),t.uniform1f(J.power_uniform,L),t.uniform1f(J.julia_proportion_uniform,k),121==++G&&(o=!1)}(),window.requestAnimationFrame(Q)):e&&((u||s||l||m||f||_)&&((p=d/20)<1e-6&&(p=1e-6),p>.02&&(p=.02),u||f?(x[0]+=p*q[0],x[1]+=p*q[1],x[2]+=p*q[2]):(s||_)&&(x[0]-=p*q[0],x[1]-=p*q[1],x[2]-=p*q[2]),l?(x[0]+=p*z[0]/B,x[1]+=p*z[1]/B,x[2]+=p*z[2]/B):m&&(x[0]-=p*z[0]/B,x[1]-=p*z[1]/B,x[2]-=p*z[2]/B),Z()),window.requestAnimationFrame(Q))}function Z(){var n,e;q=[Math.cos(h)*Math.sin(v),Math.sin(h)*Math.sin(v),Math.cos(v)],z=function(t){let n=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/n,t[1]/n,t[2]/n]}([q[1],-q[0],0]),e=q,A=[(n=z)[1]*e[2]-n[2]*e[1],n[2]*e[0]-n[0]*e[2],n[0]*e[1]-n[1]*e[0]],d=function(t,n,e){let o=[t,n,e],a=0,i=1;for(let u=0;u<b&&!((a=Math.sqrt((c=o,(r=o)[0]*c[0]+r[1]*c[1]+r[2]*c[2])))>16);u++){let r=Math.acos(o[2]/a),c=Math.atan2(o[1],o[0]);i=Math.pow(a,L-1)*L*i+1,r*=L,c*=L;let u=Math.pow(a,L);o[0]=u*Math.sin(r)*Math.cos(c)+((1-k)*t+k*P[0]),o[1]=u*Math.sin(r)*Math.sin(c)+((1-k)*n+k*P[1]),o[2]=u*Math.cos(r)+((1-k)*e+k*P[2]);let s=o[0],l=o[1],m=o[2],f=[[Math.cos(F),-Math.sin(F),0],[Math.sin(F),Math.cos(F),0],[0,0,1]],_=[[Math.cos(I),0,-Math.sin(I)],[0,1,0],[Math.sin(I),0,Math.cos(I)]],p=[[1,0,0],[0,Math.cos(E),-Math.sin(E)],[0,Math.sin(E),Math.cos(E)]],d=tt(tt(f,_),p);o[0]=d[0][0]*s+d[0][1]*l+d[0][2]*m,o[1]=d[1][0]*s+d[1][1]*l+d[1][2]*m,o[2]=d[2][0]*s+d[2][1]*l+d[2][2]*m}var r,c;return.5*Math.log(a)*a/i}(x[0],x[1],x[2]),B=d/2,z[0]*=B/2,z[1]*=B/2,A[0]*=B/2,A[1]*=B/2,A[2]*=B/2,S=[x[0]+B*q[0],x[1]+B*q[1],x[2]+B*q[2]],t.uniform3fv(J.camera_pos_uniform,x),t.uniform3fv(J.image_plane_center_pos_uniform,S),t.uniform3fv(J.forward_vec_uniform,q),t.uniform3fv(J.right_vec_uniform,z),t.uniform3fv(J.up_vec_uniform,A),t.uniform1f(J.focal_length_uniform,B)}function tt(t,n){return[[t[0][0]*n[0][0]+t[0][1]*n[1][0]+t[0][2]*n[2][0],t[0][0]*n[0][1]+t[0][1]*n[1][1]+t[0][2]*n[2][1],t[0][0]*n[0][2]+t[0][1]*n[1][2]+t[0][2]*n[2][2]],[t[1][0]*n[0][0]+t[1][1]*n[1][0]+t[1][2]*n[2][0],t[1][0]*n[0][1]+t[1][1]*n[1][1]+t[1][2]*n[2][1],t[1][0]*n[0][2]+t[1][1]*n[1][2]+t[1][2]*n[2][2]],[t[2][0]*n[0][0]+t[2][1]*n[1][0]+t[2][2]*n[2][0],t[2][0]*n[0][1]+t[2][1]*n[1][1]+t[2][2]*n[2][1],t[2][0]*n[0][2]+t[2][1]*n[1][2]+t[2][2]*n[2][2]]]}function nt(){n=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight)}function et(n=0){0===n?((g=parseInt(document.querySelector("#dim-input").value||500))<200&&(g=200),g>2e3&&(g=2e3)):g=n,canvas_is_fullscreen&&(aspect_ratio>=1?(w=g,y=Math.floor(g/aspect_ratio)):(w=Math.floor(g*aspect_ratio),y=g)),document.querySelector("#output-canvas").setAttribute("width",w),document.querySelector("#output-canvas").setAttribute("height",y),t.uniform1f(J.aspect_ratio_uniform,w/y),t.uniform1i(J.image_size_uniform,g),t.viewport(0,0,w,y),window.requestAnimationFrame(Q)}function ot(){U=L,T=(parseFloat(document.querySelector("#power-input").value||8)||8)-U,U+T<1&&(T=0),D=E,j=I,Y=F,H=parseFloat(document.querySelector("#rotation-angle-x-input").value||0)||0-D,N=parseFloat(document.querySelector("#rotation-angle-y-input").value||0)||0-j,X=parseFloat(document.querySelector("#rotation-angle-z-input").value||0)||0-Y,C=k,R=0,at()}function at(){o=!0,G=0,window.requestAnimationFrame(Q)}}();