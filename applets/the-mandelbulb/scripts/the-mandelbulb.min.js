!function(){"use strict";let t=document.querySelector("#output-canvas").getContext("webgl"),n=document.querySelector("#output-canvas").offsetWidth,e=!1,o=!1,a=!1,i=0,r=0,c=!1,u=!1,s=!1,l=!1,m=!1,_=!1,f=0,d=1,p=4.6601,h=2.272,g=500,v=32,y=[],w=[],M=[],b=[],S=[.0828,2.17,1.8925],q=8,z=[0,0,0],A=0,L=0,x=0,P=0,E=8,I=0,k=0,F=0,U=0,T=0,C=0,R=0,j=0,D=0,Y=2,X=[0,0,5],B=0;$(),document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",g),document.querySelector("#dim-input").addEventListener("input",function(){(g=parseInt(document.querySelector("#dim-input").value||500))<200&&(g=200);g>2e3&&(g=2e3);t.uniform1i(H.small_image_size_uniform,g),document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",g),t.viewport(0,0,g,g),window.requestAnimationFrame(V)}),document.querySelector("#generate-high-res-image-button").addEventListener("click",function(){let n=g;g=parseInt(document.querySelector("#high-res-dim-input").value||2e3),document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",g),t.viewport(0,0,g,g),V();let e=document.createElement("a");e.download=0===P?"the-mandelbulb.png":"a-juliabulb.png";e.href=document.querySelector("#output-canvas").toDataURL(),e.click(),e.remove(),g=n,document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",g),t.viewport(0,0,g,g),V()});let W=document.querySelectorAll("#power-input, #rotation-angle-x-input, #rotation-angle-y-input, #rotation-angle-z-input");for(let t=0;t<W.length;t++)W[t].addEventListener("input",Q);document.querySelector("#randomize-parameters-button").addEventListener("click",function(t=!0){if(o)return;U=A,T=L,C=x,R=2*Math.random()-1-U,j=2*Math.random()-1-T,D=2*Math.random()-1-C,document.querySelector("#rotation-angle-x-input").value=Math.round(1e6*(U+R))/1e6,document.querySelector("#rotation-angle-y-input").value=Math.round(1e6*(T+j))/1e6,document.querySelector("#rotation-angle-z-input").value=Math.round(1e6*(C+D))/1e6,k=P,F=0,E=q,I=0,Z()}),document.querySelector("#switch-bulb-button").addEventListener("click",function(){if(o)return;document.querySelector("#switch-bulb-button").style.opacity=0,setTimeout(function(){document.querySelector("#switch-bulb-button").textContent=0===k?"Switch to Mandelbulb":"Switch to Juliabulb",document.querySelector("#switch-bulb-button").style.opacity=1},300),0===P&&(z=[...S]);F=1-2*(k=P),E=q,I=0,U=A,T=L,C=x,R=0,j=0,D=0,Z()}),window.addEventListener("resize",K),setTimeout(K,500),applet_canvases_to_resize=[document.querySelector("#output-canvas")],applet_canvas_resize_callback=function(){n=document.querySelector("#output-canvas").offsetWidth},set_up_canvas_resizer(),document.querySelector("#output-canvas").addEventListener("mousedown",function(t){a=!0,i=t.clientX,r=t.clientY,e||o||(e=!0,window.requestAnimationFrame(V))}),document.querySelector("#output-canvas").addEventListener("mousemove",function(t){if(a){t.preventDefault();let e=t.clientX,o=t.clientY,a=e-i,c=o-r;(p+=a/n*Math.PI)>=2*Math.PI?p-=2*Math.PI:p<0&&(p+=2*Math.PI),(h-=c/n*Math.PI)>Math.PI-.01?h=Math.PI-.01:h<.01&&(h=.01),i=e,r=o,$()}}),document.documentElement.addEventListener("mouseup",function(t){e=(a=!1)||c||u||s||l||m||_}),document.querySelector("#output-canvas").addEventListener("touchstart",function(t){a=!0,i=t.touches[0].clientX,r=t.touches[0].clientY,2===t.touches.length?(m=!0,_=!1):3===t.touches.length&&(_=!0,m=!1),e||o||(e=!0,window.requestAnimationFrame(V))}),document.querySelector("#output-canvas").addEventListener("touchmove",function(t){t.preventDefault();let e=t.touches[0].clientX,o=t.touches[0].clientY,a=e-i,c=o-r;Math.abs(a)>20||Math.abs(c)>20||((p+=a/n*Math.PI)>=2*Math.PI?p-=2*Math.PI:p<0&&(p+=2*Math.PI),(h-=c/n*Math.PI)>Math.PI-.01?h=Math.PI-.01:h<.01&&(h=.01),i=e,r=o,$())}),document.querySelector("#output-canvas").addEventListener("touchend",function(t){2===t.touches.length?(m=!0,_=!1):3===t.touches.length?(_=!0,m=!1):(m=!1,_=!1,0===t.touches.length&&(a=!1)),e=a||c||u||s||l||m||_}),document.documentElement.addEventListener("keydown",function(t){87===t.keyCode?c=!0:83===t.keyCode&&(u=!0),68===t.keyCode?s=!0:65===t.keyCode&&(l=!0),e||o||(e=!0,window.requestAnimationFrame(V))}),document.documentElement.addEventListener("keyup",function(t){87===t.keyCode?c=!1:83===t.keyCode&&(u=!1),68===t.keyCode?s=!1:65===t.keyCode&&(l=!1),e=a||c||u||s||l||m||_}),setTimeout(function(){let n=O(t,t.VERTEX_SHADER,N),e=O(t,t.FRAGMENT_SHADER,G);H=t.createProgram(),t.attachShader(H,n),t.attachShader(H,e),t.linkProgram(H),t.getProgramParameter(H,t.LINK_STATUS)||(console.log(`Couldn't link shader program: ${t.getShaderInfoLog(shader)}`),t.deleteProgram(H));t.useProgram(H);let o=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,0,-1,1,0,1,-1,0,1,1,0]),t.STATIC_DRAW),H.position_attribute=t.getAttribLocation(H,"position"),t.enableVertexAttribArray(H.position_attribute),t.vertexAttribPointer(H.position_attribute,3,t.FLOAT,!1,0,0),H.image_size_uniform=t.getUniformLocation(H,"image_size"),H.camera_pos_uniform=t.getUniformLocation(H,"camera_pos"),H.image_plane_center_pos_uniform=t.getUniformLocation(H,"image_plane_center_pos"),H.forward_vec_uniform=t.getUniformLocation(H,"forward_vec"),H.right_vec_uniform=t.getUniformLocation(H,"right_vec"),H.up_vec_uniform=t.getUniformLocation(H,"up_vec"),H.focal_length_uniform=t.getUniformLocation(H,"focal_length"),H.light_pos_uniform=t.getUniformLocation(H,"light_pos"),H.power_uniform=t.getUniformLocation(H,"power"),H.c_uniform=t.getUniformLocation(H,"c"),H.rotation_angle_x_uniform=t.getUniformLocation(H,"rotation_angle_x"),H.rotation_angle_y_uniform=t.getUniformLocation(H,"rotation_angle_y"),H.rotation_angle_z_uniform=t.getUniformLocation(H,"rotation_angle_z"),H.julia_proportion_uniform=t.getUniformLocation(H,"julia_proportion"),t.viewport(0,0,g,g),window.requestAnimationFrame(V)},500);const N="\n\t\tattribute vec3 position;\n\t\tvarying vec2 uv;\n\n\t\tvoid main(void)\n\t\t{\n\t\t\tgl_Position = vec4(position, 1.0);\n\n\t\t\t//Interpolate quad coordinates in the fragment shader.\n\t\t\tuv = position.xy;\n\t\t}\n\t",G="\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 2.0;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 1000.0;\n\t\tconst int max_marches = 64;\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .2;\n\t\tconst int num_iterations = 32;\n\t\t\n\t\tuniform float power;\n\t\tuniform vec3 c;\n\t\tuniform float julia_proportion;\n\t\t\n\t\tvec3 color;\n\t\t\n\t\t\n\t\t\n\t\tuniform float rotation_angle_x;\n\t\tuniform float rotation_angle_y;\n\t\tuniform float rotation_angle_z;\n\t\t\n\t\t\n\t\t\n\t\tmat3 rotation_matrix = mat3(\n\t\t\tcos(rotation_angle_z), sin(rotation_angle_z), 0.0,\n\t\t\t-sin(rotation_angle_z), cos(rotation_angle_z), 0.0,\n\t\t\t0.0, 0.0, 1.0\n\t\t) * mat3(\n\t\t\tcos(rotation_angle_y), 0.0, sin(rotation_angle_y),\n\t\t\t0.0, 1.0, 0.0,\n\t\t\t-sin(rotation_angle_y), 0.0, cos(rotation_angle_y)\n\t\t) * mat3(\n\t\t\t1.0, 0.0, 0.0,\n\t\t\t0.0, cos(rotation_angle_x), sin(rotation_angle_x),\n\t\t\t0.0, -sin(rotation_angle_x), cos(rotation_angle_x)\n\t\t);\n\t\t\n\t\t\n\t\t\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec3 z = pos;\n\t\t\t\n\t\t\tfloat r = 0.0;\n\t\t\tfloat dr = 1.0;\n\t\t\t\n\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < num_iterations; iteration++)\n\t\t\t{\n\t\t\t\tr = length(z);\n\t\t\t\t\n\t\t\t\tif (r > 16.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat theta = acos(z.z / r);\n\t\t\t\t\n\t\t\t\tfloat phi = atan(z.y, z.x);\n\t\t\t\t\n\t\t\t\tdr = pow(r, power - 1.0) * power * dr + 1.0;\n\t\t\t\t\n\t\t\t\ttheta = theta * power;\n\t\t\t\t\n\t\t\t\tphi = phi * power;\n\t\t\t\t\n\t\t\t\tz = pow(r, power) * vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\t\t\t\n\t\t\t\tz += (1.0 - julia_proportion) * pos + julia_proportion * c;\n\t\t\t\t\n\t\t\t\tz = rotation_matrix * z;\n\t\t\t\t\n\t\t\t\tcolor = (1.0 - color_scale) * color + color_scale * abs(normalize(z));\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\tfloat max_color_component = max(max(color.x, color.y), color.z);\n\t\t\tcolor /= max_color_component;\n\t\t\t\n\t\t\treturn .5 * log(r) * r / dr;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat e = .000001;\n\t\t\t\n\t\t\tfloat base = distance_estimator(pos);\n\t\t\t\n\t\t\tfloat x_step = distance_estimator(pos + vec3(e, 0.0, 0.0));\n\t\t\tfloat y_step = distance_estimator(pos + vec3(0.0, e, 0.0));\n\t\t\tfloat z_step = distance_estimator(pos + vec3(0.0, 0.0, e));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step - base, y_step - base, z_step - base));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot(surface_normal, light_direction), .25 * dot(surface_normal, -light_direction));\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tcolor = color * light_intensity * max((1.0 - float(iteration) / float(max_marches)), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\tfloat distance_from_camera = length(pos - camera_pos);\n\t\t\t\n\t\t\tfloat fog_amount = 1.0 - exp(-distance_from_camera * fog_scaling);\n\t\t\t\n\t\t\treturn (1.0 - fog_amount) * color + fog_amount * fog_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tvec3 start_pos = image_plane_center_pos + right_vec * uv.x + up_vec * uv.y;\n\t\t\t\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = 0.0;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\tfloat last_distance = 1000.0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < max_marches; iteration++)\n\t\t\t{\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\t//This prevents overstepping, and is honestly a pretty clever fix.\n\t\t\t\tfloat distance = min(distance_estimator(pos), last_distance);\n\t\t\t\tlast_distance = distance;\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tif (distance / float(image_size) * 1.5 > epsilon)\n\t\t\t\t{\n\t\t\t\t\tepsilon = distance / float(image_size) * 1.5;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tgl_FragColor = vec4(final_color.xyz, 1.0);\n\t\t}\n\t";let H=null;function O(t,n,e){let o=t.createShader(n);return t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)||(console.log(`Couldn't load shader: ${t.getProgramInfoLog(shaderProgram)}`),t.deleteShader(o)),o}function V(){t.uniform1i(H.image_size_uniform,g),t.uniform3fv(H.camera_pos_uniform,S),t.uniform3fv(H.image_plane_center_pos_uniform,y),t.uniform3fv(H.forward_vec_uniform,w),t.uniform3fv(H.right_vec_uniform,M),t.uniform3fv(H.up_vec_uniform,b),t.uniform1f(H.focal_length_uniform,Y),t.uniform3fv(H.light_pos_uniform,X),t.uniform1f(H.power_uniform,q),t.uniform3fv(H.c_uniform,z),t.uniform1f(H.rotation_angle_x_uniform,A),t.uniform1f(H.rotation_angle_y_uniform,L),t.uniform1f(H.rotation_angle_z_uniform,x),t.uniform1f(H.julia_proportion_uniform,P),t.drawArrays(t.TRIANGLE_STRIP,0,4),o?(!function(){let t=.5*Math.sin(Math.PI*B/120-Math.PI/2)+.5;q=E+I*t,P=k+F*t,A=U+R*t,L=T+j*t,x=C+D*t,121==++B&&(o=!1)}(),window.requestAnimationFrame(V)):e&&((c||u||s||l||m||_)&&((f=d/20)<1e-6&&(f=1e-6),f>.02&&(f=.02),c||m?(S[0]+=f*w[0],S[1]+=f*w[1],S[2]+=f*w[2]):(u||_)&&(S[0]-=f*w[0],S[1]-=f*w[1],S[2]-=f*w[2]),s?(S[0]+=f*M[0]/Y,S[1]+=f*M[1]/Y,S[2]+=f*M[2]/Y):l&&(S[0]-=f*M[0]/Y,S[1]-=f*M[1]/Y,S[2]-=f*M[2]/Y),$()),window.requestAnimationFrame(V))}function $(){var t,n;w=[Math.cos(p)*Math.sin(h),Math.sin(p)*Math.sin(h),Math.cos(h)],M=function(t){let n=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/n,t[1]/n,t[2]/n]}([w[1],-w[0],0]),n=w,b=[(t=M)[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]],d=function(t,n,e){let o=[t,n,e],a=0,i=1;for(let u=0;u<v&&!((a=Math.sqrt((c=o,(r=o)[0]*c[0]+r[1]*c[1]+r[2]*c[2])))>10);u++){let r=Math.acos(o[2]/a),c=Math.atan2(o[1],o[0]);i=Math.pow(a,q-1)*q*i+1,r*=q,c*=q;let u=Math.pow(a,q);o[0]=u*Math.sin(r)*Math.cos(c)+((1-P)*t+P*z[0]),o[1]=u*Math.sin(r)*Math.sin(c)+((1-P)*n+P*z[1]),o[2]=u*Math.cos(r)+((1-P)*e+P*z[2]);let s=o[0],l=o[1],m=o[2],_=[[Math.cos(x),-Math.sin(x),0],[Math.sin(x),Math.cos(x),0],[0,0,1]],f=[[Math.cos(L),0,-Math.sin(L)],[0,1,0],[Math.sin(L),0,Math.cos(L)]],d=[[1,0,0],[0,Math.cos(A),-Math.sin(A)],[0,Math.sin(A),Math.cos(A)]],p=J(J(_,f),d);o[0]=p[0][0]*s+p[0][1]*l+p[0][2]*m,o[1]=p[1][0]*s+p[1][1]*l+p[1][2]*m,o[2]=p[2][0]*s+p[2][1]*l+p[2][2]*m}var r,c;return.5*Math.log(a)*a/i}(S[0],S[1],S[2]),Y=d/2,M[0]*=Y/2,M[1]*=Y/2,b[0]*=Y/2,b[1]*=Y/2,b[2]*=Y/2,y=[S[0]+Y*w[0],S[1]+Y*w[1],S[2]+Y*w[2]]}function J(t,n){return[[t[0][0]*n[0][0]+t[0][1]*n[1][0]+t[0][2]*n[2][0],t[0][0]*n[0][1]+t[0][1]*n[1][1]+t[0][2]*n[2][1],t[0][0]*n[0][2]+t[0][1]*n[1][2]+t[0][2]*n[2][2]],[t[1][0]*n[0][0]+t[1][1]*n[1][0]+t[1][2]*n[2][0],t[1][0]*n[0][1]+t[1][1]*n[1][1]+t[1][2]*n[2][1],t[1][0]*n[0][2]+t[1][1]*n[1][2]+t[1][2]*n[2][2]],[t[2][0]*n[0][0]+t[2][1]*n[1][0]+t[2][2]*n[2][0],t[2][0]*n[0][1]+t[2][1]*n[1][1]+t[2][2]*n[2][1],t[2][0]*n[0][2]+t[2][1]*n[1][2]+t[2][2]*n[2][2]]]}function K(){n=document.querySelector("#output-canvas").offsetWidth}function Q(){E=q,I=parseFloat(document.querySelector("#power-input").value||8)-E,E+I<1&&(I=0),U=A,T=L,C=x,R=parseFloat(document.querySelector("#rotation-angle-x-input").value||0)-U,j=parseFloat(document.querySelector("#rotation-angle-y-input").value||0)-T,D=parseFloat(document.querySelector("#rotation-angle-z-input").value||0)-C,k=P,F=0,Z()}function Z(){o=!0,B=0,window.requestAnimationFrame(V)}}();