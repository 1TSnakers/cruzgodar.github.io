!function(){"use strict";let t={renderer:"gpu",shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio_x;\n\t\tuniform float aspect_ratio_y;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 2.0;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\tuniform int draw_sphere;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 1000.0;\n\t\tconst int max_marches = 64; //Change to 512 to eliminate flickering in animations\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .2;\n\t\tconst int max_iterations = 32;\n\t\t\n\t\t\n\t\tvec3 color;\n\t\t\n\t\t\n\t\tuniform mat3 rotation_matrix;\n\t\t\n\t\tuniform float power;\n\t\tuniform vec3 c;\n\t\tuniform float julia_proportion;\n\t\t\n\t\t\n\t\t\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec3 z = pos;\n\t\t\t\n\t\t\tfloat r = length(z);\n\t\t\tfloat dr = 1.0;\n\t\t\t\n\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < max_iterations; iteration++)\n\t\t\t{\n\t\t\t\tif (r > 16.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat theta = acos(z.z / r);\n\t\t\t\t\n\t\t\t\tfloat phi = atan(z.y, z.x);\n\t\t\t\t\n\t\t\t\tdr = pow(r, power - 1.0) * power * dr + 1.0;\n\t\t\t\t\n\t\t\t\ttheta *= power;\n\t\t\t\t\n\t\t\t\tphi *= power;\n\t\t\t\t\n\t\t\t\tz = pow(r, power) * vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\t\t\t\n\t\t\t\tz += mix(pos, c, julia_proportion);\n\t\t\t\t\n\t\t\t\tz = rotation_matrix * z;\n\t\t\t\t\n\t\t\t\tr = length(z);\n\t\t\t\t\n\t\t\t\tcolor = mix(color, abs(z / r), color_scale);\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\tcolor /= max(max(color.x, color.y), color.z);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfloat distance_1 = .5 * log(r) * r / dr;\n\t\t\tfloat distance_2 = length(pos - c) - .05;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (distance_2 < distance_1 && draw_sphere == 1)\n\t\t\t{\n\t\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\t\t\n\t\t\t\treturn distance_2;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn distance_1;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat base = distance_estimator(pos);\n\t\t\t\n\t\t\tfloat x_step = distance_estimator(pos + vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step = distance_estimator(pos + vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step = distance_estimator(pos + vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step - base, y_step - base, z_step - base));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat dot_product = dot(surface_normal, light_direction);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot_product, -.25 * dot_product);\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tcolor = color * light_intensity * max((1.0 - float(iteration) / float(max_marches)), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\treturn mix(color, fog_color, 1.0 - exp(-distance(pos, camera_pos) * fog_scaling));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 raymarch(vec3 start_pos)\n\t\t{\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = 0.0;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\tfloat last_distance = 1000.0;\n\t\t\t\n\t\t\t//int slowed_down = 0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < max_marches; iteration++)\n\t\t\t{\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\t//This prevents overstepping, and is honestly a pretty clever fix.\n\t\t\t\tfloat distance = min(distance_estimator(pos), last_distance);\n\t\t\t\tlast_distance = distance;\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tif (distance / float(image_size) * 1.5 > epsilon)\n\t\t\t\t{\n\t\t\t\t\tepsilon = distance / float(image_size) * 1.5;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Uncomment to add aggressive understepping when close to the fractal boundary, which helps to prevent flickering but is a significant performance hit.\n\t\t\t\t/*\n\t\t\t\telse if (last_distance / distance > .9999 && slowed_down == 0)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .125;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (last_distance / distance <= .9999 && slowed_down == 1)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 0;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn final_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\t//Uncomment to use 2x antialiasing.\n\t\t\t//vec3 final_color = (raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size)))) / 4.0;\n\t\t\t\t\n\t\t\tvec3 final_color = raymarch(image_plane_center_pos + right_vec * uv.x * aspect_ratio_x + up_vec * uv.y / aspect_ratio_y);\n\t\t\t\n\t\t\tgl_FragColor = vec4(final_color.xyz, 1.0);\n\t\t}\n\t",canvas_width:500,canvas_height:500,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:wt,mousedown_callback:dt,touchstart_callback:dt,mousedrag_callback:gt,touchmove_callback:gt,mouseup_callback:vt,touchend_callback:vt},n=new Wilson(document.querySelector("#output-canvas"),t);n.render.init_uniforms(["aspect_ratio_x","aspect_ratio_y","image_size","camera_pos","image_plane_center_pos","forward_vec","right_vec","up_vec","focal_length","light_pos","draw_sphere","power","c","julia_proportion","rotation_matrix"]);let e=!1,o=!1,a=!1,i=!1,r=!1,s=!1,c=!1,l=!1,u=0,f=[0,0,0],m=[0,0,0];const _=.94,p=5e-4;let h=1,d=-1,g=4.6601,v=2.272,y=0,M=0,w=0,x=0;const z=.94,b=.005,k=5e-4;let q=500,P=500,C=500,I=32,F=[],S=[],L=[],E=[],T=[.0828,2.17,1.8925],A=2,j=8,N=[0,0,0],U=[0,0,0],B=[0,0,0],J=0,W=0,D=0,G=0,H=1,K=8,O=0,Q=0,R=0,V=0,X=0,Y=0,Z=0,$=0,tt=0,nt=0,et=document.querySelector("#resolution-input");et.addEventListener("input",wt),document.querySelector("#download-button").addEventListener("click",()=>{0===G?n.download_frame("the-mandelbulb.png"):n.download_frame("a-juliabulb.png")});let ot=document.querySelector("#rotation-angle-x-input"),at=document.querySelector("#rotation-angle-y-input"),it=document.querySelector("#rotation-angle-z-input"),rt=document.querySelector("#c-x-input"),st=document.querySelector("#c-y-input"),ct=document.querySelector("#c-z-input"),lt=document.querySelector("#power-input"),ut=[ot,at,it,rt,st,ct,lt];for(let t=0;t<7;t++)ut[t].addEventListener("input",xt);document.querySelector("#randomize-rotation-button").addEventListener("click",function(t=!0){if(e)return;V=J,X=W,Y=D,Z=2*Math.random()-1-V,$=2*Math.random()-1-X,tt=2*Math.random()-1-Y,ot.value=Math.round(1e6*(V+Z))/1e6,at.value=Math.round(1e6*(X+$))/1e6,it.value=Math.round(1e6*(Y+tt))/1e6,U[0]=N[0],U[1]=N[1],U[2]=N[2],B[0]=0,B[1]=0,B[2]=0,Q=G,R=0,K=j,O=0,t?zt():(J=V+Z,W=X+$,D=Y+tt)}),document.querySelector("#randomize-c-button").addEventListener("click",function(t=!0){if(e)return;V=J,X=W,Y=D,Z=0,$=0,tt=0,U[0]=N[0],U[1]=N[1],U[2]=N[2],B[0]=1.5*Math.random()-.75-U[0],B[1]=1.5*Math.random()-.75-U[1],B[2]=1.5*Math.random()-.75-U[2],rt.value=Math.round(1e6*(U[0]+B[0]))/1e6,st.value=Math.round(1e6*(U[1]+B[1]))/1e6,ct.value=Math.round(1e6*(U[2]+B[2]))/1e6,Q=G,R=0,K=j,O=0,t?zt():(N[0]=U[0]+B[0],N[1]=U[1]+B[1],N[2]=U[2]+B[2])});let ft=document.querySelector("#switch-bulb-button");ft.addEventListener("click",function(){if(e)return;ft.style.opacity=0,setTimeout(()=>{ft.textContent=0===Q?"Switch to Mandelbulb":"Switch to Juliabulb",Page.Load.TextButtons.equalize(),ft.style.opacity=1},300),0===G?(n.gl.uniform3fv(n.uniforms.c,N),H||n.gl.uniform1i(n.uniforms.draw_sphere,1),setTimeout(()=>{mt.style.opacity=1},300)):(H=!0,n.gl.uniform1i(n.uniforms.draw_sphere,0),mt.style.opacity=0);R=1-2*(Q=G),K=j,O=0,V=J,X=W,Y=D,Z=0,$=0,tt=0,U[0]=N[0],U[1]=N[1],U[2]=N[2],B[0]=0,B[1]=0,B[2]=0,zt()});let mt=document.querySelector("#switch-movement-button");function _t(t){let l=t-d;if(d=t,0===l)return;n.render.draw_frame();let y=!1;e&&(!function(){let t=.5*Math.sin(Math.PI*nt/120-Math.PI/2)+.5;J=V+Z*t,W=X+$*t,D=Y+tt*t;let o=[[Math.cos(D),-Math.sin(D),0],[Math.sin(D),Math.cos(D),0],[0,0,1]],a=[[Math.cos(W),0,-Math.sin(W)],[0,1,0],[Math.sin(W),0,Math.cos(W)]],i=[[1,0,0],[0,Math.cos(J),-Math.sin(J)],[0,Math.sin(J),Math.cos(J)]],r=ht(ht(o,a),i);n.gl.uniformMatrix3fv(n.uniforms.rotation_matrix,!1,[r[0][0],r[1][0],r[2][0],r[0][1],r[1][1],r[2][1],r[0][2],r[1][2],r[2][2]]),N[0]=U[0]+B[0]*t,N[1]=U[1]+B[1]*t,N[2]=U[2]+B[2]*t,n.gl.uniform3fv(n.uniforms.c,N),j=K+O*t,n.gl.uniform1f(n.uniforms.power,j),G=Q+R*t,n.gl.uniform1f(n.uniforms.julia_proportion,G),121==++nt&&(e=!1)}(),y=!0),(o||a||i||r||s||c)&&(!function(){if(u=Math.min(Math.max(1e-6,h/20),.02),H){let t=[...T];o||s?(T[0]+=u*S[0],T[1]+=u*S[1],T[2]+=u*S[2]):(a||c)&&(T[0]-=u*S[0],T[1]-=u*S[1],T[2]-=u*S[2]),i?(T[0]+=u*L[0]/A,T[1]+=u*L[1]/A,T[2]+=u*L[2]/A):r&&(T[0]-=u*L[0]/A,T[1]-=u*L[1]/A,T[2]-=u*L[2]/A),f[0]=T[0]-t[0],f[1]=T[1]-t[1],f[2]=T[2]-t[2]}else{let t=[...N];o||s?(N[0]+=.5*u*S[0],N[1]+=.5*u*S[1],N[2]+=.5*u*S[2]):(a||c)&&(N[0]-=.5*u*S[0],N[1]-=.5*u*S[1],N[2]-=.5*u*S[2]),i?(N[0]+=.5*u*L[0]/A,N[1]+=.5*u*L[0]/A,N[2]+=.5*u*L[0]/A):r&&(N[0]-=.5*u*L[0]/A,N[1]-=.5*u*L[0]/A,N[2]-=.5*u*L[0]/A),rt.value=Math.round(1e6*N[0])/1e6,st.value=Math.round(1e6*N[1])/1e6,ct.value=Math.round(1e6*N[2])/1e6,n.gl.uniform3fv(n.uniforms.c,N),f[0]=N[0]-t[0],f[1]=N[1]-t[1],f[2]=N[2]-t[2]}pt()}(),y=!0),0===w&&0===x||(v+=x,(g+=w)>=2*Math.PI?g-=2*Math.PI:g<0&&(g+=2*Math.PI),v>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),w*=z,x*=z,Math.sqrt(w*w+x*x)<k&&(w=0,x=0),pt(),y=!0),0===m[0]&&0===m[1]&&0===m[2]||(H?(T[0]+=m[0],T[1]+=m[1],T[2]+=m[2]):(N[0]+=m[0],N[1]+=m[1],N[2]+=m[2],rt.value=Math.round(1e6*N[0])/1e6,st.value=Math.round(1e6*N[1])/1e6,ct.value=Math.round(1e6*N[2])/1e6,n.gl.uniform3fv(n.uniforms.c,N)),m[0]*=_,m[1]*=_,m[2]*=_,Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2])<p*u&&(m[0]=0,m[1]=0,m[2]=0),pt(),y=!0),y&&window.requestAnimationFrame(_t)}function pt(){var t,e;S=[Math.cos(g)*Math.sin(v),Math.sin(g)*Math.sin(v),Math.cos(v)],L=function(t){let n=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/n,t[1]/n,t[2]/n]}([S[1],-S[0],0]),e=S,E=[(t=L)[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]],h=function(t,n,e){let o=[t,n,e],a=0,i=1;for(let c=0;c<I&&!((a=Math.sqrt((s=o,(r=o)[0]*s[0]+r[1]*s[1]+r[2]*s[2])))>16);c++){let r=Math.acos(o[2]/a),s=Math.atan2(o[1],o[0]);i=Math.pow(a,j-1)*j*i+1,r*=j,s*=j;let c=Math.pow(a,j);o[0]=c*Math.sin(r)*Math.cos(s)+((1-G)*t+G*N[0]),o[1]=c*Math.sin(r)*Math.sin(s)+((1-G)*n+G*N[1]),o[2]=c*Math.cos(r)+((1-G)*e+G*N[2]);let l=o[0],u=o[1],f=o[2],m=[[Math.cos(D),-Math.sin(D),0],[Math.sin(D),Math.cos(D),0],[0,0,1]],_=[[Math.cos(W),0,-Math.sin(W)],[0,1,0],[Math.sin(W),0,Math.cos(W)]],p=[[1,0,0],[0,Math.cos(J),-Math.sin(J)],[0,Math.sin(J),Math.cos(J)]],h=ht(ht(m,_),p);o[0]=h[0][0]*l+h[0][1]*u+h[0][2]*f,o[1]=h[1][0]*l+h[1][1]*u+h[1][2]*f,o[2]=h[2][0]*l+h[2][1]*u+h[2][2]*f}var r,s;return.5*Math.log(a)*a/i}(T[0],T[1],T[2]),A=h/2,L[0]*=A/2,L[1]*=A/2,E[0]*=A/2,E[1]*=A/2,E[2]*=A/2,F=[T[0]+A*S[0],T[1]+A*S[1],T[2]+A*S[2]],n.gl.uniform3fv(n.uniforms.camera_pos,T),n.gl.uniform3fv(n.uniforms.image_plane_center_pos,F),n.gl.uniform3fv(n.uniforms.forward_vec,S),n.gl.uniform3fv(n.uniforms.right_vec,L),n.gl.uniform3fv(n.uniforms.up_vec,E),n.gl.uniform1f(n.uniforms.focal_length,A)}function ht(t,n){return[[t[0][0]*n[0][0]+t[0][1]*n[1][0]+t[0][2]*n[2][0],t[0][0]*n[0][1]+t[0][1]*n[1][1]+t[0][2]*n[2][1],t[0][0]*n[0][2]+t[0][1]*n[1][2]+t[0][2]*n[2][2]],[t[1][0]*n[0][0]+t[1][1]*n[1][0]+t[1][2]*n[2][0],t[1][0]*n[0][1]+t[1][1]*n[1][1]+t[1][2]*n[2][1],t[1][0]*n[0][2]+t[1][1]*n[1][2]+t[1][2]*n[2][2]],[t[2][0]*n[0][0]+t[2][1]*n[1][0]+t[2][2]*n[2][0],t[2][0]*n[0][1]+t[2][1]*n[1][1]+t[2][2]*n[2][1],t[2][0]*n[0][2]+t[2][1]*n[1][2]+t[2][2]*n[2][2]]]}function dt(t,n,e){y=0,M=0,w=0,x=0,"touchstart"===e.type&&(2===e.touches.length?(s=!0,c=!1,m[0]=0,m[1]=0,m[2]=0,f[0]=0,f[1]=0,f[2]=0,window.requestAnimationFrame(_t)):3===e.touches.length?(s=!1,c=!0,m[0]=0,m[1]=0,m[2]=0,f[0]=0,f[1]=0,f[2]=0,window.requestAnimationFrame(_t)):(s=!1,c=!1),l=!1)}function gt(t,n,e,o,a){"touchmove"===a.type&&l?l=!1:(g+=e*Math.PI/2,y=e*Math.PI/2,g>=2*Math.PI?g-=2*Math.PI:g<0&&(g+=2*Math.PI),v+=o*Math.PI/2,M=o*Math.PI/2,v>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),pt(),window.requestAnimationFrame(_t))}function vt(t,n,e){"touchend"===e.type&&(s=!1,c=!1,l=!0,0===m[0]&&0===m[1]&&0===m[2]&&(m[0]=f[0],m[1]=f[1],m[2]=f[2],f[0]=0,f[1]=0,f[2]=0)),"touchend"===e.type&&e.touches,(0===length||"mouseup"===e.type)&&Math.sqrt(y*y+M*M)>=b&&(w=y,x=M)}function yt(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode||(f=[0,0,0],m=[0,0,0],87===t.keyCode?o=!0:83===t.keyCode&&(a=!0),68===t.keyCode?i=!0:65===t.keyCode&&(r=!0),window.requestAnimationFrame(_t))}function Mt(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode||(0===m[0]&&0===m[1]&&0===m[2]&&(m[0]=f[0],m[1]=f[1],m[2]=f[2],f[0]=0,f[1]=0,f[2]=0),87===t.keyCode?o=!1:83===t.keyCode&&(a=!1),68===t.keyCode?i=!1:65===t.keyCode&&(r=!1))}function wt(){q=Math.max(100,parseInt(et.value||500)),n.fullscreen.currently_fullscreen?Page.Layout.aspect_ratio>=1?(P=q,C=Math.floor(q/Page.Layout.aspect_ratio)):(P=Math.floor(q*Page.Layout.aspect_ratio),C=q):(P=q,C=q),n.change_canvas_size(P,C),P>=C?(n.gl.uniform1f(n.uniforms.aspect_ratio_x,P/C),n.gl.uniform1f(n.uniforms.aspect_ratio_y,1)):(n.gl.uniform1f(n.uniforms.aspect_ratio_x,1),n.gl.uniform1f(n.uniforms.aspect_ratio_y,P/C)),n.gl.uniform1i(n.uniforms.image_size,q),window.requestAnimationFrame(_t)}function xt(){V=J,X=W,Y=D,Z=(parseFloat(ot.value||0)||0)-V,$=(parseFloat(at.value||0)||0)-X,tt=(parseFloat(it.value||0)||0)-Y,U[0]=N[0],U[1]=N[1],U[2]=N[2],B[0]=(parseFloat(rt.value||0)||0)-U[0],B[1]=(parseFloat(st.value||0)||0)-U[1],B[2]=(parseFloat(ct.value||0)||0)-U[2],K=j,O=(parseFloat(lt.value||0)||0)-K,Q=G,R=0,zt()}function zt(){e||(e=!0,nt=0,window.requestAnimationFrame(_t))}mt.addEventListener("click",function(){H=!H,mt.style.opacity=0,setTimeout(()=>{mt.textContent=H?"Change Juliabulb":"Move Camera",Page.Load.TextButtons.equalize(),mt.style.opacity=1},300),H?n.gl.uniform1i(n.uniforms.draw_sphere,0):n.gl.uniform1i(n.uniforms.draw_sphere,1)}),mt.style.opacity=0,Page.Load.TextButtons.equalize(),pt(),P>=C?(n.gl.uniform1f(n.uniforms.aspect_ratio_x,P/C),n.gl.uniform1f(n.uniforms.aspect_ratio_y,1)):(n.gl.uniform1f(n.uniforms.aspect_ratio_x,1),n.gl.uniform1f(n.uniforms.aspect_ratio_y,P/C)),n.gl.uniform1i(n.uniforms.image_size,q),n.gl.uniform3fv(n.uniforms.camera_pos,T),n.gl.uniform3fv(n.uniforms.image_plane_center_pos,F),n.gl.uniform3fv(n.uniforms.light_pos,[0,0,5]),n.gl.uniform3fv(n.uniforms.forward_vec,S),n.gl.uniform3fv(n.uniforms.right_vec,L),n.gl.uniform3fv(n.uniforms.up_vec,E),n.gl.uniform1f(n.uniforms.focal_length,A),n.gl.uniform1i(n.uniforms.draw_sphere,0),n.gl.uniform1f(n.uniforms.power,8),n.gl.uniform3fv(n.uniforms.c,N),n.gl.uniform1f(n.uniforms.julia_proportion,0),n.gl.uniformMatrix3fv(n.uniforms.rotation_matrix,!1,[1,0,0,0,1,0,0,0,1]),window.requestAnimationFrame(_t),document.documentElement.addEventListener("keydown",yt),Page.temporary_handlers.keydown.push(yt),document.documentElement.addEventListener("keyup",Mt),Page.temporary_handlers.keydown.push(Mt)}();