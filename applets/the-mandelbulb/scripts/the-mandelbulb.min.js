!function(){"use strict";let t={renderer:"gpu",shader:"\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio_x;\n\t\tuniform float aspect_ratio_y;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 1.5;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\tuniform int draw_sphere;\n\t\t\n\t\tuniform int max_iterations;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 1000.0;\n\t\tuniform int max_marches;\n\t\tuniform float step_factor;\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .1;\n\t\t\n\t\t\n\t\tvec3 color;\n\t\t\n\t\t\n\t\tuniform mat3 rotation_matrix;\n\t\t\n\t\tuniform float power;\n\t\tuniform vec3 c;\n\t\tuniform float julia_proportion;\n\t\t\n\t\t\n\t\t\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec3 z = pos;\n\t\t\t\n\t\t\tfloat r = length(z);\n\t\t\tfloat dr = 1.0;\n\t\t\t\n\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 100; iteration++)\n\t\t\t{\n\t\t\t\tif (r > 16.0 || iteration >= max_iterations)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat theta = acos(z.z / r);\n\t\t\t\t\n\t\t\t\tfloat phi = atan(z.y, z.x);\n\t\t\t\t\n\t\t\t\tdr = pow(r, power - 1.0) * power * dr + 1.0;\n\t\t\t\t\n\t\t\t\ttheta *= power;\n\t\t\t\t\n\t\t\t\tphi *= power;\n\t\t\t\t\n\t\t\t\tz = pow(r, power) * vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\t\t\t\n\t\t\t\tz += mix(pos, c, julia_proportion);\n\t\t\t\t\n\t\t\t\tz = rotation_matrix * z;\n\t\t\t\t\n\t\t\t\tr = length(z);\n\t\t\t\t\n\t\t\t\tcolor = mix(color, abs(z / r), color_scale);\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\tcolor /= max(max(color.x, color.y), color.z);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfloat distance_1 = .5 * log(r) * r / dr;\n\t\t\tfloat distance_2 = length(pos - c) - .05;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (distance_2 < distance_1 && draw_sphere == 1)\n\t\t\t{\n\t\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\t\t\n\t\t\t\treturn distance_2;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn distance_1;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat x_step_1 = distance_estimator(pos + vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step_1 = distance_estimator(pos + vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step_1 = distance_estimator(pos + vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\tfloat x_step_2 = distance_estimator(pos - vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step_2 = distance_estimator(pos - vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step_2 = distance_estimator(pos - vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step_1 - x_step_2, y_step_1 - y_step_2, z_step_1 - z_step_2));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat dot_product = dot(surface_normal, light_direction);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot_product, -.25 * dot_product);\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tcolor = color * light_intensity * max((1.0 - float(iteration) / float(max_marches)), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\treturn mix(color, fog_color, 1.0 - exp(-distance(pos, camera_pos) * fog_scaling));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 raymarch(vec3 start_pos)\n\t\t{\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9 / step_factor;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = 0.0;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\tfloat last_distance = 1000.0;\n\t\t\t\n\t\t\t//int slowed_down = 0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < 1024; iteration++)\n\t\t\t{\n\t\t\t\tif (iteration == max_marches)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\t//This prevents overstepping, and is honestly a pretty clever fix.\n\t\t\t\tfloat distance = min(distance_estimator(pos), last_distance);\n\t\t\t\tlast_distance = distance;\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tepsilon = max(.0000006, .5 * t / float(image_size));\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Uncomment to add aggressive understepping when close to the fractal boundary, which helps to prevent flickering but is a significant performance hit.\n\t\t\t\t/*\n\t\t\t\telse if (last_distance / distance > .9999 && slowed_down == 0)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .125;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (last_distance / distance <= .9999 && slowed_down == 1)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 0;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn final_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\t//Uncomment to use 2x antialiasing.\n\t\t\t//vec3 final_color = (raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size)))) / 4.0;\n\t\t\t\n\t\t\tgl_FragColor = vec4(raymarch(image_plane_center_pos + right_vec * uv.x * aspect_ratio_x + up_vec * uv.y / aspect_ratio_y), 1.0);\n\t\t}\n\t",canvas_width:500,canvas_height:500,use_fullscreen:!0,true_fullscreen:!0,use_fullscreen_button:!0,enter_fullscreen_button_icon_path:"/graphics/general-icons/enter-fullscreen.png",exit_fullscreen_button_icon_path:"/graphics/general-icons/exit-fullscreen.png",switch_fullscreen_callback:bt,mousedown_callback:yt,touchstart_callback:yt,mousedrag_callback:Mt,touchmove_callback:Mt,mouseup_callback:wt,touchend_callback:wt},n=new Wilson(document.querySelector("#output-canvas"),t);n.render.init_uniforms(["aspect_ratio_x","aspect_ratio_y","image_size","camera_pos","image_plane_center_pos","forward_vec","right_vec","up_vec","focal_length","light_pos","draw_sphere","power","c","julia_proportion","rotation_matrix","max_marches","step_factor","max_iterations"]);let e=!1,o=!1,a=!1,i=!1,r=!1,s=!1,c=!1,u=!1,l=0,m=[0,0,0],f=[0,0,0];const _=.94,p=5e-4;let d=1,h=-1,g=4.6601,v=2.272,y=0,M=0,w=0,x=0;const z=.94,b=.005,k=5e-4;let q=500,P=500,C=500,I=4,S=100,F=[],L=[],E=[],T=[],A=[.0828,2.17,1.8925],j=2,N=8,U=[0,0,0],B=[0,0,0],J=[0,0,0],W=0,D=0,G=0,H=0,K=1,O=8,Q=0,R=0,V=0,X=0,Y=0,Z=0,$=0,tt=0,nt=0,et=0,ot=document.querySelector("#resolution-input");ot.addEventListener("input",bt);let at=document.querySelector("#iterations-input");at.addEventListener("input",()=>{I=parseInt(at.value||4),n.gl.uniform1i(n.uniforms.max_iterations,I),window.requestAnimationFrame(ht)});let it=document.querySelector("#view-distance-input");it.addEventListener("input",()=>{S=Math.max(parseInt(it.value||100),32),n.gl.uniform1i(n.uniforms.max_marches,S),window.requestAnimationFrame(ht)}),document.querySelector("#download-button").addEventListener("click",()=>{n.gl.uniform1i(n.uniforms.max_marches,1024),n.gl.uniform1f(n.uniforms.step_factor,12),0===H?n.download_frame("the-mandelbulb.png"):n.download_frame("a-juliabulb.png"),n.gl.uniform1i(n.uniforms.max_marches,S),n.gl.uniform1f(n.uniforms.step_factor,1)});let rt=document.querySelector("#rotation-angle-x-input"),st=document.querySelector("#rotation-angle-y-input"),ct=document.querySelector("#rotation-angle-z-input"),ut=document.querySelector("#c-x-input"),lt=document.querySelector("#c-y-input"),mt=document.querySelector("#c-z-input"),ft=document.querySelector("#power-input"),_t=[rt,st,ct,ut,lt,mt,ft];for(let t=0;t<7;t++)_t[t].addEventListener("input",kt);document.querySelector("#randomize-rotation-button").addEventListener("click",function(t=!0){if(e)return;X=W,Y=D,Z=G,$=2*Math.random()-1-X,tt=2*Math.random()-1-Y,nt=2*Math.random()-1-Z,rt.value=Math.round(1e6*(X+$))/1e6,st.value=Math.round(1e6*(Y+tt))/1e6,ct.value=Math.round(1e6*(Z+nt))/1e6,B[0]=U[0],B[1]=U[1],B[2]=U[2],J[0]=0,J[1]=0,J[2]=0,R=H,V=0,O=N,Q=0,t?qt():(W=X+$,D=Y+tt,G=Z+nt)}),document.querySelector("#randomize-c-button").addEventListener("click",function(t=!0){if(e)return;X=W,Y=D,Z=G,$=0,tt=0,nt=0,B[0]=U[0],B[1]=U[1],B[2]=U[2],J[0]=1.5*Math.random()-.75-B[0],J[1]=1.5*Math.random()-.75-B[1],J[2]=1.5*Math.random()-.75-B[2],ut.value=Math.round(1e6*(B[0]+J[0]))/1e6,lt.value=Math.round(1e6*(B[1]+J[1]))/1e6,mt.value=Math.round(1e6*(B[2]+J[2]))/1e6,R=H,V=0,O=N,Q=0,t?qt():(U[0]=B[0]+J[0],U[1]=B[1]+J[1],U[2]=B[2]+J[2])});let pt=document.querySelector("#switch-bulb-button");pt.addEventListener("click",function(){if(e)return;pt.style.opacity=0,setTimeout(()=>{pt.textContent=0===R?"Switch to Mandelbulb":"Switch to Juliabulb",Page.Load.TextButtons.equalize(),pt.style.opacity=1},Site.opacity_animation_time),0===H?(n.gl.uniform3fv(n.uniforms.c,U),K||n.gl.uniform1i(n.uniforms.draw_sphere,1),setTimeout(()=>{dt.style.opacity=1},Site.opacity_animation_time)):(K=!0,n.gl.uniform1i(n.uniforms.draw_sphere,0),dt.style.opacity=0);V=1-2*(R=H),O=N,Q=0,X=W,Y=D,Z=G,$=0,tt=0,nt=0,B[0]=U[0],B[1]=U[1],B[2]=U[2],J[0]=0,J[1]=0,J[2]=0,qt()});let dt=document.querySelector("#switch-movement-button");function ht(t){let u=t-h;if(h=t,0===u)return;n.render.draw_frame();let b=!1;e&&(!function(){let t=.5*Math.sin(Math.PI*et/120-Math.PI/2)+.5;W=X+$*t,D=Y+tt*t,G=Z+nt*t;let o=[[Math.cos(G),-Math.sin(G),0],[Math.sin(G),Math.cos(G),0],[0,0,1]],a=[[Math.cos(D),0,-Math.sin(D)],[0,1,0],[Math.sin(D),0,Math.cos(D)]],i=[[1,0,0],[0,Math.cos(W),-Math.sin(W)],[0,Math.sin(W),Math.cos(W)]],r=vt(vt(o,a),i);n.gl.uniformMatrix3fv(n.uniforms.rotation_matrix,!1,[r[0][0],r[1][0],r[2][0],r[0][1],r[1][1],r[2][1],r[0][2],r[1][2],r[2][2]]),U[0]=B[0]+J[0]*t,U[1]=B[1]+J[1]*t,U[2]=B[2]+J[2]*t,n.gl.uniform3fv(n.uniforms.c,U),N=O+Q*t,n.gl.uniform1f(n.uniforms.power,N),H=R+V*t,n.gl.uniform1f(n.uniforms.julia_proportion,H),121==++et&&(e=!1)}(),b=!0),o||a||i||r||s||c?(!function(){if(l=Math.min(Math.max(1e-6,d/20),.02),K){let t=[...A];o||s?(A[0]+=l*L[0],A[1]+=l*L[1],A[2]+=l*L[2]):(a||c)&&(A[0]-=l*L[0],A[1]-=l*L[1],A[2]-=l*L[2]),i?(A[0]+=l*E[0]/j,A[1]+=l*E[1]/j,A[2]+=l*E[2]/j):r&&(A[0]-=l*E[0]/j,A[1]-=l*E[1]/j,A[2]-=l*E[2]/j),m[0]=A[0]-t[0],m[1]=A[1]-t[1],m[2]=A[2]-t[2]}else{let t=[...U];o||s?(U[0]+=.5*l*L[0],U[1]+=.5*l*L[1],U[2]+=.5*l*L[2]):(a||c)&&(U[0]-=.5*l*L[0],U[1]-=.5*l*L[1],U[2]-=.5*l*L[2]),i?(U[0]+=.5*l*E[0]/j,U[1]+=.5*l*E[0]/j,U[2]+=.5*l*E[0]/j):r&&(U[0]-=.5*l*E[0]/j,U[1]-=.5*l*E[0]/j,U[2]-=.5*l*E[0]/j),ut.value=Math.round(1e6*U[0])/1e6,lt.value=Math.round(1e6*U[1])/1e6,mt.value=Math.round(1e6*U[2])/1e6,n.gl.uniform3fv(n.uniforms.c,U),m[0]=U[0]-t[0],m[1]=U[1]-t[1],m[2]=U[2]-t[2]}gt()}(),b=!0):u>=50&&(y=0,M=0,w=0,x=0,s=!1,c=!1,f[0]=0,f[1]=0,f[2]=0,m[0]=0,m[1]=0,m[2]=0),0===w&&0===x||(v+=x,(g+=w)>=2*Math.PI?g-=2*Math.PI:g<0&&(g+=2*Math.PI),v>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),w*=z,x*=z,Math.sqrt(w*w+x*x)<k&&(w=0,x=0),gt(),b=!0),0===f[0]&&0===f[1]&&0===f[2]||(K?(A[0]+=f[0],A[1]+=f[1],A[2]+=f[2]):(U[0]+=f[0],U[1]+=f[1],U[2]+=f[2],ut.value=Math.round(1e6*U[0])/1e6,lt.value=Math.round(1e6*U[1])/1e6,mt.value=Math.round(1e6*U[2])/1e6,n.gl.uniform3fv(n.uniforms.c,U)),f[0]*=_,f[1]*=_,f[2]*=_,Math.sqrt(f[0]*f[0]+f[1]*f[1]+f[2]*f[2])<p*l&&(f[0]=0,f[1]=0,f[2]=0),gt(),b=!0),b&&window.requestAnimationFrame(ht)}function gt(){var t,e;L=[Math.cos(g)*Math.sin(v),Math.sin(g)*Math.sin(v),Math.cos(v)],E=function(t){let n=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/n,t[1]/n,t[2]/n]}([L[1],-L[0],0]),e=L,T=[(t=E)[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]],d=function(t,n,e){let o=[t,n,e],a=0,i=1;for(let c=0;c<4*I&&!((a=Math.sqrt((s=o,(r=o)[0]*s[0]+r[1]*s[1]+r[2]*s[2])))>16);c++){let r=Math.acos(o[2]/a),s=Math.atan2(o[1],o[0]);i=Math.pow(a,N-1)*N*i+1,r*=N,s*=N;let c=Math.pow(a,N);o[0]=c*Math.sin(r)*Math.cos(s)+((1-H)*t+H*U[0]),o[1]=c*Math.sin(r)*Math.sin(s)+((1-H)*n+H*U[1]),o[2]=c*Math.cos(r)+((1-H)*e+H*U[2]);let u=o[0],l=o[1],m=o[2],f=[[Math.cos(G),-Math.sin(G),0],[Math.sin(G),Math.cos(G),0],[0,0,1]],_=[[Math.cos(D),0,-Math.sin(D)],[0,1,0],[Math.sin(D),0,Math.cos(D)]],p=[[1,0,0],[0,Math.cos(W),-Math.sin(W)],[0,Math.sin(W),Math.cos(W)]],d=vt(vt(f,_),p);o[0]=d[0][0]*u+d[0][1]*l+d[0][2]*m,o[1]=d[1][0]*u+d[1][1]*l+d[1][2]*m,o[2]=d[2][0]*u+d[2][1]*l+d[2][2]*m}var r,s;return.5*Math.log(a)*a/i}(A[0],A[1],A[2]),j=d/2,E[0]*=j/2,E[1]*=j/2,T[0]*=j/2,T[1]*=j/2,T[2]*=j/2,F=[A[0]+j*L[0],A[1]+j*L[1],A[2]+j*L[2]],n.gl.uniform3fv(n.uniforms.camera_pos,A),n.gl.uniform3fv(n.uniforms.image_plane_center_pos,F),n.gl.uniform3fv(n.uniforms.forward_vec,L),n.gl.uniform3fv(n.uniforms.right_vec,E),n.gl.uniform3fv(n.uniforms.up_vec,T),n.gl.uniform1f(n.uniforms.focal_length,j)}function vt(t,n){return[[t[0][0]*n[0][0]+t[0][1]*n[1][0]+t[0][2]*n[2][0],t[0][0]*n[0][1]+t[0][1]*n[1][1]+t[0][2]*n[2][1],t[0][0]*n[0][2]+t[0][1]*n[1][2]+t[0][2]*n[2][2]],[t[1][0]*n[0][0]+t[1][1]*n[1][0]+t[1][2]*n[2][0],t[1][0]*n[0][1]+t[1][1]*n[1][1]+t[1][2]*n[2][1],t[1][0]*n[0][2]+t[1][1]*n[1][2]+t[1][2]*n[2][2]],[t[2][0]*n[0][0]+t[2][1]*n[1][0]+t[2][2]*n[2][0],t[2][0]*n[0][1]+t[2][1]*n[1][1]+t[2][2]*n[2][1],t[2][0]*n[0][2]+t[2][1]*n[1][2]+t[2][2]*n[2][2]]]}function yt(t,n,e){y=0,M=0,w=0,x=0,"touchstart"===e.type&&(2===e.touches.length?(s=!0,c=!1,f[0]=0,f[1]=0,f[2]=0,m[0]=0,m[1]=0,m[2]=0,window.requestAnimationFrame(ht)):3===e.touches.length?(s=!1,c=!0,f[0]=0,f[1]=0,f[2]=0,m[0]=0,m[1]=0,m[2]=0,window.requestAnimationFrame(ht)):(s=!1,c=!1),u=!1)}function Mt(t,n,e,o,a){"touchmove"===a.type&&u?u=!1:(g+=e*Math.PI/2,y=e*Math.PI/2,g>=2*Math.PI?g-=2*Math.PI:g<0&&(g+=2*Math.PI),v+=o*Math.PI/2,M=o*Math.PI/2,v>Math.PI-.01?v=Math.PI-.01:v<.01&&(v=.01),gt(),window.requestAnimationFrame(ht))}function wt(t,n,e){"touchend"===e.type&&(s=!1,c=!1,u=!0,0===f[0]&&0===f[1]&&0===f[2]&&(f[0]=m[0],f[1]=m[1],f[2]=m[2],m[0]=0,m[1]=0,m[2]=0)),"touchend"===e.type&&e.touches,(0===length||"mouseup"===e.type)&&Math.sqrt(y*y+M*M)>=b&&(w=y,x=M)}function xt(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode||(m=[0,0,0],f=[0,0,0],87===t.keyCode?o=!0:83===t.keyCode&&(a=!0),68===t.keyCode?i=!0:65===t.keyCode&&(r=!0),window.requestAnimationFrame(ht))}function zt(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode||(0===f[0]&&0===f[1]&&0===f[2]&&(f[0]=m[0],f[1]=m[1],f[2]=m[2],m[0]=0,m[1]=0,m[2]=0),87===t.keyCode?o=!1:83===t.keyCode&&(a=!1),68===t.keyCode?i=!1:65===t.keyCode&&(r=!1))}function bt(){q=Math.max(100,parseInt(ot.value||500)),n.fullscreen.currently_fullscreen?Page.Layout.aspect_ratio>=1?(P=q,C=Math.floor(q/Page.Layout.aspect_ratio)):(P=Math.floor(q*Page.Layout.aspect_ratio),C=q):(P=q,C=q),n.change_canvas_size(P,C),P>=C?(n.gl.uniform1f(n.uniforms.aspect_ratio_x,P/C),n.gl.uniform1f(n.uniforms.aspect_ratio_y,1)):(n.gl.uniform1f(n.uniforms.aspect_ratio_x,1),n.gl.uniform1f(n.uniforms.aspect_ratio_y,P/C)),n.gl.uniform1i(n.uniforms.image_size,q),window.requestAnimationFrame(ht)}function kt(){X=W,Y=D,Z=G,$=(parseFloat(rt.value||0)||0)-X,tt=(parseFloat(st.value||0)||0)-Y,nt=(parseFloat(ct.value||0)||0)-Z,B[0]=U[0],B[1]=U[1],B[2]=U[2],J[0]=(parseFloat(ut.value||0)||0)-B[0],J[1]=(parseFloat(lt.value||0)||0)-B[1],J[2]=(parseFloat(mt.value||0)||0)-B[2],O=N,Q=(parseFloat(ft.value||0)||0)-O,R=H,V=0,qt()}function qt(){e||(e=!0,et=0,window.requestAnimationFrame(ht))}dt.addEventListener("click",function(){K=!K,dt.style.opacity=0,setTimeout(()=>{dt.textContent=K?"Change Juliabulb":"Move Camera",Page.Load.TextButtons.equalize(),dt.style.opacity=1},Site.opacity_animation_time),K?n.gl.uniform1i(n.uniforms.draw_sphere,0):n.gl.uniform1i(n.uniforms.draw_sphere,1)}),dt.style.opacity=0,Page.Load.TextButtons.equalize(),gt(),P>=C?(n.gl.uniform1f(n.uniforms.aspect_ratio_x,P/C),n.gl.uniform1f(n.uniforms.aspect_ratio_y,1)):(n.gl.uniform1f(n.uniforms.aspect_ratio_x,1),n.gl.uniform1f(n.uniforms.aspect_ratio_y,P/C)),n.gl.uniform1i(n.uniforms.image_size,q),n.gl.uniform3fv(n.uniforms.camera_pos,A),n.gl.uniform3fv(n.uniforms.image_plane_center_pos,F),n.gl.uniform3fv(n.uniforms.light_pos,[0,0,5]),n.gl.uniform3fv(n.uniforms.forward_vec,L),n.gl.uniform3fv(n.uniforms.right_vec,E),n.gl.uniform3fv(n.uniforms.up_vec,T),n.gl.uniform1f(n.uniforms.focal_length,j),n.gl.uniform1i(n.uniforms.draw_sphere,0),n.gl.uniform1f(n.uniforms.power,8),n.gl.uniform3fv(n.uniforms.c,U),n.gl.uniform1f(n.uniforms.julia_proportion,0),n.gl.uniformMatrix3fv(n.uniforms.rotation_matrix,!1,[1,0,0,0,1,0,0,0,1]),n.gl.uniform1i(n.uniforms.max_marches,S),n.gl.uniform1f(n.uniforms.step_factor,1),n.gl.uniform1i(n.uniforms.max_iterations,I),window.requestAnimationFrame(ht),document.documentElement.addEventListener("keydown",xt),Page.temporary_handlers.keydown.push(xt),document.documentElement.addEventListener("keyup",zt),Page.temporary_handlers.keydown.push(zt)}();