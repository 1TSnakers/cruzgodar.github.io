!function(){"use strict";let t=document.querySelector("#output-canvas").getContext("webgl"),e=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight),n=!1,o=!1,a=!1,i=0,r=0,c=0,u=!1,s=!1,m=!1,l=!1,_=!1,f=!1,p=!1,d=!1,h=!0,v=0,g=1,y=4.6601,w=2.272,M=500,b=500,S=500,q=500,x=1500,z=32,A=[],L=[],k=[],P=[],C=[.0828,2.17,1.8925],E=8,I=[0,0,0],F=0,U=0,T=0,R=0,D=8,j=0,Y=0,H=0,N=0,X=0,B=0,W=0,G=0,J=0,O=2,V=[0,0,5],$=0;document.querySelector("#output-canvas").setAttribute("width",b),document.querySelector("#output-canvas").setAttribute("height",S),document.querySelector("#dim-input").addEventListener("input",function(){rt(0)}),document.querySelector("#generate-high-res-image-button").addEventListener("click",function(){let e=M;M=parseInt(document.querySelector("#high-res-dim-input").value||2e3),document.querySelector("#output-canvas").setAttribute("width",M),document.querySelector("#output-canvas").setAttribute("height",M),t.viewport(0,0,M,M),nt();let n=document.createElement("a");n.download=0===R?"the-mandelbulb.png":"a-juliabulb.png";n.href=document.querySelector("#output-canvas").toDataURL(),n.click(),n.remove(),M=e,document.querySelector("#output-canvas").setAttribute("width",M),document.querySelector("#output-canvas").setAttribute("height",M),t.viewport(0,0,M,M),nt()});let K=document.querySelectorAll("#power-input, #rotation-angle-x-input, #rotation-angle-y-input, #rotation-angle-z-input");for(let t=0;t<K.length;t++)K[t].addEventListener("input",ct);document.querySelector("#randomize-parameters-button").addEventListener("click",function(t=!0){if(o)return;M!==q&&rt(M=q);N=F,X=U,B=T,W=2*Math.random()-1-N,G=2*Math.random()-1-X,J=2*Math.random()-1-B,document.querySelector("#rotation-angle-x-input").value=Math.round(1e6*(N+W))/1e6,document.querySelector("#rotation-angle-y-input").value=Math.round(1e6*(X+G))/1e6,document.querySelector("#rotation-angle-z-input").value=Math.round(1e6*(B+J))/1e6,Y=R,H=0,D=E,j=0,ut()}),document.querySelector("#switch-bulb-button").addEventListener("click",function(){M!==q&&rt(M=q);if(o)return;document.querySelector("#switch-bulb-button").style.opacity=0,setTimeout(function(){document.querySelector("#switch-bulb-button").textContent=0===Y?"Switch to Mandelbulb":"Switch to Juliabulb",document.querySelector("#switch-bulb-button").style.opacity=1},300),0===R?(t.uniform3fv(tt.c_uniform,I),h||t.uniform1i(tt.draw_sphere_uniform,1),setTimeout(function(){document.querySelector("#switch-movement-button").style.opacity=1},300)):(h=!0,t.uniform1i(tt.draw_sphere_uniform,0),document.querySelector("#switch-movement-button").style.opacity=0);H=1-2*(Y=R),D=E,j=0,N=F,X=U,B=T,W=0,G=0,J=0,ut()}),document.querySelector("#switch-movement-button").addEventListener("click",function(){h=!h,document.querySelector("#switch-movement-button").style.opacity=0,setTimeout(function(){document.querySelector("#switch-movement-button").textContent=h?"Change Juliabulb":"Move Camera",document.querySelector("#switch-movement-button").style.opacity=1},300),h?t.uniform1i(tt.draw_sphere_uniform,0):t.uniform1i(tt.draw_sphere_uniform,1)}),window.addEventListener("resize",it),setTimeout(it,500),applet_canvases_to_resize=[document.querySelector("#output-canvas")],applet_canvas_resize_callback=function(){canvas_is_fullscreen?aspect_ratio>=1?(b=M,S=Math.floor(M/aspect_ratio)):(b=Math.floor(M*aspect_ratio),S=M):(b=M,S=M),e=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight),document.querySelector("#output-canvas").setAttribute("width",b),document.querySelector("#output-canvas").setAttribute("height",S),b>=S?(t.uniform1f(tt.aspect_ratio_x_uniform,b/S),t.uniform1f(tt.aspect_ratio_y_uniform,1)):(t.uniform1f(tt.aspect_ratio_x_uniform,1),t.uniform1f(tt.aspect_ratio_y_uniform,b/S)),t.uniform1i(tt.image_size_uniform,M),t.viewport(0,0,b,S),it(),window.requestAnimationFrame(nt)},applet_canvas_true_fullscreen=!0,set_up_canvas_resizer(),document.querySelector("#output-canvas").addEventListener("mousedown",function(t){a=!0,r=t.clientX,c=t.clientY,n||o||(n=!0,i=Date.now(),rt(M=q),window.requestAnimationFrame(nt))}),document.querySelector("#output-canvas").addEventListener("mousemove",function(t){if(a){if(t.preventDefault(),!h)return;let n=t.clientX,o=t.clientY,a=n-r,i=o-c;y+=a/e*Math.PI,w-=i/e*Math.PI,y>=2*Math.PI?y-=2*Math.PI:y<0&&(y+=2*Math.PI),w>Math.PI-.01?w=Math.PI-.01:w<.01&&(w=.01),r=n,c=o,ot()}}),document.querySelector("#output-canvas").addEventListener("mouseup",function(t){!(n=(a=!1)||u||s||m||l||_||f||p||d)&&Date.now()-i>300&&(rt(M=x),window.requestAnimationFrame(nt))}),document.querySelector("#output-canvas").addEventListener("touchstart",function(t){a=!0,r=t.touches[0].clientX,c=t.touches[0].clientY,2===t.touches.length?(p=!0,d=!1):3===t.touches.length&&(d=!0,p=!1),n||o||(n=!0,i=Date.now(),rt(M=q),window.requestAnimationFrame(nt))}),document.querySelector("#output-canvas").addEventListener("touchmove",function(t){if(t.preventDefault(),!h)return;let n=t.touches[0].clientX,o=t.touches[0].clientY,a=n-r,i=o-c;Math.abs(a)>20||Math.abs(i)>20||(y+=a/e*Math.PI,w-=i/e*Math.PI,y>=2*Math.PI?y-=2*Math.PI:y<0&&(y+=2*Math.PI),w>Math.PI-.01?w=Math.PI-.01:w<.01&&(w=.01),r=n,c=o,ot())}),document.querySelector("#output-canvas").addEventListener("touchend",function(t){2===t.touches.length?(p=!0,d=!1):3===t.touches.length?(d=!0,p=!1):(p=!1,d=!1,0===t.touches.length&&(a=!1)),!(n=a||u||s||m||l||_||f||p||d)&&Date.now()-i>300&&(rt(M=x),window.requestAnimationFrame(nt))}),document.documentElement.addEventListener("keydown",function(t){"INPUT"===document.activeElement.tagName||87!==t.keyCode&&83!==t.keyCode&&68!==t.keyCode&&65!==t.keyCode&&16!==t.keyCode&&32!==t.keyCode||(87===t.keyCode?u=!0:83===t.keyCode&&(s=!0),68===t.keyCode?m=!0:65===t.keyCode?l=!0:32===t.keyCode?_=!0:16===t.keyCode&&(f=!0),n||o||(n=!0,i=Date.now(),rt(M=q),window.requestAnimationFrame(nt)))}),document.documentElement.addEventListener("keyup",function(t){87===t.keyCode?u=!1:83===t.keyCode&&(s=!1),68===t.keyCode?m=!1:65===t.keyCode?l=!1:32===t.keyCode?_=!1:16===t.keyCode&&(f=!1),!(n=a||u||s||m||l||_||f||p||d)&&Date.now()-i>300&&(rt(M=x),window.requestAnimationFrame(nt))}),setTimeout(function(){let e=et(t,t.VERTEX_SHADER,Q),n=et(t,t.FRAGMENT_SHADER,Z);tt=t.createProgram(),t.attachShader(tt,e),t.attachShader(tt,n),t.linkProgram(tt),t.getProgramParameter(tt,t.LINK_STATUS)||(console.log(`Couldn't link shader program: ${t.getShaderInfoLog(shader)}`),t.deleteProgram(tt));t.useProgram(tt);let o=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,0,-1,1,0,1,-1,0,1,1,0]),t.STATIC_DRAW),tt.position_attribute=t.getAttribLocation(tt,"position"),t.enableVertexAttribArray(tt.position_attribute),t.vertexAttribPointer(tt.position_attribute,3,t.FLOAT,!1,0,0),ot(),tt.aspect_ratio_x_uniform=t.getUniformLocation(tt,"aspect_ratio_x"),tt.aspect_ratio_y_uniform=t.getUniformLocation(tt,"aspect_ratio_y"),tt.image_size_uniform=t.getUniformLocation(tt,"image_size"),tt.camera_pos_uniform=t.getUniformLocation(tt,"camera_pos"),tt.image_plane_center_pos_uniform=t.getUniformLocation(tt,"image_plane_center_pos"),tt.forward_vec_uniform=t.getUniformLocation(tt,"forward_vec"),tt.right_vec_uniform=t.getUniformLocation(tt,"right_vec"),tt.up_vec_uniform=t.getUniformLocation(tt,"up_vec"),tt.focal_length_uniform=t.getUniformLocation(tt,"focal_length"),tt.light_pos_uniform=t.getUniformLocation(tt,"light_pos"),tt.power_uniform=t.getUniformLocation(tt,"power"),tt.c_uniform=t.getUniformLocation(tt,"c"),tt.rotation_matrix_uniform=t.getUniformLocation(tt,"rotation_matrix"),tt.julia_proportion_uniform=t.getUniformLocation(tt,"julia_proportion"),tt.draw_sphere_uniform=t.getUniformLocation(tt,"draw_sphere"),b>=S?(t.uniform1f(tt.aspect_ratio_x_uniform,b/S),t.uniform1f(tt.aspect_ratio_y_uniform,1)):(t.uniform1f(tt.aspect_ratio_x_uniform,1),t.uniform1f(tt.aspect_ratio_y_uniform,b/S));t.uniform1i(tt.image_size_uniform,M),t.uniform3fv(tt.camera_pos_uniform,C),t.uniform3fv(tt.image_plane_center_pos_uniform,A),t.uniform3fv(tt.forward_vec_uniform,L),t.uniform3fv(tt.right_vec_uniform,k),t.uniform3fv(tt.up_vec_uniform,P),t.uniform1f(tt.focal_length_uniform,O),t.uniformMatrix3fv(tt.rotation_matrix_uniform,!1,[1,0,0,0,1,0,0,0,1]),t.uniform3fv(tt.light_pos_uniform,V),t.uniform1f(tt.power_uniform,E),t.uniform3fv(tt.c_uniform,I),t.uniform1f(tt.julia_proportion_uniform,R),t.uniform1i(tt.draw_sphere_uniform,0),t.viewport(0,0,b,S),window.requestAnimationFrame(nt)},500);const Q="\n\t\tattribute vec3 position;\n\t\tvarying vec2 uv;\n\n\t\tvoid main(void)\n\t\t{\n\t\t\tgl_Position = vec4(position, 1.0);\n\n\t\t\t//Interpolate quad coordinates in the fragment shader.\n\t\t\tuv = position.xy;\n\t\t}\n\t",Z="\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio_x;\n\t\tuniform float aspect_ratio_y;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 2.0;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\tuniform int draw_sphere;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 1000.0;\n\t\tconst int max_marches = 64; //Change to 512 to eliminate flickering in animations\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .2;\n\t\tconst int num_iterations = 32;\n\t\t\n\t\tuniform float power;\n\t\tuniform vec3 c;\n\t\tuniform float julia_proportion;\n\t\t\n\t\tvec3 color;\n\t\t\n\t\t\n\t\t\n\t\tuniform mat3 rotation_matrix;\n\t\t\n\t\t\n\t\t\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec3 z = pos;\n\t\t\t\n\t\t\tfloat r = length(z);\n\t\t\tfloat dr = 1.0;\n\t\t\t\n\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < num_iterations; iteration++)\n\t\t\t{\n\t\t\t\tif (r > 16.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat theta = acos(z.z / r);\n\t\t\t\t\n\t\t\t\tfloat phi = atan(z.y, z.x);\n\t\t\t\t\n\t\t\t\tdr = pow(r, power - 1.0) * power * dr + 1.0;\n\t\t\t\t\n\t\t\t\ttheta *= power;\n\t\t\t\t\n\t\t\t\tphi *= power;\n\t\t\t\t\n\t\t\t\tz = pow(r, power) * vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\t\t\t\n\t\t\t\tz += mix(pos, c, julia_proportion);\n\t\t\t\t\n\t\t\t\tz = rotation_matrix * z;\n\t\t\t\t\n\t\t\t\tr = length(z);\n\t\t\t\t\n\t\t\t\tcolor = mix(color, abs(z / r), color_scale);\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\tcolor /= max(max(color.x, color.y), color.z);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfloat distance_1 = .5 * log(r) * r / dr;\n\t\t\tfloat distance_2 = length(pos - c) - .05;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (distance_2 < distance_1 && draw_sphere == 1)\n\t\t\t{\n\t\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\t\t\n\t\t\t\treturn distance_2;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn distance_1;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat base = distance_estimator(pos);\n\t\t\t\n\t\t\tfloat x_step = distance_estimator(pos + vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step = distance_estimator(pos + vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step = distance_estimator(pos + vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step - base, y_step - base, z_step - base));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat dot_product = dot(surface_normal, light_direction);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot_product, -.25 * dot_product);\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tcolor = color * light_intensity * max(1.0 - float(iteration) / float(max_marches), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\tfloat distance_from_camera = distance(pos, camera_pos);\n\t\t\t\n\t\t\tfloat fog_amount = 1.0 - exp(-distance_from_camera * fog_scaling);\n\t\t\t\n\t\t\treturn mix(color, fog_color, fog_amount);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 raymarch(vec3 start_pos)\n\t\t{\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = 0.0;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\tfloat last_distance = 1000.0;\n\t\t\t\n\t\t\t//int slowed_down = 0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < max_marches; iteration++)\n\t\t\t{\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\t//This prevents overstepping, and is honestly a pretty clever fix.\n\t\t\t\tfloat distance = min(distance_estimator(pos), last_distance);\n\t\t\t\tlast_distance = distance;\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tif (distance / float(image_size) * 1.5 > epsilon)\n\t\t\t\t{\n\t\t\t\t\tepsilon = distance / float(image_size) * 1.5;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Uncomment to add aggressive understepping when close to the fractal boundary, which helps to prevent flickering but is a significant performance hit.\n\t\t\t\t/*\n\t\t\t\telse if (last_distance / distance > .9999 && slowed_down == 0)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .125;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (last_distance / distance <= .9999 && slowed_down == 1)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 0;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn final_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\t//Uncomment to use 2x antialiasing.\n\t\t\t//vec3 final_color = (raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio + .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x * aspect_ratio - .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size)))) / 4.0;\n\t\t\t\n\t\t\tvec3 final_color = raymarch(image_plane_center_pos + right_vec * uv.x * aspect_ratio_x + up_vec * uv.y / aspect_ratio_y);\n\t\t\t\t\n\t\t\tgl_FragColor = vec4(final_color.xyz, 1.0);\n\t\t}\n\t";let tt=null;function et(t,e,n){let o=t.createShader(e);return t.shaderSource(o,n),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)||(console.log(`Couldn't load shader: ${t.getProgramInfoLog(shaderProgram)}`),t.deleteShader(o)),o}function nt(){t.drawArrays(t.TRIANGLE_STRIP,0,4),o?(!function(){let e=.5*Math.sin(Math.PI*$/120-Math.PI/2)+.5;E=D+j*e,R=Y+H*e,F=N+W*e,U=X+G*e,T=B+J*e;let n=[[Math.cos(T),-Math.sin(T),0],[Math.sin(T),Math.cos(T),0],[0,0,1]],a=[[Math.cos(U),0,-Math.sin(U)],[0,1,0],[Math.sin(U),0,Math.cos(U)]],i=[[1,0,0],[0,Math.cos(F),-Math.sin(F)],[0,Math.sin(F),Math.cos(F)]],r=at(at(n,a),i);t.uniformMatrix3fv(tt.rotation_matrix_uniform,!1,[r[0][0],r[1][0],r[2][0],r[0][1],r[1][1],r[2][1],r[0][2],r[1][2],r[2][2]]),t.uniform1f(tt.power_uniform,E),t.uniform1f(tt.julia_proportion_uniform,R),121==++$&&(o=!1)}(),window.requestAnimationFrame(nt)):n&&((u||s||m||l||_||f||p||d)&&((v=g/20)<1e-6&&(v=1e-6),v>.02&&(v=.02),h?(u||p?(C[0]+=v*L[0],C[1]+=v*L[1],C[2]+=v*L[2]):(s||d)&&(C[0]-=v*L[0],C[1]-=v*L[1],C[2]-=v*L[2]),m?(C[0]+=v*k[0]/O,C[1]+=v*k[1]/O,C[2]+=v*k[2]/O):l&&(C[0]-=v*k[0]/O,C[1]-=v*k[1]/O,C[2]-=v*k[2]/O),_?C[2]+=v:f&&(C[2]-=v)):(u||p?(I[0]+=.2*v*L[0],I[1]+=.2*v*L[1],I[2]+=.2*v*L[2]):(s||d)&&(I[0]-=.2*v*L[0],I[1]-=.2*v*L[1],I[2]-=.2*v*L[2]),m?(I[0]+=.2*v*k[0]/O,I[1]+=.2*v*k[1]/O,I[2]+=.2*v*k[2]/O):l&&(I[0]-=.2*v*k[0]/O,I[1]-=.2*v*k[1]/O,I[2]-=.2*v*k[2]/O),_?I[2]+=.2*v:f&&(I[2]-=.2*v),t.uniform3fv(tt.c_uniform,I)),ot()),window.requestAnimationFrame(nt))}function ot(){var e,n;L=[Math.cos(y)*Math.sin(w),Math.sin(y)*Math.sin(w),Math.cos(w)],k=function(t){let e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/e,t[1]/e,t[2]/e]}([L[1],-L[0],0]),n=L,P=[(e=k)[1]*n[2]-e[2]*n[1],e[2]*n[0]-e[0]*n[2],e[0]*n[1]-e[1]*n[0]],g=function(t,e,n){let o=[t,e,n],a=0,i=1;for(let u=0;u<z&&!((a=Math.sqrt((c=o,(r=o)[0]*c[0]+r[1]*c[1]+r[2]*c[2])))>16);u++){let r=Math.acos(o[2]/a),c=Math.atan2(o[1],o[0]);i=Math.pow(a,E-1)*E*i+1,r*=E,c*=E;let u=Math.pow(a,E);o[0]=u*Math.sin(r)*Math.cos(c)+((1-R)*t+R*I[0]),o[1]=u*Math.sin(r)*Math.sin(c)+((1-R)*e+R*I[1]),o[2]=u*Math.cos(r)+((1-R)*n+R*I[2]);let s=o[0],m=o[1],l=o[2],_=[[Math.cos(T),-Math.sin(T),0],[Math.sin(T),Math.cos(T),0],[0,0,1]],f=[[Math.cos(U),0,-Math.sin(U)],[0,1,0],[Math.sin(U),0,Math.cos(U)]],p=[[1,0,0],[0,Math.cos(F),-Math.sin(F)],[0,Math.sin(F),Math.cos(F)]],d=at(at(_,f),p);o[0]=d[0][0]*s+d[0][1]*m+d[0][2]*l,o[1]=d[1][0]*s+d[1][1]*m+d[1][2]*l,o[2]=d[2][0]*s+d[2][1]*m+d[2][2]*l}var r,c;return Math.min(.5*Math.log(a)*a/i,Math.sqrt((t-I[0])*(t-I[0])+(e-I[1])*(e-I[1])+(1-I[2])*(n-I[2]))-.05)}(C[0],C[1],C[2]),O=g/2,k[0]*=O/2,k[1]*=O/2,P[0]*=O/2,P[1]*=O/2,P[2]*=O/2,A=[C[0]+O*L[0],C[1]+O*L[1],C[2]+O*L[2]],t.uniform3fv(tt.camera_pos_uniform,C),t.uniform3fv(tt.image_plane_center_pos_uniform,A),t.uniform3fv(tt.forward_vec_uniform,L),t.uniform3fv(tt.right_vec_uniform,k),t.uniform3fv(tt.up_vec_uniform,P),t.uniform1f(tt.focal_length_uniform,O)}function at(t,e){return[[t[0][0]*e[0][0]+t[0][1]*e[1][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][1]*e[1][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][1]*e[1][2]+t[0][2]*e[2][2]],[t[1][0]*e[0][0]+t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][0]*e[0][1]+t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][0]*e[0][2]+t[1][1]*e[1][2]+t[1][2]*e[2][2]],[t[2][0]*e[0][0]+t[2][1]*e[1][0]+t[2][2]*e[2][0],t[2][0]*e[0][1]+t[2][1]*e[1][1]+t[2][2]*e[2][1],t[2][0]*e[0][2]+t[2][1]*e[1][2]+t[2][2]*e[2][2]]]}function it(){e=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight)}function rt(e=0){0===e?((M=parseInt(document.querySelector("#dim-input").value||500))<200&&(M=200),M>2e3&&(M=2e3),q=M,x=3*M):M=e,canvas_is_fullscreen&&(aspect_ratio>=1?(b=M,S=Math.floor(M/aspect_ratio)):(b=Math.floor(M*aspect_ratio),S=M)),document.querySelector("#output-canvas").setAttribute("width",b),document.querySelector("#output-canvas").setAttribute("height",S),b>=S?(t.uniform1f(tt.aspect_ratio_x_uniform,b/S),t.uniform1f(tt.aspect_ratio_y_uniform,1)):(t.uniform1f(tt.aspect_ratio_x_uniform,1),t.uniform1f(tt.aspect_ratio_y_uniform,b/S)),t.uniform1i(tt.image_size_uniform,M),t.viewport(0,0,b,S),window.requestAnimationFrame(nt)}function ct(){M!==q&&rt(M=q),D=E,j=(parseFloat(document.querySelector("#power-input").value||8)||8)-D,D+j<1&&(j=0),N=F,X=U,B=T,W=parseFloat(document.querySelector("#rotation-angle-x-input").value||0)||0-N,G=parseFloat(document.querySelector("#rotation-angle-y-input").value||0)||0-X,J=parseFloat(document.querySelector("#rotation-angle-z-input").value||0)||0-B,Y=R,H=0,ut()}function ut(){o=!0,$=0,window.requestAnimationFrame(nt)}}();