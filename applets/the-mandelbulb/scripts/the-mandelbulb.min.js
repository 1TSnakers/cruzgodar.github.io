!function(){"use strict";let t=document.querySelector("#output-canvas").getContext("webgl"),e=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight),n=!1,o=!1,a=!1,i=0,r=0,c=!1,u=!1,s=!1,l=!1,m=!1,f=!1,_=0,p=1,d=4.6601,h=2.272,v=500,g=500,y=500,w=32,M=[],b=[],S=[],q=[],z=[.0828,2.17,1.8925],A=8,x=[0,0,0],L=0,P=0,E=0,I=0,k=8,F=0,U=0,T=0,C=0,R=0,j=0,D=0,Y=0,H=0,N=2,X=[0,0,5],B=0;document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",y),document.querySelector("#dim-input").addEventListener("input",function(){(v=parseInt(document.querySelector("#dim-input").value||500))<200&&(v=200);v>2e3&&(v=2e3);canvas_is_fullscreen&&(aspect_ratio>=1?(g=v,y=Math.floor(v/aspect_ratio)):(g=Math.floor(v*aspect_ratio),y=v));document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",y),t.uniform1f(V.aspect_ratio_uniform,g/y),t.uniform1i(V.image_size_uniform,v),t.viewport(0,0,g,y),window.requestAnimationFrame(J)}),document.querySelector("#generate-high-res-image-button").addEventListener("click",function(){let e=v;v=parseInt(document.querySelector("#high-res-dim-input").value||2e3),document.querySelector("#output-canvas").setAttribute("width",v),document.querySelector("#output-canvas").setAttribute("height",v),t.viewport(0,0,v,v),J();let n=document.createElement("a");n.download=0===I?"the-mandelbulb.png":"a-juliabulb.png";n.href=document.querySelector("#output-canvas").toDataURL(),n.click(),n.remove(),v=e,document.querySelector("#output-canvas").setAttribute("width",v),document.querySelector("#output-canvas").setAttribute("height",v),t.viewport(0,0,v,v),J()});let W=document.querySelectorAll("#power-input, #rotation-angle-x-input, #rotation-angle-y-input, #rotation-angle-z-input");for(let t=0;t<W.length;t++)W[t].addEventListener("input",tt);document.querySelector("#randomize-parameters-button").addEventListener("click",function(t=!0){if(o)return;C=L,R=P,j=E,D=2*Math.random()-1-C,Y=2*Math.random()-1-R,H=2*Math.random()-1-j,document.querySelector("#rotation-angle-x-input").value=Math.round(1e6*(C+D))/1e6,document.querySelector("#rotation-angle-y-input").value=Math.round(1e6*(R+Y))/1e6,document.querySelector("#rotation-angle-z-input").value=Math.round(1e6*(j+H))/1e6,U=I,T=0,k=A,F=0,et()}),document.querySelector("#switch-bulb-button").addEventListener("click",function(){if(o)return;document.querySelector("#switch-bulb-button").style.opacity=0,setTimeout(function(){document.querySelector("#switch-bulb-button").textContent=0===U?"Switch to Mandelbulb":"Switch to Juliabulb",document.querySelector("#switch-bulb-button").style.opacity=1},300),0===I&&(x=[...z],t.uniform3fv(V.c_uniform,x));T=1-2*(U=I),k=A,F=0,C=L,R=P,j=E,D=0,Y=0,H=0,et()}),window.addEventListener("resize",Z),setTimeout(Z,500),applet_canvases_to_resize=[document.querySelector("#output-canvas")],applet_canvas_resize_callback=function(){canvas_is_fullscreen?aspect_ratio>=1?(g=v,y=Math.floor(v/aspect_ratio)):(g=Math.floor(v*aspect_ratio),y=v):(g=v,y=v),e=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight),document.querySelector("#output-canvas").setAttribute("width",g),document.querySelector("#output-canvas").setAttribute("height",y),t.uniform1f(V.aspect_ratio_uniform,g/y),t.uniform1i(V.image_size_uniform,v),t.viewport(0,0,g,y),Z(),window.requestAnimationFrame(J)},applet_canvas_true_fullscreen=!0,set_up_canvas_resizer(),document.querySelector("#output-canvas").addEventListener("mousedown",function(t){a=!0,i=t.clientX,r=t.clientY,n||o||(n=!0,window.requestAnimationFrame(J))}),document.querySelector("#output-canvas").addEventListener("mousemove",function(t){if(a){t.preventDefault();let n=t.clientX,o=t.clientY,a=n-i,c=o-r;(d+=a/e*Math.PI)>=2*Math.PI?d-=2*Math.PI:d<0&&(d+=2*Math.PI),(h-=c/e*Math.PI)>Math.PI-.01?h=Math.PI-.01:h<.01&&(h=.01),i=n,r=o,K()}}),document.documentElement.addEventListener("mouseup",function(t){n=(a=!1)||c||u||s||l||m||f}),document.querySelector("#output-canvas").addEventListener("touchstart",function(t){a=!0,i=t.touches[0].clientX,r=t.touches[0].clientY,2===t.touches.length?(m=!0,f=!1):3===t.touches.length&&(f=!0,m=!1),n||o||(n=!0,window.requestAnimationFrame(J))}),document.querySelector("#output-canvas").addEventListener("touchmove",function(t){t.preventDefault();let n=t.touches[0].clientX,o=t.touches[0].clientY,a=n-i,c=o-r;Math.abs(a)>20||Math.abs(c)>20||((d+=a/e*Math.PI)>=2*Math.PI?d-=2*Math.PI:d<0&&(d+=2*Math.PI),(h-=c/e*Math.PI)>Math.PI-.01?h=Math.PI-.01:h<.01&&(h=.01),i=n,r=o,K())}),document.querySelector("#output-canvas").addEventListener("touchend",function(t){2===t.touches.length?(m=!0,f=!1):3===t.touches.length?(f=!0,m=!1):(m=!1,f=!1,0===t.touches.length&&(a=!1)),n=a||c||u||s||l||m||f}),document.documentElement.addEventListener("keydown",function(t){"INPUT"!==document.activeElement.tagName&&(87===t.keyCode?c=!0:83===t.keyCode&&(u=!0),68===t.keyCode?s=!0:65===t.keyCode&&(l=!0),n||o||(n=!0,window.requestAnimationFrame(J)))}),document.documentElement.addEventListener("keyup",function(t){87===t.keyCode?c=!1:83===t.keyCode&&(u=!1),68===t.keyCode?s=!1:65===t.keyCode&&(l=!1),n=a||c||u||s||l||m||f}),setTimeout(function(){let e=$(t,t.VERTEX_SHADER,G),n=$(t,t.FRAGMENT_SHADER,O);V=t.createProgram(),t.attachShader(V,e),t.attachShader(V,n),t.linkProgram(V),t.getProgramParameter(V,t.LINK_STATUS)||(console.log(`Couldn't link shader program: ${t.getShaderInfoLog(shader)}`),t.deleteProgram(V));t.useProgram(V);let o=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,0,-1,1,0,1,-1,0,1,1,0]),t.STATIC_DRAW),V.position_attribute=t.getAttribLocation(V,"position"),t.enableVertexAttribArray(V.position_attribute),t.vertexAttribPointer(V.position_attribute,3,t.FLOAT,!1,0,0),V.aspect_ratio_uniform=t.getUniformLocation(V,"aspect_ratio"),V.image_size_uniform=t.getUniformLocation(V,"image_size"),V.camera_pos_uniform=t.getUniformLocation(V,"camera_pos"),V.image_plane_center_pos_uniform=t.getUniformLocation(V,"image_plane_center_pos"),V.forward_vec_uniform=t.getUniformLocation(V,"forward_vec"),V.right_vec_uniform=t.getUniformLocation(V,"right_vec"),V.up_vec_uniform=t.getUniformLocation(V,"up_vec"),V.focal_length_uniform=t.getUniformLocation(V,"focal_length"),V.light_pos_uniform=t.getUniformLocation(V,"light_pos"),V.power_uniform=t.getUniformLocation(V,"power"),V.c_uniform=t.getUniformLocation(V,"c"),V.rotation_matrix_uniform=t.getUniformLocation(V,"rotation_matrix"),V.julia_proportion_uniform=t.getUniformLocation(V,"julia_proportion"),t.uniform1f(V.aspect_ratio_uniform,g/y),t.uniform1i(V.image_size_uniform,v),t.uniform3fv(V.camera_pos_uniform,z),t.uniform3fv(V.image_plane_center_pos_uniform,M),t.uniform3fv(V.forward_vec_uniform,b),t.uniform3fv(V.right_vec_uniform,S),t.uniform3fv(V.up_vec_uniform,q),t.uniform1f(V.focal_length_uniform,N),t.uniformMatrix3fv(V.rotation_matrix_uniform,!1,[1,0,0,0,1,0,0,0,1]),t.uniform3fv(V.light_pos_uniform,X),t.uniform1f(V.power_uniform,A),t.uniform3fv(V.c_uniform,x),t.uniform1f(V.julia_proportion_uniform,I),t.viewport(0,0,g,y),K(),window.requestAnimationFrame(J)},500);const G="\n\t\tattribute vec3 position;\n\t\tvarying vec2 uv;\n\n\t\tvoid main(void)\n\t\t{\n\t\t\tgl_Position = vec4(position, 1.0);\n\n\t\t\t//Interpolate quad coordinates in the fragment shader.\n\t\t\tuv = position.xy;\n\t\t}\n\t",O="\n\t\tprecision highp float;\n\t\t\n\t\tvarying vec2 uv;\n\t\t\n\t\tuniform float aspect_ratio;\n\t\t\n\t\tuniform vec3 camera_pos;\n\t\tuniform vec3 image_plane_center_pos;\n\t\tuniform vec3 forward_vec;\n\t\tuniform vec3 right_vec;\n\t\tuniform vec3 up_vec;\n\t\t\n\t\tuniform float focal_length;\n\t\t\n\t\tuniform vec3 light_pos;\n\t\tconst float light_brightness = 2.0;\n\t\t\n\t\tuniform int image_size;\n\t\t\n\t\t\n\t\t\n\t\tconst float clip_distance = 1000.0;\n\t\tconst int max_marches = 64; //Change to 512 to eliminate flickering in animations\n\t\tconst vec3 fog_color = vec3(0.0, 0.0, 0.0);\n\t\tconst float fog_scaling = .2;\n\t\tconst int num_iterations = 32;\n\t\t\n\t\tuniform float power;\n\t\tuniform vec3 c;\n\t\tuniform float julia_proportion;\n\t\t\n\t\tvec3 color;\n\t\t\n\t\t\n\t\t\n\t\tuniform mat3 rotation_matrix;\n\t\t\n\t\t\n\t\t\n\t\tfloat distance_estimator(vec3 pos)\n\t\t{\n\t\t\tvec3 z = pos;\n\t\t\t\n\t\t\tfloat r = length(z);\n\t\t\tfloat dr = 1.0;\n\t\t\t\n\t\t\tcolor = vec3(1.0, 1.0, 1.0);\n\t\t\tfloat color_scale = .5;\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < num_iterations; iteration++)\n\t\t\t{\n\t\t\t\tif (r > 16.0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat theta = acos(z.z / r);\n\t\t\t\t\n\t\t\t\tfloat phi = atan(z.y, z.x);\n\t\t\t\t\n\t\t\t\tdr = pow(r, power - 1.0) * power * dr + 1.0;\n\t\t\t\t\n\t\t\t\ttheta *= power;\n\t\t\t\t\n\t\t\t\tphi *= power;\n\t\t\t\t\n\t\t\t\tz = pow(r, power) * vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\t\t\t\n\t\t\t\tz += mix(pos, c, julia_proportion);\n\t\t\t\t\n\t\t\t\tz = rotation_matrix * z;\n\t\t\t\t\n\t\t\t\tr = length(z);\n\t\t\t\t\n\t\t\t\tcolor = mix(color, abs(z / r), color_scale);\n\t\t\t\t\n\t\t\t\tcolor_scale *= .5;\n\t\t\t}\n\t\t\t\n\t\t\tcolor /= max(max(color.x, color.y), color.z);\n\t\t\t\n\t\t\treturn .5 * log(r) * r / dr;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 get_surface_normal(vec3 pos)\n\t\t{\n\t\t\tfloat base = distance_estimator(pos);\n\t\t\t\n\t\t\tfloat x_step = distance_estimator(pos + vec3(.000001, 0.0, 0.0));\n\t\t\tfloat y_step = distance_estimator(pos + vec3(0.0, .000001, 0.0));\n\t\t\tfloat z_step = distance_estimator(pos + vec3(0.0, 0.0, .000001));\n\t\t\t\n\t\t\treturn normalize(vec3(x_step - base, y_step - base, z_step - base));\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 compute_shading(vec3 pos, int iteration)\n\t\t{\n\t\t\tvec3 surface_normal = get_surface_normal(pos);\n\t\t\t\n\t\t\tvec3 light_direction = normalize(light_pos - pos);\n\t\t\t\n\t\t\tfloat dot_product = dot(surface_normal, light_direction);\n\t\t\t\n\t\t\tfloat light_intensity = light_brightness * max(dot_product, -.25 * dot_product);\n\t\t\t\n\t\t\t//The last factor adds ambient occlusion.\n\t\t\tcolor = color * light_intensity * max(1.0 - float(iteration) / float(max_marches), 0.0);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Apply fog.\n\t\t\tfloat distance_from_camera = length(pos - camera_pos);\n\t\t\t\n\t\t\tfloat fog_amount = 1.0 - exp(-distance_from_camera * fog_scaling);\n\t\t\t\n\t\t\treturn mix(color, fog_color, fog_amount);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvec3 raymarch(vec3 start_pos)\n\t\t{\n\t\t\t//That factor of .9 is important -- without it, we're always stepping as far as possible, which results in artefacts and weirdness.\n\t\t\tvec3 ray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\n\t\t\tvec3 final_color = fog_color;\n\t\t\t\n\t\t\tfloat epsilon = 0.0;\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\t\n\t\t\tfloat last_distance = 1000.0;\n\t\t\t\n\t\t\t//int slowed_down = 0;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor (int iteration = 0; iteration < max_marches; iteration++)\n\t\t\t{\n\t\t\t\tvec3 pos = start_pos + t * ray_direction_vec;\n\t\t\t\t\n\t\t\t\t//This prevents overstepping, and is honestly a pretty clever fix.\n\t\t\t\tfloat distance = min(distance_estimator(pos), last_distance);\n\t\t\t\tlast_distance = distance;\n\t\t\t\t\n\t\t\t\t//This lowers the detail far away, which makes everything run nice and fast.\n\t\t\t\tif (distance / float(image_size) * 1.5 > epsilon)\n\t\t\t\t{\n\t\t\t\t\tepsilon = distance / float(image_size) * 1.5;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (distance < epsilon)\n\t\t\t\t{\n\t\t\t\t\tfinal_color = compute_shading(pos, iteration);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Uncomment to add aggressive understepping when close to the fractal boundary, which helps to prevent flickering but is a significant performance hit.\n\t\t\t\t/*\n\t\t\t\telse if (last_distance / distance > .9999 && slowed_down == 0)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .125;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if (last_distance / distance <= .9999 && slowed_down == 1)\n\t\t\t\t{\n\t\t\t\t\tray_direction_vec = normalize(start_pos - camera_pos) * .9;\n\t\t\t\t\t\n\t\t\t\t\tslowed_down = 0;\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\telse if (t > clip_distance)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tt += distance;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn final_color;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tvec3 final_color = raymarch(image_plane_center_pos + right_vec * uv.x * aspect_ratio + up_vec * uv.y);\n\t\t\t\n\t\t\t//Uncomment to use 2x antialiasing.\n\t\t\t//vec3 final_color = (raymarch(image_plane_center_pos + right_vec * (uv.x + .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x + .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x - .5 / float(image_size)) + up_vec * (uv.y + .5 / float(image_size))) + raymarch(image_plane_center_pos + right_vec * (uv.x - .5 / float(image_size)) + up_vec * (uv.y - .5 / float(image_size)))) / 4.0;\n\t\t\t\n\t\t\tgl_FragColor = vec4(final_color.xyz, 1.0);\n\t\t}\n\t";let V=null;function $(t,e,n){let o=t.createShader(e);return t.shaderSource(o,n),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)||(console.log(`Couldn't load shader: ${t.getProgramInfoLog(shaderProgram)}`),t.deleteShader(o)),o}function J(){t.drawArrays(t.TRIANGLE_STRIP,0,4),o?(!function(){let e=.5*Math.sin(Math.PI*B/120-Math.PI/2)+.5;A=k+F*e,I=U+T*e,L=C+D*e,P=R+Y*e,E=j+H*e;let n=[[Math.cos(E),-Math.sin(E),0],[Math.sin(E),Math.cos(E),0],[0,0,1]],a=[[Math.cos(P),0,-Math.sin(P)],[0,1,0],[Math.sin(P),0,Math.cos(P)]],i=[[1,0,0],[0,Math.cos(L),-Math.sin(L)],[0,Math.sin(L),Math.cos(L)]],r=Q(Q(n,a),i);t.uniformMatrix3fv(V.rotation_matrix_uniform,!1,[...r[0],...r[1],...r[2]]),t.uniform1f(V.power_uniform,A),t.uniform1f(V.julia_proportion_uniform,I),121==++B&&(o=!1)}(),window.requestAnimationFrame(J)):n&&((c||u||s||l||m||f)&&((_=p/20)<1e-6&&(_=1e-6),_>.02&&(_=.02),c||m?(z[0]+=_*b[0],z[1]+=_*b[1],z[2]+=_*b[2]):(u||f)&&(z[0]-=_*b[0],z[1]-=_*b[1],z[2]-=_*b[2]),s?(z[0]+=_*S[0]/N,z[1]+=_*S[1]/N,z[2]+=_*S[2]/N):l&&(z[0]-=_*S[0]/N,z[1]-=_*S[1]/N,z[2]-=_*S[2]/N),K()),window.requestAnimationFrame(J))}function K(){var e,n;b=[Math.cos(d)*Math.sin(h),Math.sin(d)*Math.sin(h),Math.cos(h)],S=function(t){let e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/e,t[1]/e,t[2]/e]}([b[1],-b[0],0]),n=b,q=[(e=S)[1]*n[2]-e[2]*n[1],e[2]*n[0]-e[0]*n[2],e[0]*n[1]-e[1]*n[0]],p=function(t,e,n){let o=[t,e,n],a=0,i=1;for(let u=0;u<w&&!((a=Math.sqrt((c=o,(r=o)[0]*c[0]+r[1]*c[1]+r[2]*c[2])))>16);u++){let r=Math.acos(o[2]/a),c=Math.atan2(o[1],o[0]);i=Math.pow(a,A-1)*A*i+1,r*=A,c*=A;let u=Math.pow(a,A);o[0]=u*Math.sin(r)*Math.cos(c)+((1-I)*t+I*x[0]),o[1]=u*Math.sin(r)*Math.sin(c)+((1-I)*e+I*x[1]),o[2]=u*Math.cos(r)+((1-I)*n+I*x[2]);let s=o[0],l=o[1],m=o[2],f=[[Math.cos(E),-Math.sin(E),0],[Math.sin(E),Math.cos(E),0],[0,0,1]],_=[[Math.cos(P),0,-Math.sin(P)],[0,1,0],[Math.sin(P),0,Math.cos(P)]],p=[[1,0,0],[0,Math.cos(L),-Math.sin(L)],[0,Math.sin(L),Math.cos(L)]],d=Q(Q(f,_),p);o[0]=d[0][0]*s+d[0][1]*l+d[0][2]*m,o[1]=d[1][0]*s+d[1][1]*l+d[1][2]*m,o[2]=d[2][0]*s+d[2][1]*l+d[2][2]*m}var r,c;return.5*Math.log(a)*a/i}(z[0],z[1],z[2]),N=p/2,S[0]*=N/2,S[1]*=N/2,q[0]*=N/2,q[1]*=N/2,q[2]*=N/2,M=[z[0]+N*b[0],z[1]+N*b[1],z[2]+N*b[2]],t.uniform3fv(V.camera_pos_uniform,z),t.uniform3fv(V.image_plane_center_pos_uniform,M),t.uniform3fv(V.forward_vec_uniform,b),t.uniform3fv(V.right_vec_uniform,S),t.uniform3fv(V.up_vec_uniform,q),t.uniform1f(V.focal_length_uniform,N)}function Q(t,e){return[[t[0][0]*e[0][0]+t[0][1]*e[1][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][1]*e[1][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][1]*e[1][2]+t[0][2]*e[2][2]],[t[1][0]*e[0][0]+t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][0]*e[0][1]+t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][0]*e[0][2]+t[1][1]*e[1][2]+t[1][2]*e[2][2]],[t[2][0]*e[0][0]+t[2][1]*e[1][0]+t[2][2]*e[2][0],t[2][0]*e[0][1]+t[2][1]*e[1][1]+t[2][2]*e[2][1],t[2][0]*e[0][2]+t[2][1]*e[1][2]+t[2][2]*e[2][2]]]}function Z(){e=Math.min(document.querySelector("#output-canvas").offsetWidth,document.querySelector("#output-canvas").offsetHeight)}function tt(){k=A,F=(parseFloat(document.querySelector("#power-input").value||8)||8)-k,k+F<1&&(F=0),C=L,R=P,j=E,D=parseFloat(document.querySelector("#rotation-angle-x-input").value||0)||0-C,Y=parseFloat(document.querySelector("#rotation-angle-y-input").value||0)||0-R,H=parseFloat(document.querySelector("#rotation-angle-z-input").value||0)||0-j,U=I,T=0,et()}function et(){o=!0,B=0,window.requestAnimationFrame(J)}}();